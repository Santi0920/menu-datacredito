<?php

namespace App\Http\Controllers;

use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Codedge\Fpdf\Fpdf\Fpdf;
use SimpleSoftwareIO\QrCode\Facades\QrCode;
use Illuminate\Support\Facades\Storage;
use setasign\Fpdi\Fpdi;
use Illuminate\Support\Facades\Mail;
use App\Mail\EnviarCorreo2;
use App\Mail\EnviarCorreo3;
use App\Mail\EnviarCorreo5;
use App\Mail\EnviarCorreo6;
use App\Mail\EnviarCorreo7;
use App\Mail\EnviarCorreo9;
use App\Mail\EnviarCorreo13;
use App\Mail\EnviarCorreo14;
use App\Mail\EnviarCorreo15;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Http;
use App\Models\Persona;
use App\Models\Autorizacion;



class ControllerConsultante extends Controller
{


    public function data()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Observaciones, A.Inspektor, A.FechaCorreo, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Consulta,
        A.Reporte,  B.FechaInsercion, B.NombreS, C.NombrePN, D.Consecutivof, D.Tipof, D.NombreT, E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentot D ON C.ID_Persona = D.ID_Persona
        JOIN documentoa E ON D.ID_Persona = E.ID_Persona
        WHERE A.Activado = 1 && (A.Tipo = 'Persona' OR A.Tipo = 'Empleado')  && A.Enviado = 0 && (A.TipoAsociado = 'Asociacion' OR A.TipoAsociado = 'Empleado') && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();



    }



    //listar
    public function listar()
    {
        $datos = DB::select("
            SELECT A.ID, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado,
            A.Reporte, A.Enviado, B.FechaInsercion, B.NombreS, C.NombrePN, D.Consecutivof, D.Tipof, D.NombreT
            FROM persona
            A JOIN documentosintesis B ON A.ID = B.ID_Persona JOIN documentopn C ON B.ID_Persona = C.ID_Persona JOIN documentot
            D ON C.ID_Persona = D.ID_Persona ORDER BY Nombre ASC");


        return view("Consultante/consultante")->with("datos", $datos);
    }





    public function imprimir2($id)
    {
        $sql = DB::select("SELECT persona.*, documentosintesis.FechaInsercion FROM persona
            INNER JOIN documentosintesis ON persona.ID = documentosintesis.ID_persona
            WHERE persona.ID = $id");

        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf->AddPage("landscape");
        $x = 3;
        $y = 3;
        $w = $fpdf->GetPageWidth() - 150;
        $h = $fpdf->GetPageHeight() - 134;
        $fpdf->Rect($x, $y, $w, $h, 'D');

        foreach ($sql as $resultado) {
            $fecha_actual = Carbon::now('America/Bogota');
            $fecha_string = $fecha_actual->format('d/m/Y');
            $fecha_insercion = Carbon::parse($resultado->FechaInsercion);
            $diferencia = $fecha_actual->diff($fecha_insercion);
            if ($diferencia->days <= 180) {
                $dias_restantes = 180 - $diferencia->days;
                $diferencia_str = "Vence " . ($dias_restantes == 1 ? "1 día" : "$dias_restantes días");
            } else {
                $diferencia_str = "Vencido";
            }

            //Cedula
            $fpdf->SetFont('Helvetica', 'B', 30);
            $fpdf->Cell(85, 5, utf8_decode('DATACRÉDITO:'));
            $fpdf->SetFont('Helvetica', 'B', 38);
            $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
            $fpdf->Cell(20, 12, "");
            $fpdf->Ln();



            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(26, 5, utf8_decode('Cédula: '));
            $fpdf->SetFont('Helvetica', '', 28);
            $fpdf->Cell(64.8, 5, $resultado->Cedula);



            //Nombre
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(30, 15, 'Nombre: ');
            $fpdf->SetFont('Helvetica', '', 20);
            $fpdf->Cell(60.5, 15, mb_convert_case($resultado->Nombre, MB_CASE_TITLE, "UTF-8"));

            //Apellidos
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(35, 5, 'Apellidos: ');
            $fpdf->SetFont('Arial', '', 20);
            $fpdf->Cell(70.5, 5, strtoupper(utf8_decode($resultado->Apellidos)));

            //fecha
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(59, 13.1, '' . utf8_decode($diferencia_str));
            $fpdf->SetFont('Helvetica', '', 20);


            //Cuenta Asociada
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(37, 13, 'Fecha Imp: ');
            $fpdf->SetFont('Helvetica', '', 20);
            $fpdf->Cell(1, 13, $fecha_string);

            //Score
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 31);
            $fpdf->Cell(35.7, 8, 'Score: ');
            $fpdf->SetFont('Helvetica', 'B', 48);



            if ($resultado->Score >= 650) {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            } else {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            }






            $url_qr = 'Storage/files/temp/qr-' . $resultado->ID;

            QrCode::format('png')->generate('http://app.coopserp.com/menu-datacredito/descargare-' . $id, public_path('Storage/files/tickets/qr/QR-' . $id . '.png'));


            $fpdf->Image("Storage/files/tickets/qr/QR-" . $id . ".png", 15, 107, 90, 90);

            //QRcode::png($url_qr, 'Storage/temp/'.$nombre_archivo.'.png', QR_ECLEVEL_L, 5);


            // QrCode::format('png')->size(25)->generate('/asociacion')->save('Storage/files/temp/QR-'.$nombre_archivo);
            // Agregar código QR al PDF
            // $fpdf->Image('Storage/files/temp/QR-'.$nombre_archivo.'.png', 2, 105, 100, 100);
            // $fpdf->Image("Storage/files/tickets/qr/QR-".$id.".png", 15, 107, 90, 90);
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 48);
            $fpdf->Cell(72, 40, 'Agencia: ');
            $fpdf->SetFont('Helvetica', '', 48);
            $fpdf->Cell(83, 40, utf8_decode($resultado->Agencia));

            $fpdf->Output('I', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
            $fpdf->Output('F', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
            exit;

        }
    }


    public function imprimir3($id)
    {
        $sql = DB::select("SELECT persona.*, documentosintesis.FechaInsercion, proveedor.* FROM persona
            INNER JOIN documentosintesis ON persona.ID = documentosintesis.ID_persona
            INNER JOIN proveedor ON persona.ID = proveedor.ID_persona
            WHERE persona.ID = $id");

        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf->AddPage("landscape");
        $x = 3;
        $y = 3;
        $w = $fpdf->GetPageWidth() - 150;
        $h = $fpdf->GetPageHeight() - 134;
        $fpdf->Rect($x, $y, $w, $h, 'D');

        foreach ($sql as $resultado) {
            $fecha_actual = Carbon::now('America/Bogota');
            $fecha_string = $fecha_actual->format('d/m/Y');
            $fecha_insercion = Carbon::parse($resultado->FechaInsercion);
            $diferencia = $fecha_actual->diff($fecha_insercion);
            if ($diferencia->days <= 180) {
                $dias_restantes = 180 - $diferencia->days;
                $diferencia_str = "Vence " . ($dias_restantes == 1 ? "1 día" : "$dias_restantes días");
            } else {
                $diferencia_str = "Vencido";
            }

            $tipoprov = DB::select("SELECT TipoProveedor FROM persona WHERE ID = ?", [$id]);
            $tipoproveedor = $tipoprov[0]->TipoProveedor;


            if ($tipoproveedor == "PN") {
                //Cedula
                $fpdf->SetFont('Helvetica', 'B', 30);
                $fpdf->Cell(85, 5, utf8_decode('DATACRÉDITO:'));
                $fpdf->SetFont('Helvetica', 'B', 38);
                $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
                $fpdf->Cell(20, 12, "");
                $fpdf->Ln();



                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(26, 5, utf8_decode('Cédula: '));
                $fpdf->SetFont('Helvetica', '', 28);
                $fpdf->Cell(64.8, 5, $resultado->Cedula);



                //Nombre
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(30, 15, 'Nombre: ');
                $fpdf->SetFont('Helvetica', '', 20);
                $fpdf->Cell(60.5, 15, mb_convert_case($resultado->Nombre, MB_CASE_TITLE, "UTF-8"));

                //Apellidos
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(35, 5, 'Apellidos: ');
                $fpdf->SetFont('Arial', '', 20);
                $fpdf->Cell(70.5, 5, strtoupper(utf8_decode($resultado->Apellidos)));

                //fecha
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(59, 13.1, '' . utf8_decode($diferencia_str));
                $fpdf->SetFont('Helvetica', '', 20);


                //Cuenta Asociada
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(37, 13, 'Fecha Imp: ');
                $fpdf->SetFont('Helvetica', '', 20);
                $fpdf->Cell(1, 13, $fecha_string);

                //Score
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 31);
                $fpdf->Cell(35.7, 8, 'Score: ');
                $fpdf->SetFont('Helvetica', 'B', 48);



                if ($resultado->Score >= 650) {
                    if (!empty($resultado->Reporte)) {
                        $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                    } else {
                        $fpdf->Cell(76, 8, $resultado->Score);
                    }
                    $fpdf->Ln();
                } else {
                    if (!empty($resultado->Reporte)) {
                        $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                    } else {
                        $fpdf->Cell(76, 8, $resultado->Score);
                    }
                    $fpdf->Ln();
                }

            } else {
                //Cedula
                $fpdf->SetFont('Helvetica', 'B', 30);
                $fpdf->Cell(85, 5, utf8_decode('DATACRÉDITO:'));
                $fpdf->SetFont('Helvetica', 'B', 38);
                $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
                $fpdf->Cell(20, 12, "");
                $fpdf->Ln();



                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(15, 5, utf8_decode('NIT: '));
                $fpdf->SetFont('Helvetica', '', 28);
                $fpdf->Cell(64.8, 5, $resultado->NIT);



                //Nombre
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(47, 15, utf8_decode('Razón Social: '));
                $fpdf->SetFont('Helvetica', '', 20);
                $fpdf->Cell(60.5, 15, mb_convert_case($resultado->RazonSocial, MB_CASE_TITLE, "UTF-8"));

                //Apellidos
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(19, 5, 'Tipo: ');
                $fpdf->SetFont('Arial', '', 20);
                $fpdf->Cell(70.5, 5, utf8_decode("Persona Jurídica."));

                //fecha
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(59, 13.1, '' . utf8_decode($diferencia_str));
                $fpdf->SetFont('Helvetica', '', 20);


                //Cuenta Asociada
                $fpdf->SetFont('Helvetica', 'B', 20);
                $fpdf->Cell(37, 13, 'Fecha Imp: ');
                $fpdf->SetFont('Helvetica', '', 20);
                $fpdf->Cell(1, 13, $fecha_string);

                //Score
                $fpdf->Ln();
                $fpdf->SetFont('Helvetica', 'B', 31);
                $fpdf->Cell(35.7, 8, 'Score: ');
                $fpdf->SetFont('Helvetica', 'B', 48);



                if ($resultado->Score >= 650) {
                    if (!empty($resultado->Reporte)) {
                        $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                    } else {
                        $fpdf->Cell(76, 8, $resultado->Score);
                    }
                    $fpdf->Ln();
                } else {
                    if (!empty($resultado->Reporte)) {
                        $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                    } else {
                        $fpdf->Cell(76, 8, $resultado->Score);
                    }
                    $fpdf->Ln();
                }
            }







            $fpdf->Image("Storage/files/tickets/qr/QR-" . $id . ".png", 15, 107, 90, 90);
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 48);
            $fpdf->Cell(72, 40, 'Agencia: ');
            $fpdf->SetFont('Helvetica', '', 48);
            $fpdf->Cell(83, 40, utf8_decode($resultado->Agencia));

            if ($tipoproveedor == "PN") {
                $fpdf->Output('I', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
                $fpdf->Output('F', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
            } else {
                $fpdf->Output('I', 'Storage/files/tickets/Ticket-' . $resultado->NIT . '.pdf');
                $fpdf->Output('F', 'Storage/files/tickets/Ticket-' . $resultado->NIT . '.pdf');
            }
            exit;

        }
    }
    public function descargar3($id, Request $request)
    {
        $sql = DB::select("SELECT persona.ID, persona.TipoProveedor, persona.Cedula, proveedor.NIT, documentosintesis.NombreS, documentopn.NombrePN
                FROM persona
                INNER JOIN documentosintesis ON persona.ID = documentosintesis.ID_Persona
                INNER JOIN documentopn ON documentosintesis.ID = documentopn.ID_Persona
                INNER JOIN proveedor ON documentopn.ID_Persona = proveedor.ID_Persona
                WHERE persona.ID = $id");


        $tipoprov = DB::select("SELECT TipoProveedor FROM persona WHERE ID = ?", [$id]);
        $tipoproveedor = $tipoprov[0]->TipoProveedor;


        if ($tipoproveedor == "PN") {
            $Cedula = DB::select("SELECT Cedula FROM persona WHERE ID = ?", [$id]);
            $CedulaPersona = $Cedula[0]->Cedula;
            $rutaticket = "Storage/files/tickets/Ticket-" . $CedulaPersona . ".pdf";

            $NombreS = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
            $NombreSintesis = $NombreS[0]->NombreS;
            $ruta_sintesis = "Storage/files/sintesis/" . $NombreSintesis;

            $Nombre = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);
            $NombrePN = $Nombre[0]->NombrePN;
            $ruta_pn = "Storage/files/pn/" . $NombrePN;
        } else if ($tipoproveedor == "PJ") {
            $NIT = DB::select("SELECT NIT FROM proveedor WHERE ID_Persona = ?", [$id]);
            $NITPersona = $NIT[0]->NIT;
            $rutaticket = "Storage/files/tickets/Ticket-" . $NITPersona . ".pdf";

            $NombreS = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
            $NombreSintesis = $NombreS[0]->NombreS;
            $ruta_sintesis = "Storage/files/sintesis/" . $NombreSintesis;

            $Nombre = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);
            $NombrePN = $Nombre[0]->NombrePN;
            $ruta_pn = "Storage/files/pn/" . $NombrePN;

        }



        if (file_exists(public_path($rutaticket))) {
            echo "<a href='" . asset($rutaticket) . "' download id='enlace-descarga1'></a>";
        }

        if (file_exists(public_path($ruta_sintesis))) {
            echo "<a href='" . asset($ruta_sintesis) . "' download id='enlace-descarga2'></a>";
        }

        if (file_exists(public_path($ruta_pn))) {
            echo "<a href='" . asset($ruta_pn) . "' download id='enlace-descarga3'></a>";
        }

        echo '<script>
                    if (document.getElementById("enlace-descarga1")) {
                        document.getElementById("enlace-descarga1").click();
                    }
                    if (document.getElementById("enlace-descarga2")) {
                        document.getElementById("enlace-descarga2").click();
                    }
                    if (document.getElementById("enlace-descarga3")) {
                        document.getElementById("enlace-descarga3").click();
                    }
                    setTimeout(function() {
                        window.location.href = "http://localhost/menu_datacredito/public/index";
                    }, 100);
                </script>';

    }

    public function imprimir($id)
    {
        $sql = DB::select("SELECT persona.*, documentosintesis.FechaInsercion FROM persona
        INNER JOIN documentosintesis ON persona.ID = documentosintesis.ID_persona
        WHERE persona.ID = $id");

        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf = new Fpdf('P', 'mm', 'A4');
        $fpdf->AddPage("landscape");
        $x = 3;
        $y = 3;
        $w = $fpdf->GetPageWidth() - 150;
        $h = $fpdf->GetPageHeight() - 134;
        $fpdf->Rect($x, $y, $w, $h, 'D');

        foreach ($sql as $resultado) {
            $fecha_actual = Carbon::now('America/Bogota');
            $fecha_string = $fecha_actual->format('d/m/Y');
            $fecha_insercion = Carbon::parse($resultado->FechaInsercion);
            $diferencia = $fecha_actual->diff($fecha_insercion);
            if ($diferencia->days <= 180) {
                $dias_restantes = 180 - $diferencia->days;
                $diferencia_str = "Vence " . ($dias_restantes == 1 ? "1 día" : "$dias_restantes días");
            } else {
                $diferencia_str = "Vencido";
            }

            //Cedula
            $fpdf->SetFont('Helvetica', 'B', 30);
            $fpdf->Cell(85, 5, utf8_decode('DATACRÉDITO:'));
            $fpdf->SetFont('Helvetica', 'B', 38);
            $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
            $fpdf->Cell(20, 12, "");
            $fpdf->Ln();



            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(26, 5, utf8_decode('Cédula: '));
            $fpdf->SetFont('Helvetica', '', 28);
            $fpdf->Cell(64.8, 5, $resultado->Cedula);

            //Estado
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(27, 5, 'Estado: ');
            $fpdf->SetFont('Helvetica', '', 20);
            $fpdf->Cell(1, 5, strtoupper($resultado->Estado));
            $fpdf->Ln();

            //Nombre
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(30, 15, 'Nombre: ');
            $fpdf->SetFont('Helvetica', '', 20);
            $fpdf->Cell(60.5, 15, mb_convert_case($resultado->Nombre, MB_CASE_TITLE, "UTF-8"));

            //Apellidos
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(35, 5, 'Apellidos: ');
            $fpdf->SetFont('Arial', '', 20);
            $fpdf->Cell(70.5, 5, strtoupper(utf8_decode($resultado->Apellidos)));

            //fecha
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(59, 13.1, '' . utf8_decode($diferencia_str));
            $fpdf->SetFont('Helvetica', '', 20);


            //Cuenta Asociada
            $fpdf->SetFont('Helvetica', 'B', 20);
            $fpdf->Cell(37, 13, 'Fecha Imp: ');
            $fpdf->SetFont('Helvetica', '', 20);
            $fpdf->Cell(1, 13, $fecha_string);

            //Score
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 31);
            $fpdf->Cell(35.7, 8, 'Score: ');
            $fpdf->SetFont('Helvetica', 'B', 48);



            if ($resultado->Score >= 650) {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            } else {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            }





            QrCode::format('png')->generate('http://app.coopserp.com/menu-datacredito/descargar-' . $id, public_path('Storage/files/tickets/qr/QR-' . $id . '.png'));


            $fpdf->Image("Storage/files/tickets/qr/QR-" . $id . ".png", 15, 107, 90, 90);
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B', 48);
            $fpdf->Cell(72, 40, 'Agencia: ');
            $fpdf->SetFont('Helvetica', '', 48);
            $fpdf->Cell(83, 40, utf8_decode($resultado->Agencia));

            $fpdf->Output('I', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
            $fpdf->Output('F', 'Storage/files/tickets/Ticket-' . $resultado->Cedula . '.pdf');
            exit;

        }
    }



    public function create(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }
            $usuarioActual = Auth::user();
            $agencia = $usuarioActual->agenciau;

            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            $idPersona = DB::table('persona')->insertGetId([
                'Cedula' => $request->Cedula,
                'Nombre' => $request->Nombre,
                'Apellidos' => strtoupper($request->Apellidos),
                'Score' => null,
                'CuentaAsociada' => $request->CuentaAsociada,
                'Agencia' => $agencia,
                'Estado' => $request->Estado,
                'Reporte' => null,
                'Tipo' => 'Persona',
                'Enviado' => 1,
                'TipoAsociado' => 'Asociacion',
                'FechaCorreo' => $fechaHoraActual,
                'Inspektor' => $request->Inspektor
            ]);
            $idPersona = DB::getPdo()->lastInsertId();
            if ($request->hasFile('NombreT') != null) {
                $file3 = $request->file('NombreT');
                $filename3 = $file3->getClientOriginalName();
                $archivo3 = DB::select("SELECT NombreT FROM documentot WHERE NombreT = ?", [$filename3]);
            }
            if (!empty($archivo3)) {
                $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                return back()->withErrors([
                    'message' => 'El archivo con Formato ' . $request->Tipof . ' - "' . $filename3 . '" ya existe!'
                ]);

            }

            if ($request->hasFile('NombreA') != null) {
                $file4 = $request->file('NombreA');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Autorización - "' . $filename4 . '" ya existe!'
                    ]);
                }
            }



            if ($request->hasFile('NombreS')) {
                $file = $request->file('NombreS');
                $dir = 'Storage/files/sintesis/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                    $sql5 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion,
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql5 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                    $request->FechaInsercion ?? null,
                    null,
                    $idPersona
                ]);
            }

            if ($request->hasFile('NombreA')) {
                $file = $request->file('NombreA');
                if ($file != null) {
                    $dir = 'Storage/files/autorizacion/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($file->getClientOriginalName() !== 'Autorizacion-' . $request->Cedula . '.pdf') {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->Cedula . '.pdf'
                        ]);
                    }
                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreA')->move($dir, $filename);
                        $sql5 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                            $filename ?? null,
                            $request->consecutivoa,
                            null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
            } else {
                $sql5 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    null,
                    $request->consecutivoa,
                    $idPersona
                ]);
            }
            if ($request->hasFile('NombrePN')) {
                $file = $request->file('NombrePN');
                $dir = 'Storage/files/pn/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                    $sql5 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql5 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                    null,
                    $idPersona
                ]);
            }//


            if ($request->hasFile('NombreT')) {
                $file = $request->file('NombreT');
                $filename2 = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();
                $dir3 = "";
                $ruta_carga3 = "";

                // Verificar si la extensión es PDF
                if ($extension === 'pdf') {
                    if ($request->Tipof == "T1") {
                        $dir3 = "Storage/files/t1/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T1-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T1-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    } elseif ($request->Tipof == "T2") {
                        $dir3 = "Storage/files/t2/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T2-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T2-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    }

                    if ($request->Tipof != "N/A") {
                        $uploadSucces = $file->move($dir3, $ruta_carga3);
                    }

                    $sql5 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                        $filename2 ?? null,
                        $request->Consecutivof,
                        $request->Tipof ?? 'N/A',
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql5 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    $request->Consecutivof,
                    $request->Tipof ?? 'N/A',
                    $idPersona
                ]);
            }





            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;

            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            $ip = $_SERVER['REMOTE_ADDR'];

            $usuarioActual = Auth::user();
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoAsociado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);
            if ($sql5) {
                $cedula = $request->Cedula;
                $talento = "";
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo2($cedula, $talento, $agencia));
                }
                return back()->with("correcto2", "Persona Registrada correctamente!")->with("showLoadingAlert", true);
            } else {
                return back()->with("incorrecto", "Error al insertar el registro!");
            }

        }
    }

    public function update(Request $request, $id)
    {


        $archivo = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $nombre_archivo = $archivo[0]->NombreS;
        $filename = $nombre_archivo;
        if ($archivo) {
            $nombre_archivo = $archivo[0]->NombreS;
            if ($request->hasFile('archivo22')) {
                $file = $request->file('archivo22');
                $filename = $file->getClientOriginalName();
            }



            $nuevo_archivo = $filename;
            if ($archivo) {
                $pdfactual = $nombre_archivo;
            } else {
                $pdfactual = null;
            }
        }
        if (!empty($archivo) && $archivo != $pdfactual) {
            $nuevo_nombre = $nuevo_archivo;
        }

        if (isset($nombre_archivo) && isset($nuevo_nombre) && $nombre_archivo !== $nuevo_nombre) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo SINTESIS ' . $nombre_archivo . ' actual (' . $nombre_archivo . ').\n'
            ]);
        }

        $fecha = DB::select("SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $fechai = $fecha[0]->FechaInsercion;
        $fechadef = $request->fecha3;

        $archivo2 = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);

        $nombre_archivo2 = $archivo2[0]->NombrePN;
        $filename2 = $nombre_archivo2;
        if ($archivo2) {
            $nombre_archivo2 = $archivo2[0]->NombrePN;
            if ($request->hasFile('archivo11')) {
                $file2 = $request->file('archivo11');
                $filename2 = $file2->getClientOriginalName();
            }


            $nuevo_archivo2 = $filename2;
            if ($archivo2) {
                $pdfactual2 = $nombre_archivo2;
            } else {
                $pdfactual2 = null;
            }
        }

        if (!empty($archivo2) && $archivo2 != $pdfactual2) {
            $nuevo_nombre2 = $nuevo_archivo2;
        }

        if (isset($nombre_archivo2) && isset($nuevo_nombre2) && $nombre_archivo2 !== $nuevo_nombre2) {

            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo PN actual (' . $nombre_archivo2 . ').\n'
            ]);
        }

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 = $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }
        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }

        if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÓN ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
            ]);

        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }




            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');

            if ($request->Consulta == true) {
                $sql7 = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Score = ?, Agencia = ?, Estado = ?, Reporte = ? , CuentaAsociada= ?, FechaCorreo = ?, Inspektor = ?, Enviado = ?, Consulta =?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->score3,
                    $request->agencia3,
                    $request->estado3,
                    $request->reporte3,
                    $request->cuenta3,
                    $fechaHoraActual,
                    $request->Inspektor2,
                    1,
                    1
                ]);
            } else {
                $sql6 = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Score = ?, Agencia = ?, Estado = ?, Reporte = ? , CuentaAsociada= ?, FechaCorreo = ?, Inspektor = ?, Enviado = ?, Consulta =?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->score3,
                    $request->agencia3,
                    $request->estado3,
                    $request->reporte3,
                    $request->cuenta3,
                    $fechaHoraActual,
                    $request->Inspektor2,
                    0,
                    0
                ]);

            }




            $sql3 = DB::select("SELECT NombreT, Tipof FROM documentot WHERE ID_Persona=$id");
            $filename = $sql3[0]->NombreT;
            $tipof = $sql3[0]->Tipof;
            if ($filename != null) {
                if ($tipof == "T1") {
                    $dir3 = "Storage/files/t1/";
                    $ruta_carga3 = $dir3 . $filename;
                    if (file_exists($ruta_carga3)) {
                        unlink($ruta_carga3);
                    }

                } elseif ($tipof == "T2") {
                    $dir3 = "Storage/files/t2/";
                    $ruta_carga3 = $dir3 . $filename;
                    if (file_exists($ruta_carga3)) {
                        unlink($ruta_carga3);
                    }

                }
            }

            if ($request->hasFile('archivo33')) {
                $file = $request->file('archivo33');
                $filename2 = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();
                $dir3 = "";
                $ruta_carga3 = "";

                if ($extension === 'pdf') {
                    if ($request->tipof3 == "T1") {
                        $dir3 = "Storage/files/t1/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T1-' . $request->cedula2 . '.pdf') {
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T1-' . $request->cedula2 . '.pdf'
                            ]);
                        }
                    } elseif ($request->tipof3 == "T2") {
                        $dir3 = "Storage/files/t2/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T2-' . $request->cedula2 . '.pdf') {
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T2-' . $request->cedula2 . '.pdf'
                            ]);
                        }
                    }



                    if ($request->tipof3 != "N/A") {
                        $uploadSucces = $file->move($dir3, $ruta_carga3);
                    }

                    $sql5 = DB::update('UPDATE documentot SET NombreT = ?, Consecutivof = ?, Tipof = ? WHERE ID_Persona = ?', [
                        $filename2 ?? null,
                        $request->consecutivof33,
                        $request->tipof3,
                        $id
                    ]);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql5 = DB::update('UPDATE documentot SET NombreT = ?, Consecutivof = ?, Tipof = ? WHERE ID_Persona = ?', [
                    null,
                    $request->consecutivof33,
                    $request->tipof3,
                    $id
                ]);
            }

            $dir3 = 'Storage/files/autorizacion/';
            if ($request->hasFile('archivo3') && !empty($filename3)) {
                $file3 = $request->file('archivo3');

                if ($file3->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf') {
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula2 . '.pdf'
                    ]);
                }
                if ($file3->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess = $file3->move($dir3, $filename3);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }
            if ($request->hasFile('archivo3')) {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33,
                    $nuevo_archivo3
                ]);
            } else {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33
                ]);
            }

            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            $ip = $_SERVER['REMOTE_ADDR'];

            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizoAsociado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);






            if ($request->Tipoasociado == true) {

                $sql7 = DB::update("UPDATE persona SET TipoAsociado = ?, Enviado = ?, FechaCorreo = ? WHERE ID = $id", [
                    'Credito',
                    1,
                    $fechaHoraActual


                ]);

                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Credito')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo9($cedula, $nombreUsuario, $recibo));
                }
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2, será consultado por el dpto de cumplimiento para realizar un crédito, espere su respuesta!");
                // puede realizar un crédito
            } else {
                if (isset($sql4) && $sql4 == true) {
                    $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                    $nombreUsuario = $persona ? ucfirst(
                        strtolower($persona->Nombre)
                    ) . ' ' . $persona->Apellidos : '';
                    $recibo = $request->recibo;
                    $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                    $cedula = $cedulaRegistrada[0]->Cedula;
                    $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo3($cedula, $nombreUsuario, $recibo));
                    }
                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2, será consultado por el dpto de cumplimiento, espere su respuesta!");
                } else if ($sql2 = true || $sql5) {
                    $cedula = $request->cedula2;
                    $tipo = " Asociación";
                    $agencia = $request->agencia3;
                    $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo15($cedula, $agencia, $tipo));
                    }
                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 fue actualizado correctamente!");
                } else {
                    return back()->with("incorrecto", "Error al modificar el registro!");
                }
            }
        }
    }


    public function data2()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
            SELECT DISTINCT A.ID, A.Inspektor, A.FechaCorreo, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Consulta, A.TipoAsociado, A.ConsecutivoRC, A.ObRC,
            A.Reporte, A.Observaciones, A.Linea, B.FechaInsercion, B.NombreS, C.NombrePN, D.Consecutivof, D.Tipof, D.NombreT, E.NombreA, E.ConsecutivoA, A.NombreAnalisis, A.Monto, A.ConsecutivoAnalisis, A.DeudaEsp
            FROM persona A
            JOIN documentosintesis B ON A.ID = B.ID_Persona
            JOIN documentopn C ON B.ID_Persona = C.ID_Persona
            JOIN documentot D ON C.ID_Persona = D.ID_Persona
            JOIN documentoa E ON D.ID_Persona = E.ID_Persona
            WHERE A.Activado = 1 AND (A.Tipo = 'Persona' OR A.Tipo = 'Empleado') AND A.Enviado = 0 AND A.Agencia = '$agenciaU' AND A.TipoAsociado = 'Credito'
            ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();



    }
    public function createcredito(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }


            $idPersona = DB::getPdo()->lastInsertId();
            if ($request->hasFile('NombreA') != null) {
                $file4 = $request->file('NombreA');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Autorizacion-"' . $filename4 . '" o Analisis-"' . $filename4 . '"  ya existe!'
                    ]);
                }
            }


            if ($request->hasFile('NombreAnalisis') != null) {
                $file4 = $request->file('NombreAnalisis');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreAnalisis FROM persona WHERE NombreAnalisis = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo RC-"' . $filename4 . '" ya existe!'
                    ]);
                }
            }


            if ($request->hasFile('NombreAnalisis')) {
                $file5 = $request->file('NombreAnalisis');
                if ($file5 != null) {
                    $dir5 = 'Storage/files/rccreditos/';
                    $filename5 = $file5->getClientOriginalName();
                    $extension5 = $file5->getClientOriginalExtension();

                    if ($file5->getClientOriginalName() !== 'RC-' . $request->Cedula . '.pdf') {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->Cedula . '.pdf'
                        ]);
                    }

                    $usuarioActual = Auth::user();
                    $agencia = $usuarioActual->agenciau;
                    if ($extension5 === 'pdf') {
                        date_default_timezone_set('America/Bogota');
                        $fechaHoraActual = date('Y-m-d H:i:s');
                        $uploadSucces5 = $request->file('NombreAnalisis')->move($dir5, $filename5);
                        $sql4 = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoAsociado, NombreAnalisis, Monto, DeudaEsp, Linea, FechaCorreo, ConsecutivoRC, ObRC, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?)', [
                            $request->Cedula,
                            $request->Nombre,
                            $request->Apellidos,
                            null,
                            $request->CuentaAsociada,
                            $agencia,
                            $request->Estado,
                            null,
                            'Persona',
                            1,
                            'Credito',
                            $filename5 ?? null,
                            $request->Monto,
                            $request->Monto,
                            $request->Linea,
                            $fechaHoraActual,
                            $request->ConsecutivoRC,
                            $request->ObRC,
                            $request->Inspektor

                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
            } else {
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql4 = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoAsociado, NombreAnalisis, Monto, DeudaEsp, Linea, FechaCorreo, ConsecutivoRC, ObRC) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?)', [
                    $request->Cedula,
                    $request->Nombre,
                    $request->Apellidos,
                    null,
                    $request->CuentaAsociada,
                    $agenciaU,
                    $request->Estado,
                    null,
                    'Persona',
                    1,
                    'Credito',
                    $filename5 ?? null,
                    $request->Monto,
                    $request->Monto,
                    $request->Linea,
                    $fechaHoraActual,
                    $request->ConsecutivoRC,
                    $request->ObRC
                ]);
            }

            $idPersona = DB::getPdo()->lastInsertId();

            if ($request->hasFile('NombreS')) {
                $file = $request->file('NombreS');
                $dir = 'Storage/files/sintesis/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion,
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                    $request->FechaInsercion ?? null,
                    null,
                    $idPersona
                ]);
            }

            if ($request->hasFile('NombreA')) {
                $file = $request->file('NombreA');
                if ($file != null) {
                    $dir = 'Storage/files/autorizacion/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreA')->move($dir, $filename);
                        $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                            $filename ?? null,
                            $request->consecutivoa,
                            null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
            } else {
                $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    null,
                    $request->consecutivoa,
                    $idPersona
                ]);
            }
            if ($request->hasFile('NombrePN')) {
                $file = $request->file('NombrePN');
                $dir = 'Storage/files/pn/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                    null,
                    $idPersona
                ]);
            }//


            if ($request->hasFile('NombreT')) {
                $file = $request->file('NombreT');
                $filename2 = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();
                $dir3 = "";
                $ruta_carga3 = "";

                // Verificar si la extensión es PDF
                if ($extension === 'pdf') {
                    if ($request->Tipof == "T1") {
                        $dir3 = "Storage/files/t1/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T1-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T1-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    } elseif ($request->Tipof == "T2") {
                        $dir3 = "Storage/files/t2/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T2-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T2-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    }

                    if ($request->Tipof != "N/A") {
                        $uploadSucces = $file->move($dir3, $ruta_carga3);
                    }

                    $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                        $filename2 ?? null,
                        $request->Consecutivof,
                        $request->Tipof ?? 'N/A',
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    $request->Consecutivof,
                    $request->Tipof ?? 'N/A',
                    $idPersona
                ]);
            }




            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoUsuario', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);

            $totalDeuda = $request->Monto;

            if ($totalDeuda >= 7000001) {
                $cedula = $request->Cedula;
                $talento = "";
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo14($cedula, $talento, $agencia));
                }
                return back()->with("correcto", "Se envio correctamente al generador de consulta. La de deuda especial de solicitud de crédito supera $7'000.001!");
            }
            if ($request->monto >= 3000001) {
                $cedula = $request->Cedula;
                $talento = "";
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo14($cedula, $talento, $agencia));
                }

                return back()->with("correcto", "Se envio correctamente al generador de consulta. La de deuda especial de solicitud de crédito supera $3'000.001!");
            }

            if ($sql4 == true || $sql2 = true) {
                $cedula = $request->Cedula;
                $talento = "";
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo14($cedula, $talento, $agencia));
                }
                return back()->with("correcto", "Persona Registrada correctamente!")->with("showLoadingAlert", true);

            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }

        }

    }

    public function data3()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Observaciones, A.Inspektor, A.Cedula,A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, B.FechaInsercion, B.NombreS, C.NombrePN,E.NombreA, D.Consecutivof, D.Tipof, D.NombreT, E.ConsecutivoA, E.NombreContrato
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentot D ON C.ID_Persona = D.ID_Persona
        JOIN documentoa E ON D.ID_Persona = E.ID_Persona
        WHERE A.Activado = 1 && A.TipoAsociado = 'NuevoEmpleado' && A.Tipo = 'NuevoEmpleado'  && A.Enviado = 0  && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();

    }

    public function data4()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Inspektor, A.Observaciones, A.Cedula, A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, A.TipoProveedor, A.NombreAnalisis, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN, P.NIT, P.NombreRC, P.ValorCompra, P.ValorAcumulado, P.RazonSocial,E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        JOIN proveedor P ON E.ID_Persona = P.ID_Persona
        WHERE A.Activado = 1 && A.Tipo = 'Proveedor' && Enviado = 0  && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC
    ");


        return datatables()->of($user)->toJson();



    }


    public function data5()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Cedula, A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, B.FechaInsercion, B.NombreS, C.NombrePN,E.NombreA, E.ConsecutivoA, E.NombreContrato, D.Consecutivof, D.Tipof, D.NombreT
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentot D ON C.ID_Persona = D.ID_Persona
        JOIN documentoa E ON D.ID_Persona = E.ID_Persona
        WHERE A.Activado = 1 && A.Tipo = 'NuevoEmpleado' && A.Enviado = 0 && A.Agencia = '$agenciaU' && A.TipoAsociado = 'NuevoEmpleado'
        ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();



    }

    public function data6()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Cedula, A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, A.TipoProveedor, A.NombreAnalisis, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN, P.NIT, P.NombreRC, P.ValorCompra, P.ValorAcumulado, P.RazonSocial,E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        JOIN proveedor P ON E.ID_Persona = P.ID_Persona
        WHERE A.Activado = 1 && A.Tipo = 'Proveedor' && Enviado = 0  && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC
    ");


        return datatables()->of($user)->toJson();



    }


    //registrar
    public function create2(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }

            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            $usuarioActual = Auth::user();
            $agenciaU = $usuarioActual->agenciau;
            $sql = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, TipoAsociado, Enviado, FechaCorreo, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?,?, ?, ?)', [
                $request->Cedula,
                $request->Nombre,
                $request->Apellidos,
                null,
                $request->CuentaAsociada,
                $agenciaU,
                $request->Estado,
                null,
                'NuevoEmpleado',
                'NuevoEmpleado',
                1,
                $fechaHoraActual,
                $request->Inspektor
            ]);
            $idPersona = DB::getPdo()->lastInsertId();

            if ($request->hasFile('NombreA') != null) {
                $file4 = $request->file('NombreA');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Autorización - "' . $filename4 . '" ya existe!'
                    ]);
                }
            }

            if ($request->hasFile('contrato') != null) {
                $file2 = $request->file('contrato');
                $filename2 = $file2->getClientOriginalName();
                $archivo2 = DB::select("SELECT NombreContrato FROM documentoa WHERE NombreContrato = ?", [$filename2]);

                if (!empty($archivo2)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Cédula - "' . $filename2 . '" ya existe!'
                    ]);
                }
            }


            if ($request->hasFile('NombreT')) {
                $file = $request->file('NombreT');
                $filename2 = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();
                $dir3 = "";
                $ruta_carga3 = "";

                // Verificar si la extensión es PDF
                if ($extension === 'pdf') {
                    if ($request->Tipof == "T1") {
                        $dir3 = "Storage/files/t1/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T1-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T1-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    } elseif ($request->Tipof == "T2") {
                        $dir3 = "Storage/files/t2/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T2-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T2-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    }

                    if ($request->Tipof != "N/A") {
                        $uploadSucces = $file->move($dir3, $ruta_carga3);
                    }

                    $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                        $filename2 ?? null,
                        $request->Consecutivof,
                        $request->Tipof ?? 'N/A',
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    $request->Consecutivof,
                    $request->Tipof ?? 'N/A',
                    $idPersona
                ]);
            }


            if ($request->hasFile('NombreS')) {
                $file = $request->file('NombreS');
                $dir = 'Storage/files/sintesis/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($file->getClientOriginalName() !== 'Sintesis-' . $request->Cedula . '.pdf') {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->Sintesis-' . $request->Cedula . '.pdf'
                    ]);
                }
                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion,
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                    $request->FechaInsercion ?? null,
                    null,
                    $idPersona
                ]);
            }


            if ($request->hasFile('contrato')) {
                $file3 = $request->file('contrato');
                $dir3 = 'Storage/files/cedula/';
                $filename3 = $file3->getClientOriginalName();
                $extension3 = $file3->getClientOriginalExtension();

                $file5 = $request->file('NombreA');
                $dir5 = 'Storage/files/autorizacion/';
                $filename5 = $file5->getClientOriginalName();
                $extension5 = $file5->getClientOriginalExtension();

                if ($file5->getClientOriginalName() !== 'Autorizacion-' . $request->Cedula . '.pdf') {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->Cedula . '.pdf'
                    ]);
                }
                if ($file3->getClientOriginalName() !== $request->Cedula . '.pdf') {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->' . $request->Cedula . '.pdf'
                    ]);
                }

                if ($extension3 === 'pdf' && $extension5 = 'pdf') {
                    $uploadSucces = $request->file('contrato')->move($dir3, $filename3);
                    $uploadSucces = $request->file('NombreA')->move($dir5, $filename5);

                    $sql2 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                        $filename5 ?? null,
                        $request->consecutivoa,
                        $filename3 ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql2 = DB::insert('INSERT INTO documentoa (ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    $request->consecutivoa,
                    null,
                    $idPersona
                ]);
            }



            if ($request->hasFile('NombrePN')) {
                $file = $request->file('NombrePN');
                $dir = 'Storage/files/pn/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                    $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                    null,
                    $idPersona
                ]);
            }//



            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoEmpleado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);
            if ($sql && $sql2 && $sql3 && $sql4) {
                $cedula = $request->Cedula;
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                $talento = " de Talento Humano";
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo7($cedula, $talento, $agencia));
                }
                return back()->with("correcto", "Persona Registrada correctamente!")->with("showLoadingAlert", true);
            } else {
                return back()->with("incorrecto", "Error al insertar el registro!");
            }
        }
    }

    //Actualizar registro empleado
    public function update2(Request $request, $id)
    {


        $archivo = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $nombre_archivo = $archivo[0]->NombreS;
        $filename = $nombre_archivo;
        if ($archivo) {
            $nombre_archivo = $archivo[0]->NombreS;
            if ($request->hasFile('archivo22')) {
                $file = $request->file('archivo22');
                $filename = $file->getClientOriginalName();
            }



            $nuevo_archivo = $filename;
            if ($archivo) {
                $pdfactual = $nombre_archivo;
            } else {
                $pdfactual = null;
            }
        }
        if (!empty($archivo) && $archivo != $pdfactual) {
            $nuevo_nombre = $nuevo_archivo;
        }

        if (isset($nombre_archivo) && isset($nuevo_nombre) && $nombre_archivo !== $nuevo_nombre) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo SINTESIS ' . $nombre_archivo . ' actual (' . $nombre_archivo . ').\n'
            ]);
        }

        $fecha = DB::select("SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $fechai = $fecha[0]->FechaInsercion;
        $fechadef = $request->fecha3;

        $archivo2 = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);

        $nombre_archivo2 = $archivo2[0]->NombrePN;
        $filename2 = $nombre_archivo2;
        if ($archivo2) {
            $nombre_archivo2 = $archivo2[0]->NombrePN;
            if ($request->hasFile('archivo11')) {
                $file2 = $request->file('archivo11');
                $filename2 = $file2->getClientOriginalName();
            }


            $nuevo_archivo2 = $filename2;
            if ($archivo2) {
                $pdfactual2 = $nombre_archivo2;
            } else {
                $pdfactual2 = null;
            }
        }

        if (!empty($archivo2) && $archivo2 != $pdfactual2) {
            $nuevo_nombre2 = $nuevo_archivo2;
        }

        if (isset($nombre_archivo2) && isset($nuevo_nombre2) && $nombre_archivo2 !== $nuevo_nombre2) {

            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo PN actual (' . $nombre_archivo2 . ').\n'
            ]);
        }

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 = $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }
        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }

        if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÓN ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
            ]);

        }

        $archivo4 = DB::select("SELECT NombreContrato FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo4 = $archivo4[0]->NombreContrato;
        $filename4 = $nombre_archivo4;
        if ($archivo4) {
            $nombre_archivo4 = $archivo4[0]->NombreContrato;
            if ($request->hasFile('contrato1')) {
                $file4 = $request->file('contrato1');
                $filename4 = $file4->getClientOriginalName();
            }



            $nuevo_archivo4 = $filename4;
            if ($archivo4) {
                $pdfactual4 = $nombre_archivo4;
            } else {
                $pdfactual4 = null;
            }
        }
        if (!empty($archivo4) && $archivo4 != $pdfactual4) {
            $nuevo_nombre4 = $nuevo_archivo4;
        }

        if (isset($nombre_archivo4) && isset($nuevo_nombre4) && $nombre_archivo4 !== $nuevo_nombre4) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo Cédula actual (' . $nombre_archivo4 . ').\n'
            ]);


            $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
            $nombre_archivo3 = $archivo3[0]->NombreA;
            $filename3 = $nombre_archivo3;
            if ($archivo3) {
                $nombre_archivo3 = $archivo3[0]->NombreA;
                if ($request->hasFile('archivo3')) {
                    $file3 = $request->file('archivo3');
                    $filename3 = $file3->getClientOriginalName();
                }



                $nuevo_archivo3 = $filename3;
                if ($archivo3) {
                    $pdfactual3 = $nombre_archivo3;
                } else {
                    $pdfactual3 = null;
                }
            }
            if (!empty($archivo3) && $archivo3 != $pdfactual3) {
                $nuevo_nombre3 = $nuevo_archivo3;
            }

            if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
                return back()->withErrors([
                    'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÓN ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
                ]);

            }


        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }


            if ($request->Consulta == true) {
                $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Agencia = ?, Inspektor = ?,Enviado = ?, Consulta =?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->agencia3,
                    $request->Inspektor2,
                    1,
                    1
                ]);
            } else {
                $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Agencia = ?, Inspektor = ?,Enviado = ?, Consulta =?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->agencia3,
                    $request->Inspektor2,
                    0,
                    0
                ]);

            }


            $dir = 'Storage/files/sintesis/';
            if ($request->hasFile('archivo22') && !empty($filename)) {
                $file = $request->file('archivo22');


                if ($file->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess = $file->move($dir, $filename);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }

            $dir2 = 'Storage/files/pn/';
            if ($request->hasFile('archivo11') && !empty($filename2)) {
                $file2 = $request->file('archivo11');


                if ($file2->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess = $file2->move($dir2, $filename2);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }

            $dir3 = 'Storage/files/autorizacion/';
            if ($request->hasFile('archivo3') && !empty($filename3)) {
                $file3 = $request->file('archivo3');


                if ($file3->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess = $file3->move($dir3, $filename3);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }

            $dir4 = 'Storage/files/cedula/';
            if ($request->hasFile('contrato1') && !empty($filename4)) {
                $file4 = $request->file('contrato1');


                if ($file4->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess = $file4->move($dir4, $filename4);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }

            $archivo = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
            $nombre_archivo = $archivo[0]->NombreS;

            $archivo2 = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);
            $nombre_archivo2 = $archivo2[0]->NombrePN;

            $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
            $nombre_archivo3 = $archivo3[0]->NombreA;

            $archivo4 = DB::select("SELECT NombreContrato FROM documentoa WHERE ID_Persona = ?", [$id]);
            $nombre_archivo4 = $archivo4[0]->NombreContrato;




            if ($request->contrato1 != null) {
                $sql3 = DB::update("UPDATE documentoa SET NombreContrato = ? WHERE ID_Persona = $id", [
                    $nuevo_archivo4
                ]);
            }

            if ($request->hasFile('archivo3')) {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                    $request->consecutivof33,
                    $nuevo_archivo3
                ]);
            } else {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                    $request->consecutivof33
                ]);
            }

            $usuarioActual = Auth::user();
            $agencia = $usuarioActual->agenciau;
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $cedula = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
            $cedulaRegistrada = $cedula[0]->Cedula;
            $fechaHoraActual = date('Y-m-d H:i:s');
            $ip = $_SERVER['REMOTE_ADDR'];
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizoEmpleado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaRegistrada,
                null,
                $ip
            ]);

            if ($request->Tipoasociado == true) {
                $sql4 = DB::update("UPDATE persona SET Tipo = ?, TipoAsociado = ? WHERE ID = $id", [
                    'Empleado',
                    'Empleado'
                ]);
            }

            if (isset($sql4) && $sql4 == true) {
                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                $agencia = $usuarioActual->agenciau;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo13($cedula, $nombreUsuario, $agencia));
                }
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 puede visualizarlo en Asociados!");
            } else if ($sql == true || $sql2 = true || $sql5) {
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 fue actualizado correctamente!");
            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }
        }
    }

    //registrar
    public function create3(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        }
        $existingNIT = DB::select('SELECT * FROM proveedor WHERE NIT = ?', [$request->nit]);
        if ($existingNIT == true) {
            return back()->with("incorrecto", "Persona con NIT. $request->nit ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }
            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            if ($request->tipo_persona == "PN") {
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                $sql = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoProveedor, FechaCorreo, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                    $request->cedula,
                    $request->nombre,
                    $request->apellidos,
                    null,
                    null,
                    $agenciaU,
                    null,
                    null,
                    'Proveedor',
                    1,
                    $request->tipo_persona,
                    $fechaHoraActual,
                    $request->Inspektor

                ]);
                $idPersona = DB::getPdo()->lastInsertId();
                if ($request->hasFile('NombreA') != null) {
                    $file4 = $request->file('NombreA');
                    $filename4 = $file4->getClientOriginalName();
                    $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                    if (!empty($archivo4)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo Autorización - "' . $filename4 . '" ya existe!'
                        ]);
                    }
                }

                if ($request->hasFile('NombreRC') != null) {
                    $file = $request->file('NombreRC');
                    $filename = $file->getClientOriginalName();
                    $archivo = DB::select("SELECT NombreRC FROM proveedor WHERE NombreRC = ?", [$filename]);

                    if (!empty($archivo)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo RECIBO DE CAJA - "' . $filename . '" ya existe!'
                        ]);
                    }
                }



                if ($request->hasFile('NombreS')) {
                    $file = $request->file('NombreS');
                    $dir = 'Storage/files/sintesis/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                            $request->FechaInsercion,
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion ?? null,
                        null,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombreRC')) {
                    $file = $request->file('NombreRC');
                    $dir = 'Storage/files/rc/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();


                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreRC')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?)', [
                            $filename ?? null,
                            $request->valorcompra,
                            $request->valorcompra,
                            $idPersona
                        ]);
                        if ($file->getClientOriginalName() !== 'RC-' . $request->cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            if (file_exists($dir . $filename)) {
                                unlink($dir . $filename);
                            }
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->cedula . '.pdf'
                            ]);
                        }
                    } else {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, ValorAcumulado, ValorCompra, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        $request->valorcompra,
                        $request->valorcompra,
                        $idPersona
                    ]);
                }

                if ($request->hasFile('NombreA')) {
                    $file2 = $request->file('NombreA');
                    if ($file2 != null) {
                        $dir2 = 'Storage/files/autorizacion/';
                        $filename2 = $file2->getClientOriginalName();
                        $extension2 = $file2->getClientOriginalExtension();

                        if ($file2->getClientOriginalName() !== 'Autorizacion-' . $request->cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula . '.pdf'
                            ]);
                        }
                        if ($extension2 === 'pdf') {
                            $uploadSucces2 = $request->file('NombreA')->move($dir2, $filename2);
                            $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                                $filename2 ?? null,
                                $request->consecutivoa,
                                null,
                                $idPersona
                            ]);
                        } else {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'Solo se puede subir archivos PDF.'
                            ]);
                        }
                    }
                } else {
                    $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        null,
                        $request->consecutivoa,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombrePN')) {
                    $file = $request->file('NombrePN');
                    $dir = 'Storage/files/pn/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                        $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        null,
                        $idPersona
                    ]);
                }//
            } else if ($request->tipo_persona == "PJ") {
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                $sql = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoProveedor, FechaCorreo) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                    null,
                    null,
                    null,
                    null,
                    null,
                    $agenciaU,
                    null,
                    null,
                    'Proveedor',
                    1,
                    $request->tipo_persona,
                    $fechaHoraActual
                ]);
                $idPersona = DB::getPdo()->lastInsertId();
                if ($request->hasFile('NombreA') != null) {
                    $file4 = $request->file('NombreA');
                    $filename4 = $file4->getClientOriginalName();
                    $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                    if (!empty($archivo4)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo Autorización - "' . $filename4 . '" ya existe!'
                        ]);
                    }
                }

                if ($request->hasFile('NombreRC') != null) {
                    $file = $request->file('NombreRC');
                    $filename = $file->getClientOriginalName();
                    $archivo = DB::select("SELECT NombreRC FROM proveedor WHERE NombreRC = ?", [$filename]);

                    if (!empty($archivo)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo RECIBO DE CAJA - "' . $filename . '" ya existe!'
                        ]);
                    }
                }



                if ($request->hasFile('NombreS')) {
                    $file = $request->file('NombreS');
                    $dir = 'Storage/files/sintesis/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                            $request->FechaInsercion,
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion ?? null,
                        null,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombreRC')) {
                    $file = $request->file('NombreRC');
                    $dir = 'Storage/files/rc/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();


                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreRC')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, NIT, RazonSocial, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?, ?, ?)', [

                            $filename ?? null,
                            $request->nit,
                            $request->razonSocial,
                            $request->valorcompra,
                            $request->valorcompra,
                            $idPersona
                        ]);
                        if ($file->getClientOriginalName() !== 'RC-' . $request->nit . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            if (file_exists($dir . $filename)) {
                                unlink($dir . $filename);
                            }
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->nit . '.pdf'
                            ]);
                        }
                    } else {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, NIT, RazonSocial, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?, ? ,?)', [
                        null,
                        $request->nit,
                        $request->razonSocial,
                        $request->valorcompra,
                        $request->valorcompra,
                        $idPersona
                    ]);
                }

                if ($request->hasFile('NombreA')) {
                    $file2 = $request->file('NombreA');
                    if ($file2 != null) {
                        $dir2 = 'Storage/files/autorizacion/';
                        $filename2 = $file2->getClientOriginalName();
                        $extension2 = $file2->getClientOriginalExtension();

                        if ($file2->getClientOriginalName() !== 'Autorizacion-' . $request->nit . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula . '.pdf'
                            ]);
                        }
                        if ($extension2 === 'pdf') {
                            $uploadSucces2 = $request->file('NombreA')->move($dir2, $filename2);
                            $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                                $filename2 ?? null,
                                $request->consecutivoa,
                                null,
                                $idPersona
                            ]);
                        } else {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'Solo se puede subir archivos PDF.'
                            ]);
                        }
                    }
                } else {
                    $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        null,
                        $request->consecutivoa,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombrePN')) {
                    $file = $request->file('NombrePN');
                    $dir = 'Storage/files/pn/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                        $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        null,
                        $idPersona
                    ]);
                }//
            }




            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoProveedor', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);
            if ($sql && $sql4) {
                if ($request->tipo_persona == 'PN') {
                    $cedula = $request->cedula;
                    $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                    $usuarioActual = Auth::user();
                    $agencia = $usuarioActual->agenciau;
                    $talento = " de Talento Humano";
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo6($cedula, $talento, $agencia));
                    }
                } else {
                    $nit = $request->nit;
                    $razon = $request->razonSocial;
                    $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                    $usuarioActual = Auth::user();
                    $agencia = $usuarioActual->agenciau;
                    $talento = " de Talento Humano";
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo5($nit, $talento, $razon, $agencia));
                    }
                }
                return back()->with("correcto2", "Persona Registrada correctamente!")->with("showLoadingAlert", true);
            } else {
                return back()->with("incorrecto", "Error al insertar el registro!");
            }

        }
    }


    //Actualizar registro
    public function update3(Request $request, $id)
    {

        $archivo4 = DB::select("SELECT NombreRC FROM proveedor WHERE ID_Persona = ?", [$id]);
        $nombre_archivo4 = $archivo4[0]->NombreRC;
        $filename4 = $nombre_archivo4;
        if ($archivo4) {
            $nombre_archivo4 = $archivo4[0]->NombreRC;
            if ($request->hasFile('archivo4')) {
                $file4 = $request->file('archivo4');
                $filename4 = $file4->getClientOriginalName();
            }



            $nuevo_archivo4 = $filename4;
            if ($archivo4) {
                $pdfactual4 = $nombre_archivo4;
            } else {
                $pdfactual4 = null;
            }
        }
        if (!empty($archivo4) && $archivo4 != $pdfactual4) {
            $nuevo_nombre4 = $nuevo_archivo4;
        }

        if (isset($nombre_archivo4) && isset($nuevo_nombre4) && $nombre_archivo4 !== $nuevo_nombre4) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo RECIBO DE CAJA -> ' . $nombre_archivo4 . ' actual (' . $nombre_archivo4 . ').\n'
            ]);


        }

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 = $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }
        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }

        if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÓN -> ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
            ]);
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }

            $tipo = DB::select("SELECT TipoProveedor FROM persona WHERE ID = ?", [$id]);
            $tipoproveedor = $tipo[0]->TipoProveedor;

            if ($tipoproveedor == "PN") {

                $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Agencia = ?, Inspektor = ?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->agencia3,
                    $request->Inspektor3,
                ]);


                $proveedor = DB::select("SELECT ValorAcumulado FROM proveedor WHERE ID_Persona = ?", [$id]);
                $valorAcumuladoActual = $proveedor[0]->ValorAcumulado;

                $nuevoValorCompra = $request->valorcompra1;

                $nuevoValorAcumulado = $valorAcumuladoActual + $nuevoValorCompra;

                $dir4 = 'Storage/files/rc/';
                if ($request->hasFile('archivo4') && !empty($filename4)) {
                    $file4 = $request->file('archivo4');
                    if ($file4->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula2 . '.pdf'
                        ]);
                    }
                    if ($file4->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file4->move($dir4, $filename4);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo4')) {
                    $sql5 = DB::update("UPDATE proveedor SET ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->valorcompra1,
                        $nuevoValorAcumulado,
                        $nuevo_archivo4
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE proveedor SET ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->valorcompra1,
                        $nuevoValorAcumulado,
                        null
                    ]);
                }



                $dir3 = 'Storage/files/autorizacion/';
                if ($request->hasFile('archivo3') && !empty($filename3)) {
                    $file3 = $request->file('archivo3');
                    if ($file3->getClientOriginalName() !== 'Autorizacion-' . $request->nit2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->nit2 . '.pdf'
                        ]);
                    }

                    if ($file3->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess3 = $file3->move($dir3, $filename3);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo3')) {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa44,
                        $nuevo_archivo3
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa44
                    ]);
                }
            } else {
                $sql = DB::update("UPDATE persona SET Agencia = ?, Inspektor = ?  WHERE ID = $id", [
                    $request->agencia4,
                    $request->Inspektor2,
                ]);


                $proveedor = DB::select("SELECT ValorAcumulado FROM proveedor WHERE ID_Persona = ?", [$id]);
                $valorAcumuladoActual = $proveedor[0]->ValorAcumulado;

                $nuevoValorCompra = $request->valorcompra2;

                $nuevoValorAcumulado = $valorAcumuladoActual + $nuevoValorCompra;

                $dir4 = 'Storage/files/rc/';
                if ($request->hasFile('archivo4') && !empty($filename4)) {
                    $file4 = $request->file('archivo4');
                    if ($file4->getClientOriginalName() !== 'RC-' . $request->nit2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->nit2 . '.pdf'
                        ]);
                    }

                    if ($file4->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file4->move($dir4, $filename4);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo4')) {
                    $sql2 = DB::update("UPDATE proveedor SET NIT = ?, RazonSocial = ?, ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->nit2,
                        $request->razonsocial2,
                        $request->valorcompra2,
                        $nuevoValorAcumulado,
                        $nuevo_archivo4
                    ]);
                } else {
                    $sql2 = DB::update("UPDATE proveedor SET NIT = ?, RazonSocial = ?, ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->nit2,
                        $request->razonsocial2,
                        $request->valorcompra2,
                        $nuevoValorAcumulado,
                        null
                    ]);
                }



                $dir3 = 'Storage/files/autorizacion/';
                if ($request->hasFile('archivo3') && !empty($filename3)) {
                    $file3 = $request->file('archivo3');
                    if ($file3->getClientOriginalName() !== 'Autorizacion-' . $request->nit2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->nit2 . '.pdf'
                        ]);
                    }

                    if ($file3->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess3 = $file3->move($dir3, $filename3);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo3')) {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa33,
                        $nuevo_archivo3
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa33
                    ]);
                }
            }


            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $cedula = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
            $cedulaRegistrada = $cedula[0]->Cedula;
            $fechaHoraActual = date('Y-m-d H:i:s');
            $ip = $_SERVER['REMOTE_ADDR'];
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizoProveedor', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaRegistrada,
                null,
                $ip
            ]);
            if ($request->Consulta == true) {
                $sql4 = DB::update("UPDATE persona SET Consulta = ? WHERE ID = $id", [
                    1
                ]);
            }
            if (isset($sql4) && $sql4 == true) {
                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo3($cedula, $nombreUsuario, $recibo));
                }
                if ($tipoproveedor == 'PN') {
                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 puede ser consultado!");
                } else {
                    return back()->with("correcto", "El usuario con razón social " . ucwords($request->razonsocial2) . " con NIT # $request->nit2 puede ser consultado!");
                }
            } else if ($sql == true || $sql2 = true || $sql5 = true) {
                if ($tipoproveedor == 'PN') {

                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 fue actualizado correctamente!");
                } else {
                    return back()->with("correcto", "La persona con razón social " . ucwords($request->razonsocial2) . " con NIT # $request->nit2 fue actualizado correctamente!");
                }
            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }

        }
    }

    public function update4(Request $request, $id)
    {

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 = $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }

        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }
        if (!empty($file3)) {
            $resultado = $file3->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf';
            $resultado2 = $file3->getClientOriginalName() !== 'Analisis-' . $request->cedula2 . '.pdf';
            if ($resultado == true && $resultado2 == true) {
                return back()->withErrors([
                    'message' => 'El archivo subido contiene un nombre diferente a Autorizacion o Analisis.\nExistente ->' . $nombre_archivo3 . '\n Actual->' . $filename3 . '.\n'
                ]);

            }
        }
        //dd($resultado,$resultado2, $request->cedula2);

        $archivo5 = DB::select("SELECT NombreAnalisis FROM persona WHERE ID = ?", [$id]);
        $nombre_archivo5 = $archivo5[0]->NombreAnalisis;
        $filename5 = $nombre_archivo5;
        if ($archivo5) {
            $nombre_archivo5 = $archivo5[0]->NombreAnalisis;
            if ($request->hasFile('archivo33')) {
                $file5 = $request->file('archivo33');
                $filename5 = $file5->getClientOriginalName();
            }



            $nuevo_archivo5 = $filename5;
            if ($archivo5) {
                $pdfactual5 = $nombre_archivo5;
            } else {
                $pdfactual5 = null;
            }
        }
        if (!empty($archivo5) && $archivo5 != $pdfactual5) {
            $nuevo_nombre5 = $nuevo_archivo5;
        }

        $resultado = false;
        if (!empty($file5)) {
            $resultado = $file5->getClientOriginalName() !== 'RC-' . $request->cedula2 . '.pdf';

        }

        if ($resultado == true) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente a RC-' . $request->cedula2 . '\n'
            ]);

        }

        // if (isset($nombre_archivo5) && isset($nuevo_nombre5) && $nombre_archivo5 !== $nuevo_nombre5) {
        //     return back()->withErrors([
        //         'message' => 'El archivo subido contiene un nombre diferente al archivo RC ' . $nombre_archivo5 . ' actual (' . $nombre_archivo5 . ').\n'
        //     ]);

        // }
        else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }




            $sql = DB::select("SELECT DeudaEsp FROM persona WHERE ID = ?", [$id]);
            $totalDeuda = $sql[0]->DeudaEsp;
            $nuevoTotalDeuda = $totalDeuda + $request->monto;
            $recibo = $request->recibo;

            $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Score = ?, Agencia = ?, Estado = ?, Reporte = ? , CuentaAsociada= ?, Monto = ?, DeudaEsp = ?, Linea = ?, ConsecutivoRC = ? , ObRC =?, Inspektor =? WHERE ID = $id", [
                $request->cedula2,
                $request->nombre3,
                $request->apellidos3,
                $request->score3,
                $request->agencia3,
                $request->estado3,
                $request->reporte3,
                $request->cuenta3,
                $request->monto,
                $nuevoTotalDeuda,
                $request->linea2,
                $recibo,
                $request->ObRC3,
                $request->Inspektor2,



            ]);




            $dir2 = 'Storage/files/autorizacion/';
            if ($request->hasFile('archivo3') && !empty($filename3)) {
                $file2 = $request->file('archivo3');

                if ($file2->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess2 = $file2->move($dir2, $filename3);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }
            if ($request->hasFile('archivo3')) {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33,
                    $nuevo_archivo3
                ]);
            } else {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33
                ]);
            }



            $archivo5 = DB::select("SELECT NombreAnalisis FROM persona WHERE ID = ?", [$id]);
            $nombre_archivo5 = $archivo5[0]->NombreAnalisis;
            $dir5 = 'Storage/files/rccreditos/';
            $filename5 = $nombre_archivo5;

            if ($request->hasFile('archivo33') && !empty($filename5)) {
                $file5 = $request->file('archivo33');
                $nombre = $file5->getClientOriginalName();
                if ($file5->getClientOriginalName() !== 'RC-' . $request->cedula2 . '.pdf') {
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->cedula2 . '.pdf'
                    ]);
                }

                if ($file5->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess5 = $file5->move($dir5, $filename5);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }
            if ($request->hasFile('archivo33')) {
                $file5 = $request->file('archivo33');
                $nombre = $file5->getClientOriginalName();
                $sql2 = DB::update("UPDATE persona SET NombreAnalisis = ? WHERE ID = ?", [$nombre, $id]);
            }


            if ($request->Consulta == true) {
                $sql4 = DB::update("UPDATE persona SET Consulta = ? WHERE ID = $id", [
                    1
                ]);
            }






            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $cedula = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
            $cedulaRegistrada = $cedula[0]->Cedula;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizoAsociado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaRegistrada,
                null,
                $ip
            ]);
            if (isset($sql4) && $sql4 == true) {
                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo15($cedula, $agencia, $tipo));
                }
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 puede ser consultado!");
            } else if ($sql == true || $sql2 = true || $sql5) {
                $cedula = $request->cedula2;
                $tipo = " Crédito";
                $agencia = $request->agencia3;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo15($cedula, $agencia, $tipo));
                }
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 fue actualizado correctamente!");
            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }
        }
    }

    public function data7()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
            SELECT A.ID, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Consulta, A.TipoAsociado,
            A.Reporte, A.Linea, B.FechaInsercion, B.NombreS, C.NombrePN, D.Consecutivof, D.Tipof, D.NombreT, E.NombreA, E.ConsecutivoA, A.NombreAnalisis, A.Monto, A.ConsecutivoAnalisis, A.DeudaEsp
            FROM persona A
            JOIN documentosintesis B ON A.ID = B.ID_Persona
            JOIN documentopn C ON B.ID_Persona = C.ID_Persona
            JOIN documentot D ON C.ID_Persona = D.ID_Persona
            JOIN documentoa E ON D.ID_Persona = E.ID_Persona
            WHERE A.Activado = 1 AND A.Tipo = 'Empleado' AND A.Enviado = 0 AND A.Agencia = '$agenciaU' AND (A.TipoAsociado = 'Credito' OR A.TipoAsociado = 'Asociacion')
            ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();



    }
    public function createcreditoe(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }
            $idPersona = DB::getPdo()->lastInsertId();
            if ($request->hasFile('NombreA') != null) {
                $file4 = $request->file('NombreA');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Autorización - "' . $filename4 . '" ya existe!'
                    ]);
                }
            }


            if ($request->hasFile('NombreAnalisis') != null) {
                $file4 = $request->file('NombreAnalisis');
                $filename4 = $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreAnalisis FROM persona WHERE NombreAnalisis = ?", [$filename4]);

                if (!empty($archivo4)) {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'El archivo Analisis - "' . $filename4 . '" ya existe!'
                    ]);
                }
            }


            if ($request->hasFile('NombreAnalisis')) {
                $file5 = $request->file('NombreAnalisis');
                if ($file5 != null) {
                    $dir5 = 'Storage/files/analisis/';
                    $filename5 = $file5->getClientOriginalName();
                    $extension5 = $file5->getClientOriginalExtension();

                    if ($file5->getClientOriginalName() !== 'Analisis-' . $request->Cedula . '.pdf') {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Analisis-' . $request->Cedula . '.pdf'
                        ]);
                    }
                    if ($extension5 === 'pdf') {
                        $usuarioActual = Auth::user();
                        $agenciaU = $usuarioActual->agenciau;
                        $uploadSucces5 = $request->file('NombreAnalisis')->move($dir5, $filename5);
                        $sql4 = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoAsociado, NombreAnalisis, ConsecutivoAnalisis , Monto, DeudaEsp, Linea, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                            $request->Cedula,
                            $request->Nombre,
                            $request->Apellidos,
                            null,
                            $request->CuentaAsociada,
                            $agenciau,
                            null,
                            null,
                            'Empleado',
                            1,
                            'Credito',
                            $filename5 ?? null,
                            $request->ConsecutivoAnalisis,
                            $request->Monto,
                            $request->Monto,
                            $request->Linea,
                            $request->Inspektor
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
            } else {
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                $sql4 = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoAsociado, NombreAnalisis, ConsecutivoAnalisis, Monto, DeudaEsp, Linea, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                    $request->Cedula,
                    $request->Nombre,
                    $request->Apellidos,
                    null,
                    $request->CuentaAsociada,
                    $agenciaU,
                    $request->Estado,
                    null,
                    'Empleado',
                    1,
                    'Credito',
                    $filename5 ?? null,
                    $request->ConsecutivoAnalisis,
                    $request->Monto,
                    $request->Monto,
                    $request->Linea,
                    $request->Inspektor
                ]);
            }

            $idPersona = DB::getPdo()->lastInsertId();

            if ($request->hasFile('NombreS')) {
                $file = $request->file('NombreS');
                $dir = 'Storage/files/sintesis/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion,
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                    $request->FechaInsercion ?? null,
                    null,
                    $idPersona
                ]);
            }

            if ($request->hasFile('NombreA')) {
                $file = $request->file('NombreA');
                if ($file != null) {
                    $dir = 'Storage/files/autorizacion/';
                    $filename = $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($file->getClientOriginalName() !== 'Autorizacion-' . $request->Cedula . '.pdf') {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->Cedula . '.pdf'
                        ]);
                    }
                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreA')->move($dir, $filename);
                        $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                            $filename ?? null,
                            $request->consecutivoa,
                            null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
            } else {
                $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    null,
                    $request->consecutivoa,
                    $idPersona
                ]);
            }
            if ($request->hasFile('NombrePN')) {
                $file = $request->file('NombrePN');
                $dir = 'Storage/files/pn/';
                $filename = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();

                if ($extension === 'pdf') {
                    $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        $filename ?? null,
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                    null,
                    $idPersona
                ]);
            }//


            if ($request->hasFile('NombreT')) {
                $file = $request->file('NombreT');
                $filename2 = $file->getClientOriginalName();
                $extension = $file->getClientOriginalExtension();
                $dir3 = "";
                $ruta_carga3 = "";

                // Verificar si la extensión es PDF
                if ($extension === 'pdf') {
                    if ($request->Tipof == "T1") {
                        $dir3 = "Storage/files/t1/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T1-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T1-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    } elseif ($request->Tipof == "T2") {
                        $dir3 = "Storage/files/t2/";
                        $ruta_carga3 = $dir3 . $file->getClientOriginalName();
                        if ($file->getClientOriginalName() !== 'T2-' . $request->Cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->T2-' . $request->Cedula . '.pdf'
                            ]);
                        }
                    }

                    if ($request->Tipof != "N/A") {
                        $uploadSucces = $file->move($dir3, $ruta_carga3);
                    }

                    $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                        $filename2 ?? null,
                        $request->Consecutivof,
                        $request->Tipof ?? 'N/A',
                        $idPersona
                    ]);
                } else {
                    $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            } else {
                $sql4 = DB::insert('INSERT INTO documentot (NombreT, Consecutivof, Tipof, ID_Persona) VALUES (?, ?, ?, ?)', [
                    null,
                    $request->Consecutivof,
                    $request->Tipof ?? 'N/A',
                    $idPersona
                ]);
            }




            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoCreditoEmpleado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);
            if ($sql4) {
                $cedula = $request->Cedula;
                $talento = "";
                $usuarioActual = Auth::user();
                $agencia = $usuarioActual->agenciau;
                $usuarios = DB::table('users')->where('rol', 'Credito')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo2($cedula, $talento, $agencia));
                }
                return back()->with("correcto", "Persona Registrada correctamente!")->with("showLoadingAlert", true);
            } else {
                return back()->with("incorrecto", "Error al insertar el registro!");
            }

        }

    }

    public function update5(Request $request, $id)
    {


        $archivo = DB::select("SELECT NombreS FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $nombre_archivo = $archivo[0]->NombreS;
        $filename = $nombre_archivo;
        if ($archivo) {
            $nombre_archivo = $archivo[0]->NombreS;
            if ($request->hasFile('archivo22')) {
                $file = $request->file('archivo22');
                $filename = $file->getClientOriginalName();
            }



            $nuevo_archivo = $filename;
            if ($archivo) {
                $pdfactual = $nombre_archivo;
            } else {
                $pdfactual = null;
            }
        }
        if (!empty($archivo) && $archivo != $pdfactual) {
            $nuevo_nombre = $nuevo_archivo;
        }

        if (isset($nombre_archivo) && isset($nuevo_nombre) && $nombre_archivo !== $nuevo_nombre) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo SINTESIS ' . $nombre_archivo . ' actual (' . $nombre_archivo . ').\n'
            ]);
        }

        $fecha = DB::select("SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?", [$id]);
        $fechai = $fecha[0]->FechaInsercion;
        $fechadef = $request->fecha3;

        $archivo2 = DB::select("SELECT NombrePN FROM documentopn WHERE ID_Persona = ?", [$id]);

        $nombre_archivo2 = $archivo2[0]->NombrePN;
        $filename2 = $nombre_archivo2;
        if ($archivo2) {
            $nombre_archivo2 = $archivo2[0]->NombrePN;
            if ($request->hasFile('archivo11')) {
                $file2 = $request->file('archivo11');
                $filename2 = $file2->getClientOriginalName();
            }


            $nuevo_archivo2 = $filename2;
            if ($archivo2) {
                $pdfactual2 = $nombre_archivo2;
            } else {
                $pdfactual2 = null;
            }
        }

        if (!empty($archivo2) && $archivo2 != $pdfactual2) {
            $nuevo_nombre2 = $nuevo_archivo2;
        }

        if (isset($nombre_archivo2) && isset($nuevo_nombre2) && $nombre_archivo2 !== $nuevo_nombre2) {

            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo PN actual (' . $nombre_archivo2 . ').\n'
            ]);
        }

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 = $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }
        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }

        if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÓN ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
            ]);

        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif
            ($request->Score > 950) {
                $request->Score = 950;
            }




            $sql = DB::select("SELECT DeudaEsp FROM persona WHERE ID = ?", [$id]);
            $totalDeuda = $sql[0]->DeudaEsp;


            $nuevoTotalDeuda = $totalDeuda + $request->monto;
            $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Score = ?, Agencia = ?, Estado = ?, Reporte = ? , CuentaAsociada= ?, Monto = ?, DeudaEsp = ?, Linea = ? WHERE ID = $id", [
                $request->cedula2,
                $request->nombre3,
                $request->apellidos3,
                $request->score3,
                $request->agencia3,
                null,
                $request->reporte3,
                $request->cuenta3,
                $request->monto,
                $nuevoTotalDeuda,
                $request->linea2,


            ]);


            $dir3 = 'Storage/files/analisis/';
            if ($request->hasFile('archivo33') && !empty($filename3)) {
                $file3 = $request->file('archivo33');

                if ($file3->getClientOriginalName() !== 'Analisis-' . $request->cedula2 . '.pdf') {
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->Analisis-' . $request->cedula2 . '.pdf'
                    ]);
                }
                if ($file3->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess3 = $file3->move($dir3, $filename3);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }

            $dir2 = 'Storage/files/autorizacion/';
            if ($request->hasFile('archivo3') && !empty($filename)) {
                $file2 = $request->file('archivo3');
                if ($file2->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf') {
                    return back()->withErrors([
                        'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula2 . '.pdf'
                    ]);
                }

                if ($file->getClientOriginalExtension() === 'pdf') {
                    $uploadSuccess2 = $file2->move($dir, $filename);
                } else {
                    return back()->withErrors([
                        'message' => 'Solo se puede subir archivos PDF.'
                    ]);
                }
            }
            if ($request->hasFile('archivo3')) {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33,
                    $nuevo_archivo3
                ]);
            } else {
                $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                    $request->consecutivoa33
                ]);
            }


            $archivo3 = DB::select("SELECT NombreAnalisis FROM persona WHERE ID = ?", [$id]);
            $nombre_archivo3 = $archivo3[0]->NombreAnalisis;




            if ($request->hasFile('archivo33')) {
                $sql2 = DB::update("UPDATE persona SET NombreAnalisis = ?, ConsecutivoAnalisis = ? WHERE ID = $id", [
                    $nuevo_archivo3,
                    $request->consecutivoa,

                ]);
            } else {
                $sql2 = DB::update("UPDATE persona SET ConsecutivoAnalisis = ? WHERE ID = $id", [
                    $request->consecutivoa,

                ]);
            }


            if ($request->Consulta == true) {
                $sql4 = DB::update("UPDATE persona SET Consulta = ? WHERE ID = $id", [
                    1
                ]);
            }






            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $cedula = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
            $cedulaRegistrada = $cedula[0]->Cedula;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizarCreditoEmpleado', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaRegistrada,
                null,
                $ip
            ]);
            if (isset($sql4) && $sql4 == true) {
                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Asociacion')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo3($cedula, $nombreUsuario, $recibo));
                }
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 puede ser consultado!");
            } else if ($sql == true || $sql2 = true || $sql5) {
                return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificación $request->cedula2 fue actualizado correctamente!");
            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }
        }
    }

    public function data8($id)
    {
        $user = DB::select("
        SELECT A.ID, A.Observaciones, A.FechaCorreo, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Consulta,
        A.Reporte,  B.FechaInsercion, B.NombreS, C.NombrePN, D.Consecutivof, D.Tipof, D.NombreT, E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentot D ON C.ID_Persona = D.ID_Persona
        JOIN documentoa E ON D.ID_Persona = E.ID_Persona
        WHERE A.ID = '$id'
        ORDER BY Nombre ASC");

        return datatables()->of($user)->toJson();



    }


    public function data9($id)
    {
        $user = DB::select("
        SELECT A.ID, A.FechaCorreo, A.Linea, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, A.NombreAnalisis, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN,E.NombreA, E.ConsecutivoA, E.NombreContrato
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        WHERE A.ID = '$id'
        ORDER BY Nombre ASC");


        return datatables()->of($user)->toJson();



    }

    public function data10($id)
    {
        $user = DB::select("
        SELECT A.ID, A.FechaCorreo, A.Linea, A.Cedula, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,A.TipoProveedor,
        A.Reporte, A.NombreAnalisis, A.TipoAsociado, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN,E.NombreA, E.ConsecutivoA, E.NombreContrato, P.NIT
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        JOIN proveedor P ON E.ID_Persona = P.ID_Persona
        WHERE A.ID = '$id'
        ORDER BY Nombre ASC");


        return datatables()->of($user)->toJson();
    }

    public function data11()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT A.ID, A.Score, A.Estado, B.Ordinario, B.ID, B.NoAgencia, B.NombreAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
        FROM persona A
        JOIN pagare B ON A.ID = B.ID_Persona
        WHERE B.NombreAgencia = '$agenciaU' AND B.Ordinario = 0
        ORDER BY A.ID ASC


    ");
        return datatables()->of($user)->toJson();
    }


    public function createpagare(Request $request)
    {
        $existingPerson3 = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
        if (!empty($existingPerson3)) {
            $persona3 = $existingPerson3[0];
            if ($persona3->Score === NULL) {
                return back()->with("incorrecto3", "<span style='font-size: 25px'>La persona <strong>" . e($request->NombreCompleto) . " NO</strong> cuenta con consulta de datacrédito. Espere a que sea consultado por el <strong>area de cumplimiento</strong>.</span>");
            }
        }


        $existingLinea = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);

        if ($existingLinea == false) {
            return back()->with("incorrecto2", "Linea de Crédito No. $request->Linea_Credito NO existe! Volver a escanear con correo vinculado.");
        }


        if ($request->Correo == NULL) {
            return back()->with("incorrecto2", "¡Correo electronico NO detectado! Error al Registrar!");
        }



        $existingPagare = DB::select('SELECT ID_Pagare, CuentaCoop FROM pagare WHERE CuentaCoop = ? AND ID_Pagare = ?', [$request->CuentaCoop, $request->ID_Pagare]);

        if (!empty($existingPagare)) {
            $firstPagare = $existingPagare[0];
            if ($firstPagare->ID_Pagare == $request->ID_Pagare && $firstPagare->CuentaCoop == $request->CuentaCoop) {
                return back()->with("incorrecto2", "El pagaré con consecutivo " . htmlspecialchars($request->ID_Pagare) . " YA existe! Error al Registrar!");
            }
        } else {

            $existingPerson3 = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
            if (!empty($existingPerson3)) {
                $persona3 = $existingPerson3[0];

                if ($request->Cedula_Persona == $persona3->Cedula) {
                    if ($persona3->Score >= 650) {


                        $existingPerson2 = DB::select('SELECT Cedula, ID FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
                        $persona2 = $existingPerson2[0];
                        $Cuota1 = $request->Fecha1Cuota;
                        $CuotaFinal = $request->FechaUltimaCuota;
                        $fechaCredito = $request->FechaCredito;

                        $codigoAnio = substr($Cuota1, 0, 1);
                        $anio = substr($Cuota1, 1, 2);
                        $mes = substr($Cuota1, 3, 2);
                        $dia = substr($Cuota1, 5, 2);


                        $codigoAnio2 = substr($CuotaFinal, 0, 1);
                        $anio2 = substr($CuotaFinal, 1, 2);
                        $mes2 = substr($CuotaFinal, 3, 2);
                        $dia2 = substr($CuotaFinal, 5, 2);


                        $codigoAnio3 = substr($fechaCredito, 0, 1);
                        $anio3 = substr($fechaCredito, 1, 2);
                        $mes3 = substr($fechaCredito, 3, 2);
                        $dia3 = substr($fechaCredito, 5, 2);


                        $anioReal = 2000 + (int) $anio;

                        $anioReal2 = 2000 + (int) $anio2;

                        $anioReal3 = 2000 + (int) $anio3;

                        $meses = [
                            '01' => 'Enero',
                            '02' => 'Febrero',
                            '03' => 'Marzo',
                            '04' => 'Abril',
                            '05' => 'Mayo',
                            '06' => 'Junio',
                            '07' => 'Julio',
                            '08' => 'Agosto',
                            '09' => 'Septiembre',
                            '10' => 'Octubre',
                            '11' => 'Noviembre',
                            '12' => 'Diciembre'
                        ];
                        $nombreMes = $meses[$mes];

                        $nombreMes2 = $meses[$mes2];

                        $nombreMes3 = $meses[$mes3];

                        $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                        $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                        $fechaFormateada3 = $nombreMes3 . " " . (int) $dia3 . " del " . $anioReal3;

                        $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                        $lineacredito = $credito[0]->Credito;

                        //$accessToken = $this->iniciarSesion();

                        //API S400 - PERSONA
                        $url = env('URL_SERVER_API');
                        $attempts = 0;
                        $maxAttempts = 3;
                        $retryDelay = 500; // Milisegundos

                        do {
                            try {
                                $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                                $data = $response->json();

                                break;
                            } catch (\Exception $e) {
                                $attempts++;
                                usleep($retryDelay * 1000);
                            }
                        } while ($attempts < $maxAttempts);

                        if ($attempts == $maxAttempts) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                        $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                        $ENTIDAD = $data['asociado']['ENTIDAD'];
                        $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                        $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


                        //API S400 - GARANTIA
                        $url2 = env('URL_SERVER_API');
                        $attempts2 = 0;
                        $maxAttempts2 = 3;
                        $retryDelay2 = 500; // Milisegundos

                        do {
                            try {
                                $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                                $data2 = $response2->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts2++;
                                usleep($retryDelay2 * 1000);
                            }
                        } while ($attempts2 < $maxAttempts2);

                        if ($attempts2 == $maxAttempts2) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        if (isset($data2['garantia'])) {
                            $ValorGarantia = $data2['garantia']['GARANTIA'];
                        } else {
                            return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagaré <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                        }
                        $existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);

                        $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                        //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                        if (!empty($existeNominaDepen)) {
                            //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                            if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {

                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);

                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {

                                    $anioCompleto = 2000 + (int) $anio3;
                                    if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                    }

                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);
                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        $fechaReporteUtc = $fechaReporte->setTimezone('UTC');
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        // Extracción y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        $fecha1eraCuotaUtc = $fecha1eraCuota->setTimezone('UTC');
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        // Calcular el último día del mes siguiente a la fecha del crédito
                                        $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                        // Calcular el último día del mes de la primera cuota
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                        // Comparar si son iguales
                                        //resultado
                                        $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                        // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                        // Implementar la lógica de la fórmula de Excel
                                        $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                        // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                        $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=30

                                        // Comprobar si todas las condiciones relevantes son verdaderas
                                        $resultado1 = $condicion1 && $condicion3 ? true : false;




                                        // Primera condición externa
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado2 = false;
                                        } else {
                                            // Condición interna
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                            $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                            $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                            if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                $resultado2 = true;
                                            } else {
                                                $resultado2 = false;
                                            }
                                        }


                                        // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                        $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                        // Condición 2: La diferencia en días entre E15 y B14 es de 30 días o menos
                                        $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                        // Resultado basado en las condiciones
                                        $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                        // Calcular el último día del mes de B14
                                        $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                        // Calcular el último día del mes anterior a E15
                                        $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                        // Verificar las condiciones
                                        $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                        $condicion6 = $fechaReporte->gte($fechadelCredito);
                                        $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                        // Evaluar si todas las condiciones son verdaderas
                                        $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                        // Primer nivel de comprobación
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado5 = false;
                                        } else {
                                            // Segundo nivel de comprobación
                                            $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                            $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                            $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                            $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                            $resultado5 = $condicionA && $condicionB ? true : false;
                                        }



                                        $formateada = $fechaReporte->format('d/m/Y');
                                    }


                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {

                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {
                                        //RECHAZO
                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int) $anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                }
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                    $anioCompleto = 2000 + (int) $anio3;
                                    if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                    }
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);

                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // Extracción y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                        $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                        // Fórmula 1
                                        $resultado1 = (
                                            $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                            (
                                                $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                                $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                                $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                            )
                                        );


                                        // Fórmula 2
                                        $resultado2 = (
                                            Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                            $fechaReporte->gte($fechadelCredito) &&
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30
                                        ) ? true : false;

                                        // Fórmula 3
                                        $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                            (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
                                        );
                                    }


                                    if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        // Formatear los números para eliminar decimales no deseados
                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');
                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {
                                        //RECHAZO
                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int) $anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);


                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                }

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $anioCompleto = 2000 + (int) $anio3;
                                    if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                    }
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);
                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;



                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // Extracción y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);


                                        $result = $fechadelCredito > $fechaReporte;


                                        $result1 = $fechaReporte->lt($fechadelCredito) &&
                                            ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                        $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                        //CUARTO CONDICIONAL
                                        $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                        //QUINTO
                                        $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                        //SEXTO
                                        $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                    }


                                    //dd($result, $result1, $result2, $resultado3, $resultado4, $resultado5, $fecha1eraCuota, $fechadelCredito, $fechaReporte);

                                    if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $usuarioActual = Auth::user();
                                        $nombreGenerador = $usuarioActual->name;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }


                                        $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {
                                        //RECHAZO
                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int) $anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }

                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                } else {
                                    //RECHAZO


                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = $request->Cedula_Persona;
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);



                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                    $anioCompleto = 2000 + (int) $anio3;
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);



                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    }
                                    $message = "";


                                    // FECHA REPORTE POR MES ACTUAL
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        //INTERES PROPORCIONAL
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');


                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        //INTERES PROPORCIONAL
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }


                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    }

                                    if (empty($message)) {
                                        $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                                    }

                                    return back()->with("incorrecto", $message);
                                }
                            } else {
                                //error
                                return back()->with("incorrecto", "¡No se pudo registrar3!");
                            }
                            //SI NO EXISTE LA NOMINA LA ALMACENA DE FORMA AUTOMATICA
                        } else {



                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);

                            $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
                                $CODIGONOMINA,
                                $NOMBRENOMINA,
                                $NODEPENDENCIA,
                                $DEPENDENCIA,
                                $ENTIDAD
                            ]);

                            $message = "";
                            if (empty($message)) {
                                $message = "<span style='font-size: 20px'>La nómina denominada '" . $NOMBRENOMINA . "' ha sido registrada automáticamente, ya que no se encontraron registros previos de la misma. Informar al administrador el cambio de la fecha de reporte.</span>";
                                return back()->with("correcto2", $message);
                            } else {
                                //error
                                return back()->with("incorrecto", "¡No se pudo registrar3!");
                            }
                        }
                    }
                    //SCORE
                    else {
                        $existingPerson2 = DB::select('SELECT Cedula, ID FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
                        $persona2 = $existingPerson2[0];
                        $Cuota1 = $request->Fecha1Cuota;
                        $CuotaFinal = $request->FechaUltimaCuota;
                        $fechaCredito = $request->FechaCredito;

                        $codigoAnio = substr($Cuota1, 0, 1);
                        $anio = substr($Cuota1, 1, 2);
                        $mes = substr($Cuota1, 3, 2);
                        $dia = substr($Cuota1, 5, 2);


                        $codigoAnio2 = substr($CuotaFinal, 0, 1);
                        $anio2 = substr($CuotaFinal, 1, 2);
                        $mes2 = substr($CuotaFinal, 3, 2);
                        $dia2 = substr($CuotaFinal, 5, 2);


                        $codigoAnio3 = substr($fechaCredito, 0, 1);
                        $anio3 = substr($fechaCredito, 1, 2);
                        $mes3 = substr($fechaCredito, 3, 2);
                        $dia3 = substr($fechaCredito, 5, 2);


                        $anioReal = 2000 + (int) $anio;

                        $anioReal2 = 2000 + (int) $anio2;

                        $anioReal3 = 2000 + (int) $anio3;

                        $meses = [
                            '01' => 'Enero',
                            '02' => 'Febrero',
                            '03' => 'Marzo',
                            '04' => 'Abril',
                            '05' => 'Mayo',
                            '06' => 'Junio',
                            '07' => 'Julio',
                            '08' => 'Agosto',
                            '09' => 'Septiembre',
                            '10' => 'Octubre',
                            '11' => 'Noviembre',
                            '12' => 'Diciembre'
                        ];
                        $nombreMes = $meses[$mes];

                        $nombreMes2 = $meses[$mes2];

                        $nombreMes3 = $meses[$mes3];

                        $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                        $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                        $fechaFormateada3 = $nombreMes3 . " " . (int) $dia3 . " del " . $anioReal3;

                        $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                        $lineacredito = $credito[0]->Credito;

                        //$accessToken = $this->iniciarSesion();

                        //API S400
                        $url = env('URL_SERVER_API');
                        $attempts = 0;
                        $maxAttempts = 3;
                        $retryDelay = 500; // Milisegundos

                        do {
                            try {
                                $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                                $data = $response->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts++;
                                usleep($retryDelay * 1000);
                            }
                        } while ($attempts < $maxAttempts);

                        if ($attempts == $maxAttempts) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }


                        $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                        $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                        $ENTIDAD = $data['asociado']['ENTIDAD'];
                        $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                        $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];

                        //API S400 - GARANTIA
                        $url2 = env('URL_SERVER_API');
                        $attempts2 = 0;
                        $maxAttempts2 = 3;
                        $retryDelay2 = 500; // Milisegundos

                        do {
                            try {
                                $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                                $data2 = $response2->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts2++;
                                usleep($retryDelay2 * 1000);
                            }
                        } while ($attempts2 < $maxAttempts2);

                        if ($attempts2 == $maxAttempts2) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        if (isset($data2['garantia'])) {
                            $ValorGarantia = $data2['garantia']['GARANTIA'];
                        } else {
                            return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagaré <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                        }

                        $fechadelCredito = Carbon::now('America/Bogota');
                        Carbon::setLocale('es');
                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                        $parts = explode(' ', $fechaStringCredito);
                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                        $fechaStringCredito = implode(' ', $parts);



                        $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                        $existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);
                        //SCORE
                        if ($request->Capital <= 3000000) {
                            if (!empty($existeNominaDepen)) {
                                //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                                if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');

                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;


                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                    }


                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = $request->Cedula_Persona;
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobadoporScore', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);

                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE <strong>APROBADO</strong> PUESTO A QUE SOLICITÓ <strong>$3'000.000</strong> Y NO REQUIERE CONSULTA!</span>";
                                    return back()->with("correcto", $message);
                                }
                            }
                        } else {
                            //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                            if (!empty($existeNominaDepen)) {
                                //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                                if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {

                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                        // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);
                                        if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                            $diaReporte = max(1, $existeDia[0]->DIAS);

                                            $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                            $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                            $fechaReporteUtc = $fechaReporte->setTimezone('UTC');
                                            Carbon::setLocale('es');
                                            $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                            // Extracción y manejo de la fecha de la primera cuota
                                            $codigoAnio = substr($Cuota1, 0, 1);
                                            $anio = substr($Cuota1, 1, 2);
                                            $mes = substr($Cuota1, 3, 2);
                                            $dia = substr($Cuota1, 5, 2);

                                            $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                            $fecha1eraCuotaUtc = $fecha1eraCuota->setTimezone('UTC');
                                            Carbon::setLocale('es');
                                            $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                            $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                            $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                            // Calcular el último día del mes siguiente a la fecha del crédito
                                            $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                            // Calcular el último día del mes de la primera cuota
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                            // Comparar si son iguales
                                            //resultado
                                            $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                            // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                            $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                            // Implementar la lógica de la fórmula de Excel
                                            $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                            // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                            $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=30

                                            // Comprobar si todas las condiciones relevantes son verdaderas
                                            $resultado1 = $condicion1 && $condicion3 ? true : false;




                                            // Primera condición externa
                                            if ($fechadelCredito->gt($fechaReporte)) {
                                                $resultado2 = false;
                                            } else {
                                                // Condición interna
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                    $resultado2 = true;
                                                } else {
                                                    $resultado2 = false;
                                                }
                                            }


                                            // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                            $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                            // Condición 2: La diferencia en días entre E15 y B14 es de 30 días o menos
                                            $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                            // Resultado basado en las condiciones
                                            $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                            // Calcular el último día del mes de B14
                                            $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                            // Calcular el último día del mes anterior a E15
                                            $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                            // Verificar las condiciones
                                            $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                            $condicion6 = $fechaReporte->gte($fechadelCredito);
                                            $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                            // Evaluar si todas las condiciones son verdaderas
                                            $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                            // Primer nivel de comprobación
                                            if ($fechadelCredito->gt($fechaReporte)) {
                                                $resultado5 = false;
                                            } else {
                                                // Segundo nivel de comprobación
                                                $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                $resultado5 = $condicionA && $condicionB ? true : false;
                                            }
                                        }



                                        $formateada = $fechaReporte->format('d/m/Y');

                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }


                                        //dd($resultado, $resultado1, $resultado2,$resultado3,$resultado4,$resultado5);
                                        if ((($resultado == false && $resultado1 == false && $resultado2 == false) && ($resultado3 == false && $resultado4 == false && $resultado5 == true))) {

                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                            $NoAgencia = $request->NoAgencia;
                                            $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporFecha', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);

                                            return back()->with("incorrecto", $message);
                                        } else {

                                            //INTERES PROPORCIONAL
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                            $NoAgencia = $request->NoAgencia;

                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";

                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporScore', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);

                                            return back()->with("incorrecto", $message);
                                        }
                                    }
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                        $anioCompleto = 2000 + (int) $anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);


                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // Extracción y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                        $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                        // Fórmula 1
                                        $resultado1 = (
                                            $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                            (
                                                $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                                $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                                $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                            )
                                        );


                                        // Fórmula 2
                                        $resultado2 = (
                                            Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                            $fechaReporte->gte($fechadelCredito) &&
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30
                                        ) ? true : false;

                                        // Fórmula 3
                                        $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                            (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
                                        );

                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        if ($resultado1 == false && $resultado2 == false && $resultado3 == false) {

                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                            $NoAgencia = $request->NoAgencia;
                                            $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporFecha', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);
                                            return back()->with("incorrecto", $message);
                                        } else {
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);
                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $intervalmin = $interval->days;
                                            $intervalmax = $intervalmin + 30;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $intervalmax;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                            $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                            $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                            $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                            $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                            $NoAgencia = $request->NoAgencia;

                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";
                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporScore', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);

                                            return back()->with("incorrecto", $message);

                                        }
                                    }

                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;



                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // Extracción y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);


                                        $result = $fechadelCredito > $fechaReporte;


                                        $result1 = $fechaReporte->lt($fechadelCredito) &&
                                            ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                        if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                                            $result2 = false;
                                        } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                                            $result2 = true;
                                        } else {
                                            $result2 = false;
                                        }


                                        //CUARTO CONDICIONAL
                                        $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                        //QUINTO
                                        $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                        //SEXTO
                                        $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                        $formateada = $fechaReporte->format('d/m/Y');



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }


                                        if (($result == false && $result1 == false && $result2 == false) || ($resultado3 == false && $resultado4 == false && $resultado5 == false)) {
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                            $NoAgencia = $request->NoAgencia;
                                            $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporFecha', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);
                                            return back()->with("incorrecto", $message);
                                        } else {
                                            //INTERES PROPORCIONAL
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                            $NoAgencia = $request->NoAgencia;

                                            //COORDINACION 1
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;

                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 1',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 2
                                            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 2',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 3
                                            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 3',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 4
                                            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 4',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            //COORDINACION 5
                                            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $cedula = $request->Cedula_Persona;
                                                $nombrepagare = $request->NombreCompleto;
                                                $capital = $request->Capital;
                                                $idpagare = $request->ID_Pagare;
                                                $correo = $request->Correo;
                                                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $agencia = $existingAgencia[0]->Agencia;
                                                $idpersona = $existingAgencia[0]->ID;
                                                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                                $score = $existingScore[0]->Score;
                                                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                                date_default_timezone_set('America/Bogota');
                                                $fechaHoraActual = date('Y-m-d H:i:s');


                                                $sql = DB::insert('INSERT INTO pagare (Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                    0,
                                                    'Coordinacion 5',
                                                    1,
                                                    $interesProporcional,
                                                    $fechaStringCredito,
                                                    $ValorGarantia,
                                                    $request->NoAgencia,
                                                    $agencia,
                                                    $request->CuentaCoop,
                                                    $request->Cedula_Persona,
                                                    $request->NombreCompleto,
                                                    $request->ID_Pagare,
                                                    $request->Linea_Credito,
                                                    $lineacredito,
                                                    $request->Capital,
                                                    $request->NoCuotas,
                                                    $request->ValorCuota,
                                                    $request->Tasa,
                                                    $fechaFormateada3,
                                                    $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                    $request->Direccion,
                                                    $request->TelFijo,
                                                    $fechaFormateada,
                                                    $fechaFormateada2,
                                                    $request->Celular,
                                                    $request->Correo,
                                                    $request->GeneradorPagare,
                                                    $persona2->ID
                                                ]);
                                            }
                                            $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";
                                            $usuarioActual = Auth::user();
                                            $nombre = $usuarioActual->name;
                                            $rol = $usuarioActual->rol;
                                            $cedulaagregada = $request->Cedula_Persona;
                                            date_default_timezone_set('America/Bogota');
                                            $ip = $_SERVER['REMOTE_ADDR'];
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $agencia = $usuarioActual->agenciau;
                                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporScore', ?, ?, ?, ?)", [
                                                null,
                                                $nombre,
                                                $rol,
                                                $agencia,
                                                $fechaHoraActual,
                                                $cedulaagregada,
                                                null,
                                                $ip
                                            ]);

                                            return back()->with("incorrecto", $message);

                                        }
                                    }

                                }
                            }
                        }
                    }
                } else {
                    return back()->with("incorrecto2", "Persona con cc. $request->Cedula_Persona NO se registró! Error al Registrar!");
                }
            } else {
                if ($request->Capital <= 3000000) {
                    $Cuota1 = $request->Fecha1Cuota;
                    $CuotaFinal = $request->FechaUltimaCuota;
                    $fechaCredito = $request->FechaCredito;

                    $codigoAnio = substr($Cuota1, 0, 1);
                    $anio = substr($Cuota1, 1, 2);
                    $mes = substr($Cuota1, 3, 2);
                    $dia = substr($Cuota1, 5, 2);


                    $codigoAnio2 = substr($CuotaFinal, 0, 1);
                    $anio2 = substr($CuotaFinal, 1, 2);
                    $mes2 = substr($CuotaFinal, 3, 2);
                    $dia2 = substr($CuotaFinal, 5, 2);


                    $codigoAnio3 = substr($fechaCredito, 0, 1);
                    $anio3 = substr($fechaCredito, 1, 2);
                    $mes3 = substr($fechaCredito, 3, 2);
                    $dia3 = substr($fechaCredito, 5, 2);


                    $anioReal = 2000 + (int) $anio;

                    $anioReal2 = 2000 + (int) $anio2;

                    $anioReal3 = 2000 + (int) $anio3;

                    $meses = [
                        '01' => 'Enero',
                        '02' => 'Febrero',
                        '03' => 'Marzo',
                        '04' => 'Abril',
                        '05' => 'Mayo',
                        '06' => 'Junio',
                        '07' => 'Julio',
                        '08' => 'Agosto',
                        '09' => 'Septiembre',
                        '10' => 'Octubre',
                        '11' => 'Noviembre',
                        '12' => 'Diciembre'
                    ];
                    $nombreMes = $meses[$mes];

                    $nombreMes2 = $meses[$mes2];

                    $nombreMes3 = $meses[$mes3];

                    $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                    $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                    $fechaFormateada3 = $nombreMes3 . " " . (int) $dia3 . " del " . $anioReal3;

                    $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                    $lineacredito = $credito[0]->Credito;

                    //API S400 - PERSONA
                    $url = env('URL_SERVER_API');
                    $attempts = 0;
                    $maxAttempts = 3;
                    $retryDelay = 500; // Milisegundos

                    do {
                        try {
                            $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                            $data = $response->json();
                            $response2 = Http::get($url . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                            $data2 = $response2->json();
                            break;
                        } catch (\Exception $e) {
                            $attempts++;
                            usleep($retryDelay * 1000);
                        }
                    } while ($attempts < $maxAttempts);

                    if ($attempts == $maxAttempts) {
                        return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                    }

                    $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                    $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                    $ENTIDAD = $data['asociado']['ENTIDAD'];
                    $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                    $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


                    //API S400 - GARANTIA
                    $url2 = env('URL_SERVER_API');
                    $attempts2 = 0;
                    $maxAttempts2 = 3;
                    $retryDelay2 = 500; // Milisegundos

                    do {
                        try {
                            $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                            $data2 = $response2->json();
                            break;
                        } catch (\Exception $e) {
                            $attempts2++;
                            usleep($retryDelay2 * 1000);
                        }
                    } while ($attempts2 < $maxAttempts2);

                    if ($attempts2 == $maxAttempts2) {
                        return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                    }

                    if (isset($data2['garantia'])) {
                        $ValorGarantia = $data2['garantia']['GARANTIA'];
                    } else {
                        return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagaré <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                    }


                    $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                    $existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);

                    //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                    if (!empty($existeNominaDepen)) {
                        //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                        if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);

                            $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                            // FECHA REPORTE POR MES ACTUAL
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                $anioCompleto = 2000 + (int) $anio3;
                                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                }
                                $fechadelCredito = Carbon::now('America/Bogota');
                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);
                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);

                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                    $fechaReporteUtc = $fechaReporte->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                    // Extracción y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    $fecha1eraCuotaUtc = $fecha1eraCuota->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                    // Calcular el último día del mes siguiente a la fecha del crédito
                                    $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                    // Calcular el último día del mes de la primera cuota
                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                    // Comparar si son iguales
                                    //resultado
                                    $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                    // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                    // Implementar la lógica de la fórmula de Excel
                                    $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                    // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                    $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=30

                                    // Comprobar si todas las condiciones relevantes son verdaderas
                                    $resultado1 = $condicion1 && $condicion3 ? true : false;




                                    // Primera condición externa
                                    if ($fechadelCredito->gt($fechaReporte)) {
                                        $resultado2 = false;
                                    } else {
                                        // Condición interna
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                        $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                        $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                        if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                            $resultado2 = true;
                                        } else {
                                            $resultado2 = false;
                                        }
                                    }


                                    // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                    $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                    // Condición 2: La diferencia en días entre E15 y B14 es de 30 días o menos
                                    $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                    // Resultado basado en las condiciones
                                    $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                    // Calcular el último día del mes de B14
                                    $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                    // Calcular el último día del mes anterior a E15
                                    $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                    // Verificar las condiciones
                                    $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                    $condicion6 = $fechaReporte->gte($fechadelCredito);
                                    $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                    // Evaluar si todas las condiciones son verdaderas
                                    $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                    // Primer nivel de comprobación
                                    if ($fechadelCredito->gt($fechaReporte)) {
                                        $resultado5 = false;
                                    } else {
                                        // Segundo nivel de comprobación
                                        $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                        $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                        $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                        $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                        $resultado5 = $condicionA && $condicionB ? true : false;
                                    }

                                    $formateada = $fechaReporte->format('d/m/Y');



                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    }
                                }
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $anioCompleto = 2000 + (int) $anio3;
                                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                }

                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                    // Extracción y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                    $formateada = $fechaReporte->format('d/m/Y');
                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                    // Fórmula 1
                                    $resultado1 = (
                                        $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                        (
                                            $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                            $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                            $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                        )
                                    );
                                    // Fórmula 2
                                    $resultado2 = (
                                        Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                        $fechaReporte->gte($fechadelCredito) &&
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30
                                    ) ? true : false;

                                    // Fórmula 3
                                    $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                        (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
                                    );
                                }
                            }

                            if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {

                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                // Formatear los números para eliminar decimales no deseados
                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');

                                $NoAgencia = $request->NoAgencia;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }

                                $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {

                                $anioCompleto = 2000 + (int) $anio3;
                                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                                }
                                $fechadelCredito = Carbon::now('America/Bogota');

                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);
                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                        $fechaReporteActual->addMonth();
                                    }

                                    $fechaReporte = $fechaReporteActual;



                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                    // Extracción y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                    $result = $fechadelCredito > $fechaReporte;


                                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30);



                                    if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                                        $result2 = false;
                                    } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                                        $result2 = true;
                                    } else {
                                        $result2 = false;
                                    }

                                    //CUARTO CONDICIONAL
                                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                    //QUINTO
                                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                    //SEXTO
                                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                    $formateada = $fechaReporte->format('d/m/Y');
                                }





                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {

                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 1',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 2',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 3',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            1,
                                            'Coordinacion 4',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            1,
                                            'Coordinacion 5',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }

                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                    return back()->with("correcto", $message);
                                }
                            } else {
                                //RECHAZO

                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);


                                $anioCompleto = 2000 + (int) $anio3;
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                $message = "";

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }


                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);
                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $intervalmin = $interval->days;
                                    $intervalmax = $intervalmin + 30;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $intervalmax;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                    $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                    $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                    $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                    $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }

                                    $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                }


                                if (empty($message)) {
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                                }

                                return back()->with("incorrecto", $message);
                            }
                        }
                    }
                } else {
                    return back()->with("incorrecto2", "Persona con cc. $request->Cedula_Persona NO existe en la Base de datos de Datacrédito(Debe registrarse al asociado porque el crédito es mayor a $3'000.000)");
                }
            }
        }
    }

    public function FechaReporte(Request $request)
    {
        $url = env('URL_SERVER_API');
        $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
        $fechaCredito = $request->fechaCredito;
        $Cuota1 = $request->fecha1eraCuota;

        if ($response->successful()) {
            $data = $response->json();
            $existeNominaDepen = DB::select('SELECT NOMBRENOMINA, CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD, FECHAREPORTE, CODDEPENDENCIA FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$data['asociado']['CODIGONOMINA'], $data['asociado']['#DEPENDENCIA'], $data['asociado']['ENTIDAD']]);
            $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
            $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
            $ENTIDAD = $data['asociado']['ENTIDAD'];
            $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
            $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


            $codigoAnio3 = substr($fechaCredito, 0, 1);
            $anio3 = substr($fechaCredito, 1, 2);
            $mes3 = substr($fechaCredito, 3, 2);
            $dia3 = substr($fechaCredito, 5, 2);
            $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
            // FECHA REPORTE POR MES ACTUAL

            if ($existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                $anioCompleto = 2000 + (int) $anio3;
                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                }
                $fechadelCredito = Carbon::now('America/Bogota');
                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                Carbon::setLocale('es');
                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                $parts = explode(' ', $fechaStringCredito);
                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                $fechaStringCredito = implode(' ', $parts);
                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                    $diaReporte = max(1, $existeDia[0]->DIAS);

                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                    $fechaReporteUtc = $fechaReporte->setTimezone('UTC');
                    Carbon::setLocale('es');
                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                    // Extracción y manejo de la fecha de la primera cuota
                    $codigoAnio = substr($Cuota1, 0, 1);
                    $anio = substr($Cuota1, 1, 2);
                    $mes = substr($Cuota1, 3, 2);
                    $dia = substr($Cuota1, 5, 2);

                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                    $fecha1eraCuotaUtc = $fecha1eraCuota->setTimezone('UTC');
                    Carbon::setLocale('es');
                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                    // Calcular el último día del mes siguiente a la fecha del crédito
                    $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                    // Calcular el último día del mes de la primera cuota
                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                    // Comparar si son iguales
                    //resultado
                    $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                    // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                    // Implementar la lógica de la fórmula de Excel
                    $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                    // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                    $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=30

                    // Comprobar si todas las condiciones relevantes son verdaderas
                    $resultado1 = $condicion1 && $condicion3 ? true : false;




                    // Primera condición externa
                    if ($fechadelCredito->gt($fechaReporte)) {
                        $resultado2 = false;
                    } else {
                        // Condición interna
                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                        $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                        $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                        if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                            $resultado2 = true;
                        } else {
                            $resultado2 = false;
                        }
                    }


                    // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                    $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                    // Condición 2: La diferencia en días entre E15 y B14 es de 30 días o menos
                    $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                    // Resultado basado en las condiciones
                    $resultado3 = ($condicion3 || $condicion4) ? true : false;


                    // Calcular el último día del mes de B14
                    $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                    // Calcular el último día del mes anterior a E15
                    $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                    // Verificar las condiciones
                    $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                    $condicion6 = $fechaReporte->gte($fechadelCredito);
                    $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                    // Evaluar si todas las condiciones son verdaderas
                    $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                    // Primer nivel de comprobación
                    if ($fechadelCredito->gt($fechaReporte)) {
                        $resultado5 = false;
                    } else {
                        // Segundo nivel de comprobación
                        $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                        $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                        $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                        $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                        $resultado5 = $condicionA && $condicionB ? true : false;
                    }

                    $formateada = $fechaReporte->format('d/m/Y');
                }
                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                    $fechaValidar = 'verdadero';
                } else {
                    $fechaValidar = 'falso';
                }
            } else if ($existeDia[0]->ENTREMES == 1) {
                $anioCompleto = 2000 + (int) $anio3;
                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                }
                $fechadelCredito = Carbon::now('America/Bogota');

                Carbon::setLocale('es');
                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                $parts = explode(' ', $fechaStringCredito);
                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                $fechaStringCredito = implode(' ', $parts);
                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                    $diaReporte = max(1, $existeDia[0]->DIAS);
                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                        $fechaReporteActual->addMonth();
                    }

                    $fechaReporte = $fechaReporteActual;



                    Carbon::setLocale('es');
                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                    // Extracción y manejo de la fecha de la primera cuota
                    $codigoAnio = substr($Cuota1, 0, 1);
                    $anio = substr($Cuota1, 1, 2);
                    $mes = substr($Cuota1, 3, 2);
                    $dia = substr($Cuota1, 5, 2);

                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

                    Carbon::setLocale('es');
                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);


                    $result = $fechadelCredito > $fechaReporte;


                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                            $fechaReporte->diffInDays($fechadelCredito) <= 30);


                    if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                        $result2 = false;
                    } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                        $result2 = true;
                    } else {
                        $result2 = false;
                    }


                    //CUARTO CONDICIONAL
                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                    //QUINTO
                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                    //SEXTO
                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                    $formateada = $fechaReporte->format('d/m/Y');
                }

                if (($resultado == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                    $fechaValidar = 'verdadero';
                } else {
                    $fechaValidar = 'falso';
                }
            } else if ($existeDia[0]->MESANTERIOR == 1 && $existeDia[0]->ENTREMES == 0) {
                $anioCompleto = 2000 + (int) $anio3;
                if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                    return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                }

                $fechadelCredito = Carbon::now('America/Bogota');
                Carbon::setLocale('es');
                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                $parts = explode(' ', $fechaStringCredito);
                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                $fechaStringCredito = implode(' ', $parts);

                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                    $diaReporte = max(1, $existeDia[0]->DIAS);
                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                    Carbon::setLocale('es');
                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                    // Extracción y manejo de la fecha de la primera cuota
                    $codigoAnio = substr($Cuota1, 0, 1);
                    $anio = substr($Cuota1, 1, 2);
                    $mes = substr($Cuota1, 3, 2);
                    $dia = substr($Cuota1, 5, 2);

                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                    Carbon::setLocale('es');
                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                    $formateada = $fechaReporte->format('d/m/Y');
                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);


                    // Fórmula 1
                    $resultado1 = (
                        $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                        (
                            $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                            $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                            $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                        )
                    );

                    // Fórmula 2
                    $resultado2 = (
                        Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                        $fechaReporte->gte($fechadelCredito) &&
                        $fechaReporte->diffInDays($fechadelCredito) <= 30
                    ) ? true : false;

                    // Fórmula 3
                    $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                        (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                            $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
                    );
                }
                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {
                    $fechaValidar = 'verdadero';
                } else {
                    $fechaValidar = 'falso';
                }
            }



            if (!empty($existeNominaDepen)) {
                $response_data = array_map(function ($item) {
                    return [
                        'FECHAREPORTE' => $item->FECHAREPORTE,
                        'NOMBRENOMINA' => $item->NOMBRENOMINA,
                        'NOMDEPENDENCIA' => $item->NOMDEPENDENCIA,
                        'CODDEPENDENCIA' => $item->CODDEPENDENCIA,
                    ];
                }, $existeNominaDepen);
                return response()->json(['existeNominaDepen' => $response_data, 'fechaCredito' => $fechaCredito, 'fecha1eraCuota' => $fecha1eraCuota, 'fechaValidar' => $fechaValidar, 'fechaStringFechaReporteAjax' => $fechaStringFechaReporteAjax]);
            } else {
                return response()->json(['message' => 'No data found'], 404);
            }
        }



        return response()->json(['message' => 'Error processing request'], 500);
    }



    public function generarpdf(Request $request)
    {
        $fpdf = new Fpdf('P', 'cm', 'A4');
        $fpdf = new Fpdf('P', 'cm', 'A4');
        $fpdf->AddPage("P");

        Carbon::setLocale('es');
        $fecha_actual = Carbon::now('America/Bogota');
        $fecha_formateada = $fecha_actual->isoFormat('dddd, D [de] MMMM [de] YYYY , [Hora de Generación] - H:mm:ss');
        $fecha_formateada = preg_replace_callback('/\b(\p{L}+)\b/u', function ($matches) {
            return ucfirst($matches[0]);
        }, $fecha_formateada);

        $linea_credito = $request->lineacredito;
        $año = $request->year;
        $mes = $request->month;
        $fpdf->SetFont('Arial', 'B', 18);
        $fpdf->Cell(0, 0, utf8_decode('REPORTE POR AGENCIAS - PAGARÉ'), 0, 0, 'C');
        $fpdf->Ln();
        $fpdf->Cell(0, 1.2, utf8_decode($fecha_formateada), 0, 0, 'C');
        $fpdf->Ln();
        $fpdf->Cell(0, 1, utf8_decode('LINEA DE CRÉDITO: ' . $linea_credito . '. FILTRO: ' . $año . ' - ' . $mes), 0, 0, 'C');
        $fpdf->Ln();


        $sql = DB::select("SELECT FechaAccion FROM pagare");


        $fpdf->SetFont('Helvetica', 'B', 17);
        $headers = ['Agencia', 'A', '$$ Aprobado', 'R', '$$ Rechazado'];
        foreach ($headers as $header) {
            if ($header === 'Agencia') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(6, 1, utf8_decode($header), 'T', 0, 'L');
            } else if ($header === 'A') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(2, 1, utf8_decode($header), 'T', 0, 'L');
            } elseif ($header === '$$ Aprobado') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(4.5, 1, $header, 'T', 0, 'L');
            } elseif ($header === 'R') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(2, 1, utf8_decode($header), 'T', 0, 'L');
            } elseif ($header === '$$ Rechazado') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(4, 1, utf8_decode($header), 'T', 0, 'L');
            }
        }
        $fpdf->Ln();
        $totalApproved = 0;
        $totalRejected = 0;
        $totalCapitalApproved = 0;
        $totalCapitalRejected = 0;
        $agenciaColumnaMapping = [
            'Bogotá Elemento' => 13,
            'CaliBC' => 30,
            'Cali' => 31,
            'Palmira' => 32,
            'Buga' => 34,
            'Buenaventura' => 33,
            'Tuluá' => 35,
            'Sevilla' => 36,
            'La Unión' => 37,
            'Roldanillo' => 38,
            'Cartago' => 39,
            'Zarzal' => 40,
            'Caicedonia' => 41,
            'S Quilichao' => 42,
            'Yumbo' => 43,
            'Jamundí' => 44,
            'Pasto' => 45,
            'Popayán' => 46,
            'Ipiales' => 47,
            'Leticia' => 48,
            'Puerto Asis' => 49,
            'Soacha' => 68,
            'Manizales' => 70,
            'Zipaquirá' => 73,
            'Facatativá' => 75,
            'Pereira' => 74,
            'Girardot' => 76,
            'San Andrés' => 77,
            'Armenia' => 78,
            'Medellín' => 80,
            'Monteria' => 81,
            'Sincelejo' => 82,
            'Yopal' => 83,
            'Riohacha' => 84,
            'Valledupar' => 85,
            'Cartagena' => 86,
            'Barranquilla' => 87,
            'Santa Marta' => 88,
            'Duitama' => 89,
            'Bogotá Centro' => 90,
            'Bogotá TC' => 91,
            'Bogotá Norte' => 92,
            'Villavicencio' => 93,
            'Tunja' => 94,
            'Ibagué' => 95,
            'Neiva' => 96,
            'Bucaramanga' => 97,
            'Cúcuta' => 98,

        ];

        // $filtro = DB::select("SELECT * FROM `pagare` WHERE FechaAccion LIKE '%" . $request->month . "%' AND FechaAccion LIKE '%" . $request->year . "%'");


        if ($linea_credito == 0) {
            $columnaFecha = 'FechaAccion';
            foreach ($agenciaColumnaMapping as $agencyName => $agencyNo) {
                $countApproved = DB::table('pagare')
                    ->where('NoAgencia', $agencyNo)
                    ->where('Aprobado', 1)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->count();

                $countRejected = DB::table('pagare')
                    ->where('NoAgencia', $agencyNo)
                    ->where('Aprobado', 0)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->count();

                $totalCapitalApproved2 = DB::table('pagare')
                    ->where('Aprobado', 1)
                    ->where('NoAgencia', $agencyNo)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->sum('Capital');

                $totalCapitalRejected2 = DB::table('pagare')
                    ->where('Aprobado', 0)
                    ->where('NoAgencia', $agencyNo)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->sum('Capital');



                $fpdf->SetFont('Helvetica', '', 17);
                $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                $fpdf->Ln();
                $totalApproved += $countApproved;
                $totalCapitalApproved += $totalCapitalApproved2;
                $totalRejected += $countRejected;
                $totalCapitalRejected += $totalCapitalRejected2;
            }
        } else {

            $columnaFecha = 'FechaAccion';
            foreach ($agenciaColumnaMapping as $agencyName => $agencyNo) {
                $countApproved = DB::table('pagare')
                    ->where('NoAgencia', $agencyNo)
                    ->where('Aprobado', 1)
                    ->where('NoLC', $linea_credito)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->count();

                $countRejected = DB::table('pagare')
                    ->where('NoAgencia', $agencyNo)
                    ->where('Aprobado', 0)
                    ->where('NoLC', $linea_credito)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->count();

                $totalCapitalApproved2 = DB::table('pagare')
                    ->where('Aprobado', 1)
                    ->where('NoAgencia', $agencyNo)
                    ->where('NoLC', $linea_credito)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->sum('Capital');

                $totalCapitalRejected2 = DB::table('pagare')
                    ->where('Aprobado', 0)
                    ->where('NoAgencia', $agencyNo)
                    ->where('NoLC', $linea_credito)
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $año . '%'])
                    ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                    ->sum('Capital');



                $fpdf->SetFont('Helvetica', '', 17);
                $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                $fpdf->Ln();
                $totalApproved += $countApproved;
                $totalCapitalApproved += $totalCapitalApproved2;
                $totalRejected += $countRejected;
                $totalCapitalRejected += $totalCapitalRejected2;
            }
        }

        $formattedTotalApproved = number_format($totalApproved, 0, ',', '.');
        $formattedTotalCapitalApproved = number_format($totalCapitalApproved, 0, ',', '.');
        $formattedTotalRejected = number_format($totalRejected, 0, ',', '.');
        $formattedTotalCapitalRejected = number_format($totalCapitalRejected, 0, ',', '.');


        $fpdf->SetFont('Helvetica', 'B', 17);
        $fpdf->Cell(6, 1, utf8_decode('TOTAL'), 'T', 0, 'L');
        $fpdf->Cell(2, 1, utf8_decode($formattedTotalApproved), 'T', 0, 'L');
        $fpdf->Cell(4.5, 1, utf8_decode($formattedTotalCapitalApproved), 'T', 0, 'L');
        $fpdf->Cell(2, 1, utf8_decode($formattedTotalRejected), 'T', 0, 'L');
        $fpdf->Cell(4, 1, utf8_decode($formattedTotalCapitalRejected), 'T', 0, 'L');


        $fpdf->Output('I', 'Storage/files/pagare/REPORTE-PAGARÉ.pdf');
        $fpdf->Output('F', 'Storage/files/pagare/REPORTE-PAGARÉ.pdf');
        exit;
    }


    public function data12()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 0 AND B.NombreAgencia = '$agenciaU'
                ORDER BY A.ID ASC

            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }


    public function data13()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 1 AND B.NombreAgencia = '$agenciaU'
                ORDER BY A.ID ASC

            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }


    public function data14()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 3 AND B.NombreAgencia = '$agenciaU'
                ORDER BY A.ID ASC

            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }



    public function adjuntarAutorizacion(Request $request, $id)
    {
        // Verificar si se subió un archivo
        if (!$request->hasFile('DocuAutorizacion')) {
            return back()->withErrors(['message' => 'No se subió ningún archivo.']);
        }

        $file = $request->file('DocuAutorizacion');
        $filename = $file->getClientOriginalName();

        // Verificar si el archivo es PDF
        if ($file->getClientOriginalExtension() !== 'pdf') {
            return back()->withErrors(['message' => 'Solo se pueden subir archivos PDF.']);
        }

        // Obtener cédula de la persona asociada al ID
        $resultCedula = DB::select('SELECT Cedula_Persona FROM pagare WHERE ID = ?', [$id]);
        $cedula = $resultCedula[0]->Cedula_Persona ?? null;
        if (is_null($cedula)) {
            return back()->withErrors(['message' => 'No se encontró una cédula asociada con este ID.']);
        }

        // Verificar nombre del archivo
        if ($filename !== 'Autorizacion-' . $cedula . '.pdf') {
            return back()->withErrors([
                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $cedula . '.pdf'
            ]);
        }

        // Contar archivos existentes y crear nuevo nombre de archivo
        $existingFilesCount = DB::table('pagare')
            ->where('Cedula_Persona', $cedula)
            ->where('DocuAutorizacion', 'like', 'Autorizacion-' . $cedula . '%')
            ->count();
        $newFilename = 'Autorizacion-' . $cedula . '-' . ($existingFilesCount + 1) . '.pdf';

        // Subir el archivo
        $dir = 'Storage/files/autorizacionpagare/';
        if (!$file->move($dir, $newFilename)) {
            return back()->withErrors(['message' => 'Error al subir el archivo.']);
        }

        // Actualizar base de datos
        $sql5 = DB::update("UPDATE pagare SET DocuAutorizacion = ?, AutorizacionGerente = ?, Aprobado = ? WHERE ID = ?", [
            $newFilename,
            3,
            1,
            $id
        ]);

        if ($sql5) {
            $existingNoAgencia = DB::select('SELECT NoAgencia, Aprobado FROM pagare WHERE ID = ?', [$id]);
            $NoAgencia = $existingNoAgencia[0]->NoAgencia;
            $aprobado = $existingNoAgencia[0]->Aprobado;

            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 1',
                    3

                ]);
                $idposicionpagare = $existingPerson[0]->ID;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                foreach ($usuarios2 as $email2) {
                    Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));

            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 2',
                    3
                ]);

                $idposicionpagare = $existingPerson[0]->ID;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                foreach ($usuarios2 as $email2) {
                    Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));



            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ? WHERE ID = $id", [
                    1,
                    'Coordinacion 3',
                    3
                ]);
                $idposicionpagare = $existingPerson[0]->ID;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                foreach ($usuarios2 as $email2) {
                    Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));



            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ? WHERE ID = $id", [
                    1,
                    'Coordinacion 4',
                    3
                ]);

                $idposicionpagare = $existingPerson[0]->ID;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                foreach ($usuarios2 as $email2) {
                    Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));

            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');


                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 5',
                    3
                ]);

                $idposicionpagare = $existingPerson[0]->ID;
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                foreach ($usuarios2 as $email2) {
                    Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));

            }

            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $pagareID = DB::select("SELECT ID FROM pagare WHERE ID = ?", [$id]);
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'AdjuntóAutorizaciónPagare', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $pagareID[0]->ID,
                null,
                $ip
            ]);


            return back()->with("correcto3", "¡Se adjuntó correctamente la Autorización!");
        } else {
            return back()->with("incorrecto", "¡Error al adjuntar la Autorización!");
        }
    }

    public function createpagareordinario(Request $request)
    {

        $existingLinea = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);

        if ($existingLinea == false) {
            return back()->with("incorrecto2", "Linea de Crédito No. $request->Linea_Credito NO existe! Error al Registrar!");
        } else {


            $Cuota1 = $request->Fecha1Cuota;
            $CuotaFinal = $request->FechaUltimaCuota;

            $codigoAnio = substr($Cuota1, 0, 1);
            $anio = substr($Cuota1, 1, 2);
            $mes = substr($Cuota1, 3, 2);
            $dia = substr($Cuota1, 5, 2);


            $codigoAnio2 = substr($CuotaFinal, 0, 1);
            $anio2 = substr($CuotaFinal, 1, 2);
            $mes2 = substr($CuotaFinal, 3, 2);
            $dia2 = substr($CuotaFinal, 5, 2);


            $anioReal = 2000 + (int) $anio;

            $anioReal2 = 2000 + (int) $anio2;


            $meses = [
                '01' => 'Enero',
                '02' => 'Febrero',
                '03' => 'Marzo',
                '04' => 'Abril',
                '05' => 'Mayo',
                '06' => 'Junio',
                '07' => 'Julio',
                '08' => 'Agosto',
                '09' => 'Septiembre',
                '10' => 'Octubre',
                '11' => 'Noviembre',
                '12' => 'Diciembre'
            ];
            $nombreMes = $meses[$mes];

            $nombreMes2 = $meses[$mes2];


            $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

            $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;


            $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
            $lineacredito = $credito[0]->Credito;

            //API S400 - PERSONA
            $url = env('URL_SERVER_API');
            $attempts = 0;
            $maxAttempts = 3;
            $retryDelay = 500; // Milisegundos
            //$accessToken = $this->iniciarSesion();


            do {
                try {
                    $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                    // $response2 = Http::withHeaders([
                    //     'Authorization' => 'Bearer ' . $accessToken,
                    // ])->get($url . 'estado/' . $request->CuentaCoop . '/' . $request->Linea_Credito . '/' . $request->Capital);
                    $response2 = Http::get($url . 'estado/' . $request->CuentaCoop . '/' . $request->Linea_Credito . '/' . $request->Capital);
                    $data = $response->json();
                    $data2 = $response2->json();
                    break;
                } catch (\Exception $e) {
                    $attempts++;
                    usleep($retryDelay * 1000);
                }
            } while ($attempts < $maxAttempts);

            if ($attempts == $maxAttempts) {
                return back()->with("incorrecto", "Reintentar, hay fallos en la red");
            }
            // $TOKEN = $data2['access_token'];
            // dd($TOKEN);

            $STATUS = $data2['status'];

            $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
            $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
            $ENTIDAD = $data['asociado']['ENTIDAD'];
            $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
            $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];



            $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
            //EN LA API APARECE ESTADO 200 SI FUE ENCONTRADO DE FORMA CORRECTA, SI APARECE 422 ES QUE NO EXISTE


            if ($STATUS !== '200') {
                //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                if (!empty($existeNominaDepen)) {
                    //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                    if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                        $usuarioActual = Auth::user();
                        $nombre = $usuarioActual->name;
                        $rol = $usuarioActual->rol;
                        $cedulaagregada = $request->Cedula_Persona;
                        date_default_timezone_set('America/Bogota');
                        $ip = $_SERVER['REMOTE_ADDR'];
                        $fechaHoraActual = date('Y-m-d H:i:s');
                        $agencia = $usuarioActual->agenciau;
                        $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareOrdinarioAprobado', ?, ?, ?, ?)", [
                            null,
                            $nombre,
                            $rol,
                            $agencia,
                            $fechaHoraActual,
                            $cedulaagregada,
                            null,
                            $ip
                        ]);

                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                        // FECHA REPORTE POR MES ACTUAL
                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                            $fechadelCredito = Carbon::now('America/Bogota');

                            // Obtener el año, mes y día de la fecha del crédito
                            $anio3 = $fechadelCredito->year;
                            $mes3 = $fechadelCredito->month;
                            $dia3 = $fechadelCredito->day;

                            $anioCompleto = 2000 + (int) $anio3;
                            if (!checkdate((int) $mes3, (int) $dia3, $anioCompleto)) {
                                return back()->with('incorrecto3', 'La fecha ingresada no es válida. Por favor, verifica e intenta de nuevo.');
                            }

                            $fechadelCredito = Carbon::now('America/Bogota');
                            $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                            // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);
                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                $fechaReporteUtc = $fechaReporte->setTimezone('UTC');
                                Carbon::setLocale('es');
                                $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                // Extracción y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                $fecha1eraCuotaUtc = $fecha1eraCuota->setTimezone('UTC');
                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                // Calcular el último día del mes siguiente a la fecha del crédito
                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                // Calcular el último día del mes de la primera cuota
                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                // Comparar si son iguales
                                //resultado
                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                // Implementar la lógica de la fórmula de Excel
                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=30

                                // Comprobar si todas las condiciones relevantes son verdaderas
                                $resultado1 = $condicion1 && $condicion3 ? true : false;




                                // Primera condición externa
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado2 = false;
                                } else {
                                    // Condición interna
                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                        $resultado2 = true;
                                    } else {
                                        $resultado2 = false;
                                    }
                                }


                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                // Condición 2: La diferencia en días entre E15 y B14 es de 30 días o menos
                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                // Resultado basado en las condiciones
                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                // Calcular el último día del mes de B14
                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                // Calcular el último día del mes anterior a E15
                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                // Verificar las condiciones
                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                // Evaluar si todas las condiciones son verdaderas
                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                // Primer nivel de comprobación
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado5 = false;
                                } else {
                                    // Segundo nivel de comprobación
                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                }
                                $formateada = $fechaReporte->format('d/m/Y');
                            }

                            //dd($resultado, $resultado1, $resultado2, $resultado3, $resultado4, $resultado5);

                            if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {



                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }

                                return back()->with("correcto", $message);
                            } else {
                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareOrdinarioRechazado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);


                                $anioCompleto = 2000 + (int) $anio3;
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                $message = "";

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }

                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                }
                                return back()->with("incorrecto", $message);
                            }
                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1 && $existeDia[0]->ENTREMES == 0) {
                            $fechadelCredito = Carbon::now('America/Bogota');
                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);

                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                Carbon::setLocale('es');
                                $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                // Extracción y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                $formateada = $fechaReporte->format('d/m/Y');
                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                // Fórmula 1
                                $resultado1 = (
                                    $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                    (
                                        $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                        $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                        $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                    )
                                );


                                // Fórmula 2
                                $resultado2 = (
                                    Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                    $fechaReporte->gte($fechadelCredito) &&
                                    $fechaReporte->diffInDays($fechadelCredito) <= 30
                                ) ? true : false;

                                // Fórmula 3
                                $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                    (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
                                );
                            }


                            if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {

                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                // Formatear los números para eliminar decimales no deseados
                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else {
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                $NoAgencia = $request->NoAgencia;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }
                            return back()->with("incorrecto", $message);
                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                            $fechadelCredito = Carbon::now('America/Bogota');

                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);
                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                    $fechaReporteActual->addMonth();
                                }

                                $fechaReporte = $fechaReporteActual;



                                Carbon::setLocale('es');
                                $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                // Extracción y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);


                                $result = $fechadelCredito > $fechaReporte;


                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                //CUARTO CONDICIONAL
                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                //QUINTO
                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                //SEXTO
                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                $formateada = $fechaReporte->format('d/m/Y');
                            }




                            if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }

                                $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;


                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }
                            return back()->with("incorrecto", $message);
                        } else {
                            //RECHAZO

                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);



                            $message = "";


                            $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            }
                            // FECHA REPORTE POR MES ACTUAL
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }

                                $message = "<span style='font-size: 20px'>Como la fecha de crédito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }


                            if (empty($message)) {
                                $message = "<span style='font-size: 20px'>¡EL PAGARÉ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                            }

                            return back()->with("incorrecto", $message);
                        }
                    }
                }
            } else {
                $message = "<span style='font-size: 20px'>¡El pagaré de " . e($request->NombreCompleto) . " <strong>NO FUE REGISTRADO</strong> porque ya fue <strong>DESEEMBOLSADO</strong> o <strong>ANULADO</strong> en la AS400!";
                return back()->with("incorrecto4", $message);

            }
        }
    }


    public function data15()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.NombreAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
        FROM persona A
        JOIN pagare B ON A.ID = B.ID_Persona
        WHERE Ordinario = 1 AND B.NombreAgencia = '$agenciaU'
        ORDER BY A.ID ASC
    ");

        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }


    public function datosPagare()
    {

        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $noagencia = DB::select("SELECT NumAgencia FROM agencias WHERE NameAgencia = ?", [$agenciaU]);
        $noagencia = $noagencia[0]->NumAgencia;

        $attempts = 0;
        $maxAttempts = 3; //INTENTOS MAXIMOS
        $retryDelay = 300; // Milisegundos
        $datapagare = null;
        do {
            try {
                $response = Http::get('http://app.coopserp.com/conexion_s400/api/infopagare/' . $noagencia);
                $datapagare = $response->json()['pagares'];
                break;
            } catch (\Exception $e) {

                $attempts++;
                usleep($retryDelay * 1000);
            }
        } while ($attempts < $maxAttempts);


        if ($datapagare === null) {

            $user = DB::select("
            SELECT *
            FROM persona A
            JOIN pagare B ON A.ID = B.ID_Persona
            WHERE B.Ordinario = 0 && B.NombreAgencia = '$agenciaU'
            ORDER BY A.ID ASC");


            $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

            // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
            $dataEnfermedades = [];
            foreach ($enfermedades as $enfermedad) {
                $dataEnfermedades[] = [
                    'id' => $enfermedad->ID_Enferm,
                    'nombre' => $enfermedad->Enfermedad,
                ];
            }

            return datatables()->of($user)
                ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
                    $checkboxes = '<div class="row">';

                    $numEnfermedades = count($dataEnfermedades);
                    $numColumnas = 3;
                    $numFilas = ceil($numEnfermedades / $numColumnas);

                    for ($col = 0; $col < $numColumnas; $col++) {
                        $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

                        for ($fila = 0; $fila < $numFilas; $fila++) {
                            $index = $fila + $col * $numFilas;

                            if ($index < $numEnfermedades) {
                                $enfermedad = $dataEnfermedades[$index];

                                $checkboxes .= '<label for="enfermedad_' . $index . '">
                                                    <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
                                                    <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="' . $enfermedad['nombre'] . '">
                                                    ' . $enfermedad['nombre'] . '
                                                </label><br>';
                            }
                        }

                        $checkboxes .= '</div>';
                    }

                    $checkboxes .= '</div>';

                    return $checkboxes;
                })
                ->rawColumns(['Enfermedades'])
                ->toJson();

        }

        foreach ($datapagare as $registro) {
            //variables a usar:
            $agencia = $registro['AGENCIA'];
            $cuenta = $registro['CUENTA'];
            $cedula = $registro['CEDULA'];
            $nombres = $registro['NOMBRES'];
            $idpagare = $registro['IDPAGARE'];
            $linea = $registro['LINEA'] . ' - ' . $registro['LINEANOM'];
            $NoLinea = $registro['LINEA'];
            $NomLinea = $registro['LINEANOM'];
            $capital = $registro['CAPITAL'];
            $ncuotas = $registro['NCUOTAS'];
            $vcuotas = $registro['VCUOTAS'];
            $tasaAPI = $registro['TASA'];
            $estado = $registro['ESTADO'];
            $nomina = $registro['NOMINA'];
            $entidad = $registro['ENTIDAD'];
            $dependencia = $registro['DEPENDENCIA'];
            $nomdependencia = $registro['NOMDEPENDENCIA'];
            $direccion = $registro['DIRECCION'];
            $fijo = $registro['FIJO'];
            $pcuota = $registro['PCUOTA'];
            $ucuota = $registro['UCUOTA'];
            $usuario = $registro['USUARIO'];
            $garantia = $registro['GARANTIA'];
            $interes = $registro['INTERES'];
            $correo = $registro['CORREO'];
            $celular = $registro['CELULAR'];
            $nomNomina = $registro['NOMNOMINA'];

            $foundMatchingPagare = false;

            $existingPagare = DB::select('SELECT ExisteDatacredito, ID_Pagare, CuentaCoop FROM pagare WHERE CuentaCoop = ? AND ID_Pagare = ?', [$registro['CUENTA'], $registro['IDPAGARE']]);

            if (!empty($existingPagare)) {

                foreach ($existingPagare as $pagare) {

                    $existePersona = DB::select("SELECT ID, Cedula, Score FROM persona WHERE Cedula = ?", [$cedula]);
                    if (!empty($existePersona)) {
                        if ($pagare->ExisteDatacredito == 1 && !empty($existePersona)) {
                            //PARA QUE LAS FECHAS SE CONVIERTAN EN TEXTO
                            $codigoAnio = substr($pcuota, 0, 1);
                            $anio = substr($pcuota, 1, 2);
                            $mes = substr($pcuota, 3, 2);
                            $dia = substr($pcuota, 5, 2);

                            $codigoAnio2 = substr($ucuota, 0, 1);
                            $anio2 = substr($ucuota, 1, 2);
                            $mes2 = substr($ucuota, 3, 2);
                            $dia2 = substr($ucuota, 5, 2);

                            $anioReal = 2000 + (int) $anio;

                            $anioReal2 = 2000 + (int) $anio2;
                            $meses = [
                                '01' => 'Enero',
                                '02' => 'Febrero',
                                '03' => 'Marzo',
                                '04' => 'Abril',
                                '05' => 'Mayo',
                                '06' => 'Junio',
                                '07' => 'Julio',
                                '08' => 'Agosto',
                                '09' => 'Septiembre',
                                '10' => 'Octubre',
                                '11' => 'Noviembre',
                                '12' => 'Diciembre'
                            ];
                            $nombreMes = $meses[$mes];
                            $nombreMes2 = $meses[$mes2];
                            //FECHAS CON FORMATO TEXTO
                            $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                            $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                            $attempts = 0;
                            $maxAttempts = 3; // INTENTOS MÁXIMOS
                            $retryDelay = 500; // Milisegundos

                            $estadoEdad = null;
                            $deudatotalAPI = null;
                            $url = env('URL_SERVER_API');
                            do {
                                try {
                                    $response = Http::get($url . 'fechan/' . $cuenta);
                                    $data = $response->json();

                                    $response2 = Http::get($url . 'deudatotal/' . $cuenta);
                                    $data2 = $response2->json();

                                    $response3 = Http::get($url . 'deudaespecial/' . $cuenta);
                                    $data3 = $response3->json();


                                    $estadoEdad = $data['status'];
                                    $deudatotalAPI = $data2['deudatotal'];

                                    // Si llegamos aquí, la solicitud fue exitosa, podemos salir del bucle.
                                    break;
                                } catch (\Exception $e) {
                                    $attempts++;
                                    usleep($retryDelay * 1000);
                                }
                            } while ($attempts < $maxAttempts);
                            if ($data3['creditoespecial']['ESPECIAL'] === null) {
                                $especialapi = 0;
                            } else {
                                $especialapi = $data3['creditoespecial']['ESPECIAL'];
                            }
                            $especial = $especialapi + $capital;

                            //ES EL TOTAL DE LO DE ARRIBA MAS EL CAPITAL QUE APENAS SE SOLICITA
                            $deudatotal = $deudatotalAPI + $registro['CAPITAL'];
                            if ($estadoEdad == 200 && $deudatotal >= 20000000) {
                                $edad = 1;
                                $deuda = 1;
                            } else if ($estadoEdad == 200 && $deudatotal >= 50000000) {
                                $edad = 1;
                                $deuda = 2;
                            } else if ($estadoEdad == 200) {
                                $edad = 1;
                                $deuda = null;
                            } else if ($deudatotal >= 20000000) {
                                $edad = null;
                                $deuda = 1;
                            } else if ($deudatotal >= 50000000) {
                                $edad = null;
                                $deuda = 2;
                            } else {
                                $edad = null;
                                $deuda = null;
                            }

                            // dd($especial > 7000000, $cuenta, $capital, $especial.'>7000000');
                            //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
                            $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                            //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                            if (!empty($existeNominaDepen)) {

                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                                if (($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000)) {
                                    //dd(($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000));
                                    //VALIDO SI EXISTE EN LA BD DE DATACREDITO
                                    $existingPerson = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$registro['CEDULA']]);

                                        $persona = $existingPerson[0];

                                        //VALIDO SI EL SCORE ES MAYOR O IGUAL DE 650
                                        if ($persona->Score >= 650) {

                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {

                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else de las condiciones
                                                }

                                                //FIN DE MES entre mes
                                            }
                                            //else if si score es < 650
                                        }else if ($persona->Score < 650) {
                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 1;
                                                    //aquii
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                //else de las condiciones
                                                }
                                            //FIN DE MES entre mes
                                            }
                                    //cierre de llave si el score es < 650
                                    }
                                }
                            }
                        }





                        if ($pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != null && $pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != "NULL" && $pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != "null") {
                            //PARA QUE LAS FECHAS SE CONVIERTAN EN TEXTO
                            $codigoAnio = substr($pcuota, 0, 1);
                            $anio = substr($pcuota, 1, 2);
                            $mes = substr($pcuota, 3, 2);
                            $dia = substr($pcuota, 5, 2);

                            $codigoAnio2 = substr($ucuota, 0, 1);
                            $anio2 = substr($ucuota, 1, 2);
                            $mes2 = substr($ucuota, 3, 2);
                            $dia2 = substr($ucuota, 5, 2);

                            $anioReal = 2000 + (int) $anio;

                            $anioReal2 = 2000 + (int) $anio2;
                            $meses = [
                                '01' => 'Enero',
                                '02' => 'Febrero',
                                '03' => 'Marzo',
                                '04' => 'Abril',
                                '05' => 'Mayo',
                                '06' => 'Junio',
                                '07' => 'Julio',
                                '08' => 'Agosto',
                                '09' => 'Septiembre',
                                '10' => 'Octubre',
                                '11' => 'Noviembre',
                                '12' => 'Diciembre'
                            ];
                            $nombreMes = $meses[$mes];
                            $nombreMes2 = $meses[$mes2];
                            //FECHAS CON FORMATO TEXTO
                            $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                            $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                            $attempts = 0;
                            $maxAttempts = 3; // INTENTOS MÁXIMOS
                            $retryDelay = 500; // Milisegundos

                            $estadoEdad = null;
                            $deudatotalAPI = null;
                            $url = env('URL_SERVER_API');
                            do {
                                try {
                                    $response = Http::get($url . 'fechan/' . $cuenta);
                                    $data = $response->json();

                                    $response2 = Http::get($url . 'deudatotal/' . $cuenta);
                                    $data2 = $response2->json();

                                    $response3 = Http::get($url . 'deudaespecial/' . $cuenta);
                                    $data3 = $response3->json();


                                    $estadoEdad = $data['status'];
                                    $deudatotalAPI = $data2['deudatotal'];

                                    // Si llegamos aquí, la solicitud fue exitosa, podemos salir del bucle.
                                    break;
                                } catch (\Exception $e) {
                                    $attempts++;
                                    usleep($retryDelay * 1000);
                                }
                            } while ($attempts < $maxAttempts);
                            if ($data3['creditoespecial']['ESPECIAL'] === null) {
                                $especialapi = 0;
                            } else {
                                $especialapi = $data3['creditoespecial']['ESPECIAL'];
                            }
                            $especial = $especialapi + $capital;

                            //ES EL TOTAL DE LO DE ARRIBA MAS EL CAPITAL QUE APENAS SE SOLICITA
                            $deudatotal = $deudatotalAPI + $registro['CAPITAL'];
                            if ($estadoEdad == 200 && $deudatotal >= 20000000) {
                                $edad = 1;
                                $deuda = 1;
                            } else if ($estadoEdad == 200 && $deudatotal >= 50000000) {
                                $edad = 1;
                                $deuda = 2;
                            } else if ($estadoEdad == 200) {
                                $edad = 1;
                                $deuda = null;
                            } else if ($deudatotal >= 20000000) {
                                $edad = null;
                                $deuda = 1;
                            } else if ($deudatotal >= 50000000) {
                                $edad = null;
                                $deuda = 2;
                            } else {
                                $edad = null;
                                $deuda = null;
                            }

                            // dd($especial > 7000000, $cuenta, $capital, $especial.'>7000000');
                            //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
                            $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                            //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                            if (!empty($existeNominaDepen)) {

                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                                if (($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000)) {
                                    //dd(($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000));
                                    //VALIDO SI EXISTE EN LA BD DE DATACREDITO
                                    $existingPerson = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$registro['CEDULA']]);

                                        $persona = $existingPerson[0];

                                        //VALIDO SI EL SCORE ES MAYOR O IGUAL DE 650
                                        if ($persona->Score >= 650) {

                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {

                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;

                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else de las condiciones
                                                }

                                                //FIN DE MES entre mes
                                            }
                                            //else if si score es < 650
                                        }else if ($persona->Score < 650) {
                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $existecreditoexistente = 2;
                                                    //aquii
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                //else de las condiciones
                                                }
                                            //FIN DE MES entre mes
                                            }
                                    //cierre de llave si el score es < 650
                                    }
                                }
                            }
                        }


                        // Obtener la fecha actual
                        $fechaActual = Carbon::now();

                        $fechaDatacredito = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$existePersona[0]->ID]);

                        if (!empty($fechaDatacredito)) {
                            $fechaInsercion = Carbon::parse($fechaDatacredito[0]->FechaInsercion);

                            $diferencia = $fechaActual->diffInDays($fechaInsercion);
                        } else {
                            $diferencia = 0;
                        }

                        if(!empty($fechaDatacredito)){
                            if ($pagare->ExisteDatacredito == 3 && $diferencia <= 180) {
                                //PARA QUE LAS FECHAS SE CONVIERTAN EN TEXTO
                                $codigoAnio = substr($pcuota, 0, 1);
                                $anio = substr($pcuota, 1, 2);
                                $mes = substr($pcuota, 3, 2);
                                $dia = substr($pcuota, 5, 2);

                                $codigoAnio2 = substr($ucuota, 0, 1);
                                $anio2 = substr($ucuota, 1, 2);
                                $mes2 = substr($ucuota, 3, 2);
                                $dia2 = substr($ucuota, 5, 2);

                                $anioReal = 2000 + (int) $anio;

                                $anioReal2 = 2000 + (int) $anio2;
                                $meses = [
                                    '01' => 'Enero',
                                    '02' => 'Febrero',
                                    '03' => 'Marzo',
                                    '04' => 'Abril',
                                    '05' => 'Mayo',
                                    '06' => 'Junio',
                                    '07' => 'Julio',
                                    '08' => 'Agosto',
                                    '09' => 'Septiembre',
                                    '10' => 'Octubre',
                                    '11' => 'Noviembre',
                                    '12' => 'Diciembre'
                                ];
                                $nombreMes = $meses[$mes];
                                $nombreMes2 = $meses[$mes2];
                                //FECHAS CON FORMATO TEXTO
                                $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                                $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                                $attempts = 0;
                                $maxAttempts = 3; // INTENTOS MÁXIMOS
                                $retryDelay = 500; // Milisegundos

                                $estadoEdad = null;
                                $deudatotalAPI = null;
                                $url = env('URL_SERVER_API');
                                do {
                                    try {
                                        $response = Http::get($url . 'fechan/' . $cuenta);
                                        $data = $response->json();

                                        $response2 = Http::get($url . 'deudatotal/' . $cuenta);
                                        $data2 = $response2->json();

                                        $response3 = Http::get($url . 'deudaespecial/' . $cuenta);
                                        $data3 = $response3->json();


                                        $estadoEdad = $data['status'];
                                        $deudatotalAPI = $data2['deudatotal'];

                                        // Si llegamos aquí, la solicitud fue exitosa, podemos salir del bucle.
                                        break;
                                    } catch (\Exception $e) {
                                        $attempts++;
                                        usleep($retryDelay * 1000);
                                    }
                                } while ($attempts < $maxAttempts);
                                if ($data3['creditoespecial']['ESPECIAL'] === null) {
                                    $especialapi = 0;
                                } else {
                                    $especialapi = $data3['creditoespecial']['ESPECIAL'];
                                }
                                $especial = $especialapi + $capital;

                                //ES EL TOTAL DE LO DE ARRIBA MAS EL CAPITAL QUE APENAS SE SOLICITA
                                $deudatotal = $deudatotalAPI + $registro['CAPITAL'];
                                if ($estadoEdad == 200 && $deudatotal >= 20000000) {
                                    $edad = 1;
                                    $deuda = 1;
                                } else if ($estadoEdad == 200 && $deudatotal >= 50000000) {
                                    $edad = 1;
                                    $deuda = 2;
                                } else if ($estadoEdad == 200) {
                                    $edad = 1;
                                    $deuda = null;
                                } else if ($deudatotal >= 20000000) {
                                    $edad = null;
                                    $deuda = 1;
                                } else if ($deudatotal >= 50000000) {
                                    $edad = null;
                                    $deuda = 2;
                                } else {
                                    $edad = null;
                                    $deuda = null;
                                }

                                // dd($especial > 7000000, $cuenta, $capital, $especial.'>7000000');
                                //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
                                $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                                //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                                if (!empty($existeNominaDepen)) {

                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                                    if (($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000)) {
                                        //dd(($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000));
                                        //VALIDO SI EXISTE EN LA BD DE DATACREDITO
                                        $existingPerson = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$registro['CEDULA']]);

                                            $persona = $existingPerson[0];

                                            // Obtener la fecha actual
                                            $fechaActual = Carbon::now();

                                            // Suponiendo que $fechaDatacredito es el resultado de tu consulta a la base de datos
                                            $fechaDatacredito = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$persona->ID]);
                                            // Obtener la fecha de la primera fila devuelta por la consulta
                                            $fechaInsercion = Carbon::parse($fechaDatacredito[0]->FechaInsercion);

                                            // Calcular la diferencia en días
                                            $diferencia = $fechaActual->diffInDays($fechaInsercion);

                                            //VALIDO SI EL SCORE ES MAYOR O IGUAL DE 650
                                            if ($persona->Score >= 650) {

                                                //FECHA MES ACTUAL
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {

                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                    //DIA DE REPORTE DE LA NOMINA
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);

                                                    //se asigna la fecha de reporte de manera automatica
                                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                    //fecha primera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                    //interes proporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                    // Calcular el último día del mes siguiente a la fecha del crédito
                                                    $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                    // Calcular el último día del mes de la primera cuota
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                    // Comparar si son iguales
                                                    //resultado
                                                    $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                    // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                    // Implementar la lógica de la fórmula de Excel
                                                    $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                    // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                    $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                    // Comprobar si todas las condiciones relevantes son verdaderas
                                                    $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                    // Primera condición externa
                                                    if ($fechadelCredito->gt($fechaReporte)) {
                                                        $resultado2 = false;
                                                    } else {
                                                        // Condición interna
                                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                        $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                        $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                        if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                            $resultado2 = true;
                                                        } else {
                                                            $resultado2 = false;
                                                        }
                                                    }


                                                    // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                    $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                    // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                    $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                    // Resultado basado en las condiciones
                                                    $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                    // Calcular el último día del mes de B14
                                                    $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                    // Calcular el último día del mes anterior a E15
                                                    $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                    // Verificar las condiciones
                                                    $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                    $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                    $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    // Evaluar si todas las condiciones son verdaderas
                                                    $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                    // Primer nivel de comprobación
                                                    if ($fechadelCredito->gt($fechaReporte)) {
                                                        $resultado5 = false;
                                                    } else {
                                                        // Segundo nivel de comprobación
                                                        $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                        $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                        $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                        $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                        $resultado5 = $condicionA && $condicionB ? true : false;
                                                    }
                                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                        $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '1';
                                                        $AutorizacionGerente = '0';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;

                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                        //else si las condiciones no se cumplen pero es mes actual
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    }
                                                    //cierra mes actual
                                                }

                                                //FECHA MES SIGUIENTE
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    //DIA REPORTE DE LA S400 PLANO
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                                    $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                    // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                    if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                        // Ajustar al último día del mes actual
                                                        $fechaReporteActual->endOfMonth();
                                                    }

                                                    $fechaReporte = $fechaReporteActual->copy();

                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                    //fecha primera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                    Carbon::setLocale('es');
                                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                    $formateada = $fechaReporte->format('d/m/Y');
                                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                    //interes proporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                    $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                    $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                    $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                    $NoAgencia = $registro['AGENCIA'];
                                                    if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                        $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '1';
                                                        $AutorizacionGerente = '0';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;

                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }

                                                        //else de MES ANTERIOR
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    }
                                                    //FIN DE MES ANTERIOR
                                                }

                                                //FECHA ENTREMES
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                    //DIA REPORTE
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                        $fechaReporteActual->addMonth();
                                                    }
                                                    $fechaReporte = $fechaReporteActual;

                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                    //fechaprimera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                    Carbon::setLocale('es');
                                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                    //interesproporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                    $NoAgencia = $registro['AGENCIA'];

                                                    $result = $fechadelCredito > $fechaReporte;


                                                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                            $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                    $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                    //CUARTO CONDICIONAL
                                                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                    //QUINTO
                                                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                    //SEXTO
                                                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                    if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                        $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '1';
                                                        $AutorizacionGerente = '0';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;

                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                        //else de las condiciones
                                                    }

                                                    //FIN DE MES entre mes
                                                }
                                                //else if si score es < 650
                                            }else if ($persona->Score < 650) {
                                                //FECHA MES ACTUAL
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                    //DIA DE REPORTE DE LA NOMINA
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);

                                                    //se asigna la fecha de reporte de manera automatica
                                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                    //fecha primera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                    //interes proporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                    // Calcular el último día del mes siguiente a la fecha del crédito
                                                    $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                    // Calcular el último día del mes de la primera cuota
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                    // Comparar si son iguales
                                                    //resultado
                                                    $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                    // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                    // Implementar la lógica de la fórmula de Excel
                                                    $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                    // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                    $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                    // Comprobar si todas las condiciones relevantes son verdaderas
                                                    $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                    // Primera condición externa
                                                    if ($fechadelCredito->gt($fechaReporte)) {
                                                        $resultado2 = false;
                                                    } else {
                                                        // Condición interna
                                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                        $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                        $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                        if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                            $resultado2 = true;
                                                        } else {
                                                            $resultado2 = false;
                                                        }
                                                    }


                                                    // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                    $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                    // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                    $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                    // Resultado basado en las condiciones
                                                    $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                    // Calcular el último día del mes de B14
                                                    $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                    // Calcular el último día del mes anterior a E15
                                                    $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                    // Verificar las condiciones
                                                    $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                    $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                    $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    // Evaluar si todas las condiciones son verdaderas
                                                    $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                    // Primer nivel de comprobación
                                                    if ($fechadelCredito->gt($fechaReporte)) {
                                                        $resultado5 = false;
                                                    } else {
                                                        // Segundo nivel de comprobación
                                                        $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                        $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                        $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                        $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                        $resultado5 = $condicionA && $condicionB ? true : false;
                                                    }
                                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                        $razon = 'Rechazado por score bajo < 650.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                        //else si las condiciones no se cumplen pero es mes actual
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    }
                                                    //cierra mes actual
                                                }

                                                //FECHA MES SIGUIENTE
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    //DIA REPORTE DE LA S400 PLANO
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                                    $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                    // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                    if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                        // Ajustar al último día del mes actual
                                                        $fechaReporteActual->endOfMonth();
                                                    }

                                                    $fechaReporte = $fechaReporteActual->copy();

                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                    //fecha primera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                    Carbon::setLocale('es');
                                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                    $formateada = $fechaReporte->format('d/m/Y');
                                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                    //interes proporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                    $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                    $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                    $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                    $NoAgencia = $registro['AGENCIA'];
                                                    if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                        $razon = 'Rechazado por score bajo < 650.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }

                                                        //else de MES ANTERIOR
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    }
                                                    //FIN DE MES ANTERIOR
                                                }

                                                //FECHA ENTREMES
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                    $fechadelCredito = Carbon::now('America/Bogota');
                                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                    Carbon::setLocale('es');
                                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                    //DIA REPORTE
                                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                        $fechaReporteActual->addMonth();
                                                    }
                                                    $fechaReporte = $fechaReporteActual;

                                                    Carbon::setLocale('es');
                                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                    //fechaprimera cuota
                                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                    Carbon::setLocale('es');
                                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                    //interesproporcional
                                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                    $tasa = $registro['TASA'];
                                                    $capital = $registro['CAPITAL'];

                                                    $tasa = str_replace(',', '.', $tasa);
                                                    $tasa = floatval($tasa);

                                                    $tasa = $tasa / 100;

                                                    $capital = floatval($capital);

                                                    $interval = $fechadelCredito->diff($endOfMonth);
                                                    $c30 = $interval->days;

                                                    $cuotaMensual = $capital * $tasa;
                                                    $cuotaDiaria = $cuotaMensual / 30;
                                                    $interesProporcional = $cuotaDiaria * $c30;

                                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                    $NoAgencia = $registro['AGENCIA'];

                                                    $result = $fechadelCredito > $fechaReporte;


                                                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                            $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                    $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                    //CUARTO CONDICIONAL
                                                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                    //QUINTO
                                                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                    //SEXTO
                                                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                    if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                        $razon = 'Rechazado por score bajo < 650.';
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                    } else {
                                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                            Carbon::setLocale('es');
                                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                        }
                                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                        $existedatacredito = null;
                                                        $existecreditoexistente = 3;
                                                        $aprobado = '0';
                                                        $AutorizacionGerente = '1';
                                                        $NoAgencia = $registro['AGENCIA'];
                                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                        $id_persona = $persona->ID;
                                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                            $coordinacion = 'Coordinacion 1';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                            $coordinacion = 'Coordinacion 2';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                            $coordinacion = 'Coordinacion 3';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                            $coordinacion = 'Coordinacion 4';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                            $coordinacion = 'Coordinacion 5';
                                                            $this->pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                        }
                                                        //else de las condiciones
                                                    }
                                                    //FIN DE MES entre mes
                                                }
                                        //cierre de llave si el score es < 650
                                        }
                                    }
                                }else{
                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = '0';
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoNuevaNomina', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);

                                    $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
                                        $nomina,
                                        $nomNomina,
                                        $dependencia,
                                        $nomdependencia,
                                        $entidad
                                    ]);
                                    $foundMatchingPagare = true;
                                }

                            }
                        }
                    }

                    if ($pagare->ID_Pagare == $idpagare && $pagare->CuentaCoop == $cuenta) {

                        // Si encuentra un pagare con los mismos ID_Pagare y CuentaCoop, marca la bandera como verdadera.
                        $foundMatchingPagare = true;
                    }
                    //fin foreach
                }
            } else {

                if (!$foundMatchingPagare) {
                    //PARA QUE LAS FECHAS SE CONVIERTAN EN TEXTO
                    $codigoAnio = substr($pcuota, 0, 1);
                    $anio = substr($pcuota, 1, 2);
                    $mes = substr($pcuota, 3, 2);
                    $dia = substr($pcuota, 5, 2);

                    $codigoAnio2 = substr($ucuota, 0, 1);
                    $anio2 = substr($ucuota, 1, 2);
                    $mes2 = substr($ucuota, 3, 2);
                    $dia2 = substr($ucuota, 5, 2);

                    $anioReal = 2000 + (int) $anio;

                    $anioReal2 = 2000 + (int) $anio2;
                    $meses = [
                        '01' => 'Enero',
                        '02' => 'Febrero',
                        '03' => 'Marzo',
                        '04' => 'Abril',
                        '05' => 'Mayo',
                        '06' => 'Junio',
                        '07' => 'Julio',
                        '08' => 'Agosto',
                        '09' => 'Septiembre',
                        '10' => 'Octubre',
                        '11' => 'Noviembre',
                        '12' => 'Diciembre'
                    ];
                    $nombreMes = $meses[$mes];
                    $nombreMes2 = $meses[$mes2];
                    //FECHAS CON FORMATO TEXTO
                    $fechaFormateada = $nombreMes . " " . (int) $dia . " del " . $anioReal;

                    $fechaFormateada2 = $nombreMes2 . " " . (int) $dia2 . " del " . $anioReal2;

                    $attempts = 0;
                    $maxAttempts = 3; // INTENTOS MÁXIMOS
                    $retryDelay = 500; // Milisegundos

                    $estadoEdad = null;
                    $deudatotalAPI = null;
                    $url = env('URL_SERVER_API');
                    do {
                        try {
                            $response = Http::get($url . 'fechan/' . $cuenta);
                            $data = $response->json();

                            $response2 = Http::get($url . 'deudatotal/' . $cuenta);
                            $data2 = $response2->json();

                            $response3 = Http::get($url . 'deudaespecial/' . $cuenta);
                            $data3 = $response3->json();


                            $estadoEdad = $data['status'];
                            $deudatotalAPI = $data2['deudatotal'];

                            // Si llegamos aquí, la solicitud fue exitosa, podemos salir del bucle.
                            break;
                        } catch (\Exception $e) {
                            $attempts++;
                            usleep($retryDelay * 1000);
                        }
                    } while ($attempts < $maxAttempts);
                    if ($data3['creditoespecial']['ESPECIAL'] === null) {
                        $especialapi = 0;
                    } else {
                        $especialapi = $data3['creditoespecial']['ESPECIAL'];
                    }
                    $especial = $especialapi + $capital;

                    //ES EL TOTAL DE LO DE ARRIBA MAS EL CAPITAL QUE APENAS SE SOLICITA
                    $deudatotal = $deudatotalAPI + $registro['CAPITAL'];
                    if ($estadoEdad == 200 && $deudatotal >= 20000000) {
                        $edad = 1;
                        $deuda = 1;
                    } else if ($estadoEdad == 200 && $deudatotal >= 50000000) {
                        $edad = 1;
                        $deuda = 2;
                    } else if ($estadoEdad == 200) {
                        $edad = 1;
                        $deuda = null;
                    } else if ($deudatotal >= 20000000) {
                        $edad = null;
                        $deuda = 1;
                    } else if ($deudatotal >= 50000000) {
                        $edad = null;
                        $deuda = 2;
                    } else {
                        $edad = null;
                        $deuda = null;
                    }

                    // dd($especial > 7000000, $cuenta, $capital, $especial.'>7000000');
                    //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
                    $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                    //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                    if (!empty($existeNominaDepen)) {

                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$nomina, $dependencia, $entidad]);
                        if ((($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000) || ($registro['LINEA'] == 16 || $registro['LINEA'] == 18 || $registro['LINEA'] == 20 || $registro['LINEA'] == 32 || $registro['LINEA'] == 33 || $registro['LINEA'] == 34 || $registro['LINEA'] == 39 || $registro['LINEA'] == 40 || $registro['LINEA'] == 60 || $registro['LINEA'] == 61 || $registro['LINEA'] == 62 || $registro['LINEA'] == 63 || $registro['LINEA'] == 64 || $registro['LINEA'] == 65 || $registro['LINEA'] == 70 || $registro['LINEA'] == 76 || $registro['LINEA'] == 77 || $registro['LINEA'] == 78 || $registro['LINEA'] == 79 || $registro['LINEA'] == 80 || $registro['LINEA'] == 81 || $registro['LINEA'] == 82 || $registro['LINEA'] == 83 || $registro['LINEA'] == 84 || $registro['LINEA'] == 85 || $registro['LINEA'] == 86 || $registro['LINEA'] == 87 || $registro['LINEA'] == 88 || $registro['LINEA'] == 88 || $registro['LINEA'] == 89 || $registro['LINEA'] == 93) && ($capital > 3000000 || $especial > 7000000)) {
                            //dd(($registro['LINEA'] == 90 || $registro['LINEA'] == 94 || $registro['LINEA'] == 99) && $especial > 7000000 || ($capital > 3000000 || $especial > 7000000));
                            //VALIDO SI EXISTE EN LA BD DE DATACREDITO
                            $existingPerson = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$registro['CEDULA']]);
                            if (!empty($existingPerson)) {

                                $persona = $existingPerson[0];

                                // Obtener la fecha actual
                                $fechaActual = Carbon::now();

                                // Suponiendo que $fechaDatacredito es el resultado de tu consulta a la base de datos
                                $fechaDatacredito = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$persona->ID]);
                                // Obtener la fecha de la primera fila devuelta por la consulta
                                $fechaInsercion = Carbon::parse($fechaDatacredito[0]->FechaInsercion);

                                // Calcular la diferencia en días
                                $diferencia = $fechaActual->diffInDays($fechaInsercion);

                                if ($diferencia <= 180) {
                                    //valido que si el score es diferente a nulo, si es igual debe registrar en el else
                                    if (($persona->Score !== null) && ($persona->Score !== "NULL") && ($persona->Score !== "null")) {
                                        //VALIDO SI EL SCORE ES MAYOR O IGUAL DE 650
                                        if ($persona->Score >= 650) {

                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
                                                    $existedatacredito = null;
                                                    $aprobado = '1';
                                                    $AutorizacionGerente = '0';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else de las condiciones
                                                }

                                                //FIN DE MES entre mes
                                            }
                                            //else if si score es < 650
                                        } else if ($persona->Score < 650) {
                                            //FECHA MES ACTUAL
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA DE REPORTE DE LA NOMINA
                                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                                //se asigna la fecha de reporte de manera automatica
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                // Calcular el último día del mes siguiente a la fecha del crédito
                                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                                // Calcular el último día del mes de la primera cuota
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                                // Comparar si son iguales
                                                //resultado
                                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                                // Implementar la lógica de la fórmula de Excel
                                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                                // Comprobar si todas las condiciones relevantes son verdaderas
                                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                                // Primera condición externa
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado2 = false;
                                                } else {
                                                    // Condición interna
                                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                        $resultado2 = true;
                                                    } else {
                                                        $resultado2 = false;
                                                    }
                                                }


                                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                                // Resultado basado en las condiciones
                                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                                // Calcular el último día del mes de B14
                                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                                // Calcular el último día del mes anterior a E15
                                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                                // Verificar las condiciones
                                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                // Evaluar si todas las condiciones son verdaderas
                                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                                // Primer nivel de comprobación
                                                if ($fechadelCredito->gt($fechaReporte)) {
                                                    $resultado5 = false;
                                                } else {
                                                    // Segundo nivel de comprobación
                                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                                }
                                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else si las condiciones no se cumplen pero es mes actual
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //cierra mes actual
                                            }

                                            //FECHA MES SIGUIENTE
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                                $NoAgencia = $registro['AGENCIA'];
                                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }

                                                    //else de MES ANTERIOR
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                }
                                                //FIN DE MES ANTERIOR
                                            }

                                            //FECHA ENTREMES
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                                //DIA REPORTE
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                    $fechaReporteActual->addMonth();
                                                }
                                                $fechaReporte = $fechaReporteActual;

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fechaprimera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                                //interesproporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                                $NoAgencia = $registro['AGENCIA'];

                                                $result = $fechadelCredito > $fechaReporte;


                                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                                //CUARTO CONDICIONAL
                                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                                //QUINTO
                                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                                //SEXTO
                                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                    $razon = 'Rechazado por score bajo < 650.';
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                } else {
                                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                        Carbon::setLocale('es');
                                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                    }
                                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                                    $existedatacredito = null;
                                                    $aprobado = '0';
                                                    $AutorizacionGerente = '1';
                                                    $NoAgencia = $registro['AGENCIA'];
                                                    $id_persona = $persona->ID;
                                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                        $coordinacion = 'Coordinacion 1';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                        $coordinacion = 'Coordinacion 2';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                        $coordinacion = 'Coordinacion 3';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                        $coordinacion = 'Coordinacion 4';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                        $coordinacion = 'Coordinacion 5';
                                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                    }
                                                    //else de las condiciones
                                                }
                                                //FIN DE MES entre mes
                                            }
                                            //cierre de llave si el score es < 650
                                        }

                                        //else si el score es nulo
                                    } else {
                                        //FECHA MES ACTUAL
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                            //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                            $fechadelCredito = Carbon::now('America/Bogota');
                                            $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                            Carbon::setLocale('es');
                                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                            //DIA DE REPORTE DE LA NOMINA
                                            $diaReporte = max(1, $existeDia[0]->DIAS);

                                            //se asigna la fecha de reporte de manera automatica
                                            $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                            $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                            Carbon::setLocale('es');
                                            $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                            //fecha primera cuota
                                            $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                            //interes proporcional
                                            $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                            $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                            $tasa = $registro['TASA'];
                                            $capital = $registro['CAPITAL'];

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($capital);

                                            $interval = $fechadelCredito->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                            // Calcular el último día del mes siguiente a la fecha del crédito
                                            $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                            // Calcular el último día del mes de la primera cuota
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                            // Comparar si son iguales
                                            //resultado
                                            $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                            // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                            $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                            // Implementar la lógica de la fórmula de Excel
                                            $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                            // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                            $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                            // Comprobar si todas las condiciones relevantes son verdaderas
                                            $resultado1 = $condicion1 && $condicion3 ? true : false;

                                            // Primera condición externa
                                            if ($fechadelCredito->gt($fechaReporte)) {
                                                $resultado2 = false;
                                            } else {
                                                // Condición interna
                                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                                $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                                $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                                if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                    $resultado2 = true;
                                                } else {
                                                    $resultado2 = false;
                                                }
                                            }


                                            // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                            $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                            // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                            $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                            // Resultado basado en las condiciones
                                            $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                            // Calcular el último día del mes de B14
                                            $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                            // Calcular el último día del mes anterior a E15
                                            $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                            // Verificar las condiciones
                                            $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                            $condicion6 = $fechaReporte->gte($fechadelCredito);
                                            $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                            // Evaluar si todas las condiciones son verdaderas
                                            $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                            // Primer nivel de comprobación
                                            if ($fechadelCredito->gt($fechaReporte)) {
                                                $resultado5 = false;
                                            } else {
                                                // Segundo nivel de comprobación
                                                $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                                $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                                $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                                $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                                $resultado5 = $condicionA && $condicionB ? true : false;
                                            }
                                            if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                $razon = 'Aprobado por cumplir fechas pero faltaria el score(nulo).';
                                                $existedatacredito = '2';
                                                $aprobado = '1';
                                                $AutorizacionGerente = '0';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }
                                                //else si las condiciones no se cumplen pero es mes actual
                                            } else {
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                    Carbon::setLocale('es');
                                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                }
                                                $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". Falta Score porque esta nulo.";
                                                $existedatacredito = '2';
                                                $aprobado = '0';
                                                $AutorizacionGerente = '1';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }
                                            }
                                            //cierra mes actual
                                        }

                                        //FECHA MES SIGUIENTE
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                            $NoAgencia = $registro['AGENCIA'];
                                            if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                                $razon = 'Aprobado por cumplir fechas pero faltaria el score(nulo).';
                                                $existedatacredito = '2';
                                                $aprobado = '1';
                                                $AutorizacionGerente = '0';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }

                                                //else de MES ANTERIOR
                                            } else {
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                    Carbon::setLocale('es');
                                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                }
                                                $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". Falta Score porque esta nulo.";
                                                $existedatacredito = '2';
                                                $aprobado = '0';
                                                $AutorizacionGerente = '1';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }
                                            }
                                            //FIN DE MES ANTERIOR
                                        }

                                        //FECHA ENTREMES
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                            $fechadelCredito = Carbon::now('America/Bogota');
                                            $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                            Carbon::setLocale('es');
                                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                            //DIA REPORTE
                                            $diaReporte = max(1, $existeDia[0]->DIAS);
                                            $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                            if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                                $fechaReporteActual->addMonth();
                                            }
                                            $fechaReporte = $fechaReporteActual;

                                            Carbon::setLocale('es');
                                            $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                            //fechaprimera cuota
                                            $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                            Carbon::setLocale('es');
                                            $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                            $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                            //interesproporcional
                                            $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                            $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                            $tasa = $registro['TASA'];
                                            $capital = $registro['CAPITAL'];

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($capital);

                                            $interval = $fechadelCredito->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                            $NoAgencia = $registro['AGENCIA'];

                                            $result = $fechadelCredito > $fechaReporte;


                                            $result1 = $fechaReporte->lt($fechadelCredito) &&
                                                ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                    $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                            $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                            //CUARTO CONDICIONAL
                                            $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                            //QUINTO
                                            $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                            //SEXTO
                                            $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                            if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                                $razon = 'Aprobado por cumplir fechas pero faltaria el score(nulo).';
                                                $existedatacredito = '2';
                                                $aprobado = '1';
                                                $AutorizacionGerente = '0';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }
                                            } else {
                                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                    Carbon::setLocale('es');
                                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                                }
                                                $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". Falta Score porque esta nulo.";
                                                $existedatacredito = '2';
                                                $aprobado = '0';
                                                $AutorizacionGerente = '1';
                                                $NoAgencia = $registro['AGENCIA'];
                                                $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                                $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                                $id_persona = $persona->ID;
                                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                    $coordinacion = 'Coordinacion 1';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                    $coordinacion = 'Coordinacion 2';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                    $coordinacion = 'Coordinacion 3';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                    $coordinacion = 'Coordinacion 4';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                    $coordinacion = 'Coordinacion 5';
                                                    $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                                }
                                                //else de las condiciones
                                            }

                                            //FIN DE MES entre mes
                                        }
                                    }
                                //else si esta vencido el datacredito
                                }else{
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                        //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                        //DIA DE REPORTE DE LA NOMINA
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        //se asigna la fecha de reporte de manera automatica
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                        //fecha primera cuota
                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                        //interes proporcional
                                        $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                        $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                        $tasa = $registro['TASA'];
                                        $capital = $registro['CAPITAL'];

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($capital);

                                        $interval = $fechadelCredito->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        // Calcular el último día del mes siguiente a la fecha del crédito
                                        $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                        // Calcular el último día del mes de la primera cuota
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                        // Comparar si son iguales
                                        //resultado
                                        $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                        // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                        // Implementar la lógica de la fórmula de Excel
                                        $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                        // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                        $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                        // Comprobar si todas las condiciones relevantes son verdaderas
                                        $resultado1 = $condicion1 && $condicion3 ? true : false;

                                        // Primera condición externa
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado2 = false;
                                        } else {
                                            // Condición interna
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                            $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                            $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                            if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                $resultado2 = true;
                                            } else {
                                                $resultado2 = false;
                                            }
                                        }


                                        // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                        $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                        // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                        $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                        // Resultado basado en las condiciones
                                        $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                        // Calcular el último día del mes de B14
                                        $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                        // Calcular el último día del mes anterior a E15
                                        $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                        // Verificar las condiciones
                                        $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                        $condicion6 = $fechaReporte->gte($fechadelCredito);
                                        $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                        // Evaluar si todas las condiciones son verdaderas
                                        $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                        // Primer nivel de comprobación
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado5 = false;
                                        } else {
                                            // Segundo nivel de comprobación
                                            $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                            $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                            $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                            $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                            $resultado5 = $condicionA && $condicionB ? true : false;
                                        }
                                        if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                            $razon = 'Aprobado por cumplir fechas pero el datacredito esta vencido.';
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }
                                            //else si las condiciones no se cumplen pero es mes actual
                                        } else {
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                                Carbon::setLocale('es');
                                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                            }
                                            $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". Pero esta vencido el datacredito.";
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }
                                        }
                                        //cierra mes actual
                                    }

                                    //FECHA MES SIGUIENTE
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                                $fechadelCredito = Carbon::now('America/Bogota');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                Carbon::setLocale('es');
                                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                                //DIA REPORTE DE LA S400 PLANO
                                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                                $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                                // Verificar si el día seleccionado es mayor que el último día del mes actual
                                                if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                                    // Ajustar al último día del mes actual
                                                    $fechaReporteActual->endOfMonth();
                                                }

                                                $fechaReporte = $fechaReporteActual->copy();

                                                Carbon::setLocale('es');
                                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                                //fecha primera cuota
                                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                                Carbon::setLocale('es');
                                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                                $formateada = $fechaReporte->format('d/m/Y');
                                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                                //interes proporcional
                                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                                $tasa = $registro['TASA'];
                                                $capital = $registro['CAPITAL'];

                                                $tasa = str_replace(',', '.', $tasa);
                                                $tasa = floatval($tasa);

                                                $tasa = $tasa / 100;

                                                $capital = floatval($capital);

                                                $interval = $fechadelCredito->diff($endOfMonth);
                                                $c30 = $interval->days;

                                                $cuotaMensual = $capital * $tasa;
                                                $cuotaDiaria = $cuotaMensual / 30;
                                                $interesProporcional = $cuotaDiaria * $c30;

                                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                                $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                                $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                        $NoAgencia = $registro['AGENCIA'];
                                        if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                            $razon = 'Aprobado por cumplir fechas pero el datacredito esta vencido.';
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }

                                            //else de MES ANTERIOR
                                        } else {
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                Carbon::setLocale('es');
                                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                            }
                                            $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". El datacredito esta vencido.";
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }
                                        }
                                        //FIN DE MES ANTERIOR
                                    }

                                    //FECHA ENTREMES
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                        //DIA REPORTE
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }
                                        $fechaReporte = $fechaReporteActual;

                                        Carbon::setLocale('es');
                                        $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                        //fechaprimera cuota
                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        //interesproporcional
                                        $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                        $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                        $tasa = $registro['TASA'];
                                        $capital = $registro['CAPITAL'];

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($capital);

                                        $interval = $fechadelCredito->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $registro['AGENCIA'];

                                        $result = $fechadelCredito > $fechaReporte;


                                        $result1 = $fechaReporte->lt($fechadelCredito) &&
                                            ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                        $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                        //CUARTO CONDICIONAL
                                        $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                        //QUINTO
                                        $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                        //SEXTO
                                        $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                        if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                            $razon = 'Aprobado por cumplir fechas pero el datacredito esta vencido.';
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }
                                        } else {
                                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                                Carbon::setLocale('es');
                                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                            }
                                            $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". El datacredito esta vencido.";
                                            $existedatacredito = '3';
                                            $aprobado = '0';
                                            $AutorizacionGerente = '1';
                                            $NoAgencia = $registro['AGENCIA'];
                                            $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                            $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                            $id_persona = '7323';
                                            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                                $coordinacion = 'Coordinacion 1';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                                $coordinacion = 'Coordinacion 2';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                                $coordinacion = 'Coordinacion 3';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                                $coordinacion = 'Coordinacion 4';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                                $coordinacion = 'Coordinacion 5';
                                                $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                            }
                                            //else de las condiciones
                                        }

                                        //FIN DE MES entre mes
                                    }





                                }
                            //else si no existe en la bd de datacredito
                            } else {
                            //FECHA MES ACTUAL
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                $fechadelCredito = Carbon::now('America/Bogota');
                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                //DIA DE REPORTE DE LA NOMINA
                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                //se asigna la fecha de reporte de manera automatica
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                Carbon::setLocale('es');
                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                //fecha primera cuota
                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                //interes proporcional
                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                $tasa = $registro['TASA'];
                                $capital = $registro['CAPITAL'];

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($capital);

                                $interval = $fechadelCredito->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                // Calcular el último día del mes siguiente a la fecha del crédito
                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                // Calcular el último día del mes de la primera cuota
                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                // Comparar si son iguales
                                //resultado
                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                // Implementar la lógica de la fórmula de Excel
                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                // Comprobar si todas las condiciones relevantes son verdaderas
                                $resultado1 = $condicion1 && $condicion3 ? true : false;

                                // Primera condición externa
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado2 = false;
                                } else {
                                    // Condición interna
                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                        $resultado2 = true;
                                    } else {
                                        $resultado2 = false;
                                    }
                                }


                                // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                // Resultado basado en las condiciones
                                $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                // Calcular el último día del mes de B14
                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                // Calcular el último día del mes anterior a E15
                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                // Verificar las condiciones
                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                // Evaluar si todas las condiciones son verdaderas
                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                // Primer nivel de comprobación
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado5 = false;
                                } else {
                                    // Segundo nivel de comprobación
                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                    $resultado5 = $condicionA && $condicionB ? true : false;
                                }
                                if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                    $razon = 'Aprobado por cumplir fechas pero NO existe en datacredito.';
                                    $existedatacredito = '1';
                                    $aprobado = '1';
                                    $AutorizacionGerente = '0';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }
                                    //else si las condiciones no se cumplen pero es mes actual
                                } else {
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    }
                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". NO existe en datacredito.";
                                    $existedatacredito = '1';
                                    $aprobado = '0';
                                    $AutorizacionGerente = '1';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }
                                }
                                //cierra mes actual
                            }

                            //FECHA MES SIGUIENTE
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    //DIA REPORTE DE LA S400 PLANO
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                    // Verificar si el día seleccionado es mayor que el último día del mes actual
                                    if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                        // Ajustar al último día del mes actual
                                        $fechaReporteActual->endOfMonth();
                                    }

                                    $fechaReporte = $fechaReporteActual->copy();

                                    Carbon::setLocale('es');
                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                    //fecha primera cuota
                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                    $formateada = $fechaReporte->format('d/m/Y');
                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                    //interes proporcional
                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                    $tasa = $registro['TASA'];
                                    $capital = $registro['CAPITAL'];

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($capital);

                                    $interval = $fechadelCredito->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                    $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                    $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                $NoAgencia = $registro['AGENCIA'];
                                if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                    $razon = 'Aprobado por cumplir fechas pero NO existe en datacredito.';
                                    $existedatacredito = '1';
                                    $aprobado = '1';
                                    $AutorizacionGerente = '0';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }

                                    //else de MES ANTERIOR
                                } else {
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    }
                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". NO existe en datacredito.";
                                    $existedatacredito = '1';
                                    $aprobado = '0';
                                    $AutorizacionGerente = '1';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }
                                }
                                //FIN DE MES ANTERIOR
                            }

                            //FECHA ENTREMES
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                $fechadelCredito = Carbon::now('America/Bogota');
                                $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                //DIA REPORTE
                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                    $fechaReporteActual->addMonth();
                                }
                                $fechaReporte = $fechaReporteActual;

                                Carbon::setLocale('es');
                                $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                //fechaprimera cuota
                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                Carbon::setLocale('es');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                //interesproporcional
                                $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                $tasa = $registro['TASA'];
                                $capital = $registro['CAPITAL'];

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($capital);

                                $interval = $fechadelCredito->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                $NoAgencia = $registro['AGENCIA'];

                                $result = $fechadelCredito > $fechaReporte;


                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                //CUARTO CONDICIONAL
                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                //QUINTO
                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                //SEXTO
                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                    $razon = 'Aprobado por cumplir fechas pero NO existe en datacredito.';
                                    $existedatacredito = '1';
                                    $aprobado = '1';
                                    $AutorizacionGerente = '0';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }
                                } else {
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    }
                                    $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ". NO existe en datacredito.";
                                    $existedatacredito = '1';
                                    $aprobado = '0';
                                    $AutorizacionGerente = '1';
                                    $NoAgencia = $registro['AGENCIA'];
                                    $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                    $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                    $id_persona = '7323';
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $coordinacion = 'Coordinacion 1';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $coordinacion = 'Coordinacion 2';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $coordinacion = 'Coordinacion 3';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $coordinacion = 'Coordinacion 4';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $coordinacion = 'Coordinacion 5';
                                        $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                    }
                                    //else de las condiciones
                                }

                                //FIN DE MES entre mes
                            }



                            }

                            //cierre de si necesita consulta Se verifica si la línea es 90, 94 o 99 y si $especial es mayor que 7000000.Si la primera condición no se cumple, se verifica si $capital es mayor que 3000000 o si $especial es mayor que 7000000.
                        } else {

                                //FECHA MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    //FECHA DEL SISTEMA  PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                    //DIA DE REPORTE DE LA NOMINA
                                    $diaReporte = max(1, $existeDia[0]->DIAS);

                                    //se asigna la fecha de reporte de manera automatica
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                    Carbon::setLocale('es');
                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


                                    //fecha primera cuota
                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


                                    //interes proporcional
                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                    $tasa = $registro['TASA'];
                                    $capital = $registro['CAPITAL'];

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($capital);

                                    $interval = $fechadelCredito->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    // Calcular el último día del mes siguiente a la fecha del crédito
                                    $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                    // Calcular el último día del mes de la primera cuota
                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                    // Comparar si son iguales
                                    //resultado
                                    $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

                                    // Ajustar $fechaReporte basado en si la fecha del crédito es mayor que $fechaReporteActual
                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                    // Implementar la lógica de la fórmula de Excel
                                    $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                    // La condición 2 es redundante y siempre verdadera, por lo que la omitimos
                                    $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

                                    // Comprobar si todas las condiciones relevantes son verdaderas
                                    $resultado1 = $condicion1 && $condicion3 ? true : false;

                                    // Primera condición externa
                                    if ($fechadelCredito->gt($fechaReporte)) {
                                        $resultado2 = false;
                                    } else {
                                        // Condición interna
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                        $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                        $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                        if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                            $resultado2 = true;
                                        } else {
                                            $resultado2 = false;
                                        }
                                    }


                                    // Condición 1: Comprobar si el último día del mes de la fecha en C14 es igual al último día del mes siguiente a E15
                                    $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                    // Condición 2: La diferencia en días entre E15 y B14 es de 31 días o menos
                                    $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

                                    // Resultado basado en las condiciones
                                    $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                    // Calcular el último día del mes de B14
                                    $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                    // Calcular el último día del mes anterior a E15
                                    $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                    // Verificar las condiciones
                                    $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                    $condicion6 = $fechaReporte->gte($fechadelCredito);
                                    $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                    // Evaluar si todas las condiciones son verdaderas
                                    $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                    // Primer nivel de comprobación
                                    if ($fechadelCredito->gt($fechaReporte)) {
                                        $resultado5 = false;
                                    } else {
                                        // Segundo nivel de comprobación
                                        $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Último día del mes para C14
                                        $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Último día del mes siguiente a B14

                                        $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                        $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

                                        $resultado5 = $condicionA && $condicionB ? true : false;
                                    }
                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                        $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta porque el capital es <3m y especial <7m.';
                                        $existedatacredito = null;
                                        $aprobado = '1';
                                        $AutorizacionGerente = '0';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }
                                        //else si las condiciones no se cumplen pero es mes actual
                                    } else {
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                        $existedatacredito = null;
                                        $aprobado = '0';
                                        $AutorizacionGerente = '1';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }
                                    }
                                    //cierra mes actual
                                }

                                //FECHA MES SIGUIENTE
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    //DIA REPORTE DE LA S400 PLANO
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = $fechadelCredito->copy()->addMonthsNoOverflow(1)->startOfMonth()->day($diaReporte);

                                    // Verificar si el día seleccionado es mayor que el último día del mes actual
                                    if ($diaReporte > $fechaReporteActual->daysInMonth) {
                                        // Ajustar al último día del mes actual
                                        $fechaReporteActual->endOfMonth();
                                    }

                                    $fechaReporte = $fechaReporteActual->copy();

                                    Carbon::setLocale('es');
                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                    //fecha primera cuota
                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
                                    $formateada = $fechaReporte->format('d/m/Y');
                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

                                    //interes proporcional
                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                    $tasa = $registro['TASA'];
                                    $capital = $registro['CAPITAL'];

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($capital);

                                    $interval = $fechadelCredito->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $resultado1 = $fecha1eraCuota->month == $fechadelCredito->addMonthsNoOverflow(2)->month;

                                    $resultado2 = $fechadelCredito->addMonthsNoOverflow(3)->month || $fechadelCredito->addMonthsNoOverflow(2)->month;

                                    $resultado3 = $fechaReporte->diffInDays($fecha1eraCuota) <= 30;

                                    $NoAgencia = $registro['AGENCIA'];
                                    if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
                                        $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta porque el capital es <3m y especial <7m.';
                                        $existedatacredito = null;
                                        $aprobado = '1';
                                        $AutorizacionGerente = '0';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }

                                        //else de MES ANTERIOR
                                    } else {
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                        $existedatacredito = null;
                                        $aprobado = '0';
                                        $AutorizacionGerente = '1';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }
                                    }
                                    //FIN DE MES ANTERIOR
                                }

                                //FECHA ENTREMES
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                    //DIA REPORTE
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                        $fechaReporteActual->addMonth();
                                    }
                                    $fechaReporte = $fechaReporteActual;

                                    Carbon::setLocale('es');
                                    $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

                                    //fechaprimera cuota
                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                    //interesproporcional
                                    $endOfMonth = $fechadelCredito->copy()->endOfMonth();
                                    $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
                                    $tasa = $registro['TASA'];
                                    $capital = $registro['CAPITAL'];

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($capital);

                                    $interval = $fechadelCredito->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                    $NoAgencia = $registro['AGENCIA'];

                                    $result = $fechadelCredito > $fechaReporte;


                                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                    $result2 = $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                    //CUARTO CONDICIONAL
                                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                    //QUINTO
                                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                    //SEXTO
                                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                    if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
                                        $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta porque el capital es <3m y especial <7m.';
                                        $existedatacredito = null;
                                        $aprobado = '1';
                                        $AutorizacionGerente = '0';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }
                                    } else {
                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $razon = "Como la fecha de crédito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada . ".";
                                        $existedatacredito = null;
                                        $aprobado = '0';
                                        $AutorizacionGerente = '1';
                                        $NoAgencia = $registro['AGENCIA'];
                                        $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
                                        $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
                                        $id_persona = '7323';
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $coordinacion = 'Coordinacion 1';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $coordinacion = 'Coordinacion 2';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $coordinacion = 'Coordinacion 3';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $coordinacion = 'Coordinacion 4';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        } else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $coordinacion = 'Coordinacion 5';
                                            $this->S400pagare($fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $registro, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona);
                                        }
                                        //else de las condiciones
                                    }

                                    //FIN DE MES entre mes
                                }


                        }
                        //else si la nomina no existe entonces que la inserte
                    } else {
                        $usuarioActual = Auth::user();
                        $nombre = $usuarioActual->name;
                        $rol = $usuarioActual->rol;
                        $cedulaagregada = '0';
                        date_default_timezone_set('America/Bogota');
                        $ip = $_SERVER['REMOTE_ADDR'];
                        $fechaHoraActual = date('Y-m-d H:i:s');
                        $agencia = $usuarioActual->agenciau;
                        $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, Acción_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoNuevaNomina', ?, ?, ?, ?)", [
                            null,
                            $nombre,
                            $rol,
                            $agencia,
                            $fechaHoraActual,
                            $cedulaagregada,
                            null,
                            $ip
                        ]);

                        $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
                            $nomina,
                            $nomNomina ,
                            $dependencia,
                            $nomdependencia,
                            $entidad
                        ]);
                        $foundMatchingPagare = true;
                    }
                    //fin validacion
                }
                //cierre del else foundMatchingPagare
            }






            //fin foreach
        }

        $user = DB::select("
        SELECT *
        FROM persona A
        JOIN pagare B ON A.ID = B.ID_Persona
        WHERE B.Ordinario = 0 && B.NombreAgencia = '$agenciaU'
        ORDER BY A.ID ASC");


        $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

        // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
        $dataEnfermedades = [];
        foreach ($enfermedades as $enfermedad) {
            $dataEnfermedades[] = [
                'id' => $enfermedad->ID_Enferm,
                'nombre' => $enfermedad->Enfermedad,
            ];
        }

        return datatables()->of($user)
            ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
                $checkboxes = '<div class="row">';

                $numEnfermedades = count($dataEnfermedades);
                $numColumnas = 3;
                $numFilas = ceil($numEnfermedades / $numColumnas);

                for ($col = 0; $col < $numColumnas; $col++) {
                    $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

                    for ($fila = 0; $fila < $numFilas; $fila++) {
                        $index = $fila + $col * $numFilas;

                        if ($index < $numEnfermedades) {
                            $enfermedad = $dataEnfermedades[$index];

                            $checkboxes .= '<label for="enfermedad_' . $index . '">
                                                <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
                                                <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="' . $enfermedad['nombre'] . '">
                                                ' . $enfermedad['nombre'] . '
                                            </label><br>';
                        }
                    }

                    $checkboxes .= '</div>';
                }

                $checkboxes .= '</div>';

                return $checkboxes;
            })
            ->rawColumns(['Enfermedades'])
            ->toJson();
    }


    public function data16()
    {

        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("SELECT * FROM concepto_autorizaciones");

        return view('Consultante/solicitarautorizacion', ['user' => $user]);
    }

    public function solicitudes(Request $request)
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $solicitudes = DB::select("SELECT DISTINCT A.ID AS IDPersona, A.Score, A.CuentaAsociada, A.Nombre, A.Apellidos, B.ID AS IDAutorizacion, B.DocumentoSoporte,B.Fecha, B.CodigoAutorizacion, B.NomAgencia, B.NumAgencia, B.Cedula, B.Detalle, B.Observaciones, B.Estado, B.Solicitud, B.SolicitadoPor, B.Validacion, B.ValidadoPor, B.Aprobacion, B.AprobadoPor, C.Letra, C.No, C.Concepto, C.Areas
        FROM persona A
        JOIN autorizaciones B ON B.ID_Persona = A.ID
        JOIN concepto_autorizaciones C ON B.ID_Concepto = C.ID
        WHERE B.NomAgencia = '$agenciaU'");
        return datatables()->of($solicitudes)->toJson();
    }

    public function solicitarAutorizacion(Request $request)
    {

        $existingPerson = DB::select('SELECT * FROM autorizaciones WHERE Cedula = ?', [$request->cedula]);
        if ($existingPerson == 'asd') {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        } else {

            $tipoautorizacion = $request->tautorizacion;
            $No = substr($tipoautorizacion, 0, 2);
            $letra = substr($tipoautorizacion, 2, 3);
            $cedula = $request->cedula;
            $detalle = $request->detalle;

            $fechadeSolicitud = Carbon::now('America/Bogota');
            $fechadeSolicitudUtc = $fechadeSolicitud->setTimezone('UTC');
            Carbon::setLocale('es');
            $fechaStringfechadeSolicitud = $fechadeSolicitud->translatedFormat('F d Y-H:i:s');


            $usuarioActual = Auth::user();
            $agenciaU = $usuarioActual->agenciau;
            $nombreU = $usuarioActual->name;
            $existingID = DB::select('SELECT ID FROM Persona WHERE Cedula = ?', [$request->cedula]);
            $idpersona = $existingID[0]->ID;

            $existingConcepto = DB::select('SELECT ID FROM concepto_autorizaciones WHERE No = ? AND Letra = ?', [$No, $letra]);
            $idconcepto = $existingConcepto[0]->ID;

            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NameAgencia = ?', [$agenciaU]);
            $numAgencia = $existeAgencia[0]->NumAgencia;

            $id_insertado = DB::table('autorizaciones')->insertGetId([
                'Fecha' => $fechaStringfechadeSolicitud,
                'CodigoAutorizacion' => $tipoautorizacion,
                'NumAgencia' => $numAgencia,
                'NomAgencia' => $agenciaU,
                'Cedula' => $cedula,
                'Detalle' => $detalle,
                'Estado' => 2,
                'Solicitud' => 1,
                'SolicitadoPor' => $nombreU,
                'ID_Persona' => $idpersona,
                'ID_Concepto' => $idconcepto
            ]);

            // Verificar si se subió un archivo
            if (!$request->hasFile('SoporteScore')) {
                return back()->withErrors(['message' => 'No se subió ningún archivo.']);
            }

            $file = $request->file('SoporteScore');
            $filename = $file->getClientOriginalName();

            // Verificar si el archivo es PDF
            if ($file->getClientOriginalExtension() !== 'pdf') {
                return back()->withErrors(['message' => 'Solo se pueden subir archivos PDF.']);
            }

            // Contar archivos existentes y crear nuevo nombre de archivo
            $existingFilesCount = DB::table('autorizaciones')
                ->where('Cedula', $cedula)
                ->where('DocumentoSoporte', 'like', 'Soporte-' . $cedula . '%')
                ->count();
            if ($existingFilesCount == 0) {
                // Si no hay archivos existentes, guardarlo como el primero
                $newFilename = 'Soporte-' . $cedula . '.pdf';
            } else {
                // Si hay archivos existentes, generar un nombre de archivo único
                $newFilename = 'Soporte-' . $cedula . '-' . ($existingFilesCount + 1) . '.pdf';
            }

            // Subir el archivo
            $dir = 'Storage/files/soporteautorizaciones/';
            if (!$file->move($dir, $newFilename)) {
                return back()->withErrors(['message' => 'Error al subir el archivo.']);
            }

            // Actualizar base de datos
            $actualizacion = DB::table("autorizaciones")
            ->where('ID', $id_insertado)
            ->update(['DocumentoSoporte' => $newFilename]);




            return back()->with("correcto", "<span class='fs-4'>La autorización No. <span class='badge bg-primary fw-bold'>".$id_insertado."</span> está en trámite.</span>");


        }


    }

    public function actualizardetalle(Request $request, $id){

        $update = DB::table('autorizaciones')
        ->where('ID', $id)
        ->update([
            'Detalle' => $request->input('Detalle'),
            'Estado' => 2
        ]);

        return response()->json(['success' => 'Usuario actualizado correctamente']);
    }
    private function S400pagare($fechaReporteString, $existedatacredito,$aprobado, $razon,$coordinacion, $AutorizacionGerente,$interesProporcionalCorrecto,$fechaStringCredito,$garantia,$agencia,$nombreAgencia,$cuenta,$cedula,$nombres,$idpagare,$registro,$capital,$ncuotas,$vcuotas,$tasaAPI,$nomina,$nomNomina,$direccion,$fijo,$fechaFormateada,$fechaFormateada2,$celular,$correo,$usuario, $id_persona){
        DB::table('pagare')->insert([
            'FechaReporte' => $fechaReporteString,
            'ExisteDatacredito' => $existedatacredito,
            'Aprobado' => $aprobado,
            'Razon' => $razon,
            'CoorAsignada' => $coordinacion,
            'AutorizacionGerente' => $AutorizacionGerente,
            'InteresProporcional' => $interesProporcionalCorrecto,
            'FechaAccion' => $fechaStringCredito,
            'Garantia' => $garantia,
            'NoAgencia' => $agencia,
            'NombreAgencia' => $nombreAgencia,
            'CuentaCoop' => $cuenta,
            'Cedula_Persona' => $cedula,
            'NombreCompleto' => $nombres,
            'ID_Pagare' => $idpagare,
            'NoLC' => $registro['LINEA'],
            'Linea_Credito' => $registro['LINEANOM'],
            'Capital' => $capital,
            'NoCuotas' => $ncuotas,
            'ValorCuota' => $vcuotas,
            'Tasa' => $tasaAPI,
            'FechaCredito' => $fechaStringCredito,
            'Nomina' => $nomina . ' - ' . $nomNomina,
            'Direccion' => $direccion,
            'TelFijo' => $fijo,
            'Fecha1Cuota' => $fechaFormateada,
            'FechaUltimaCuota' => $fechaFormateada2,
            'Celular' => $celular,
            'Correo' => $correo,
            'GeneradorPagare' => $usuario,
            'ID_Persona' => $id_persona
        ]);
    }


    private function pagareactualizar($existecreditoexistente,$fechaReporteString, $existedatacredito, $aprobado, $razon, $coordinacion, $AutorizacionGerente, $interesProporcionalCorrecto, $fechaStringCredito, $garantia, $agencia, $nombreAgencia, $cuenta, $cedula, $nombres, $idpagare, $NoLinea,$NomLinea, $capital, $ncuotas, $vcuotas, $tasaAPI, $nomina, $nomNomina, $direccion, $fijo, $fechaFormateada, $fechaFormateada2, $celular, $correo, $usuario, $id_persona)
    {
        $actualizar =DB::table('pagare')
            ->where('ID_Pagare', $idpagare)
            ->where('ExisteDatacredito', $existecreditoexistente)
            ->update([
                'FechaReporte' => $fechaReporteString,
                'ExisteDatacredito' => $existedatacredito,
                'Aprobado' => $aprobado,
                'Razon' => $razon,
                'CoorAsignada' => $coordinacion,
                'AutorizacionGerente' => $AutorizacionGerente,
                'InteresProporcional' => $interesProporcionalCorrecto,
                'FechaAccion' => $fechaStringCredito,
                'Garantia' => $garantia,
                'NoAgencia' => $agencia,
                'NombreAgencia' => $nombreAgencia,
                'CuentaCoop' => $cuenta,
                'Cedula_Persona' => $cedula,
                'NombreCompleto' => $nombres,
                'ID_Pagare' => $idpagare,
                'NoLC' => $NoLinea,
                'Linea_Credito' => $NomLinea,
                'Capital' => $capital,
                'NoCuotas' => $ncuotas,
                'ValorCuota' => $vcuotas,
                'Tasa' => $tasaAPI,
                'FechaCredito' => $fechaStringCredito,
                'Nomina' => $nomina . ' - ' . $nomNomina,
                'Direccion' => $direccion,
                'TelFijo' => $fijo,
                'Fecha1Cuota' => $fechaFormateada,
                'FechaUltimaCuota' => $fechaFormateada2,
                'Celular' => $celular,
                'Correo' => $correo,
                'GeneradorPagare' => $usuario,
                'ID_Persona' => $id_persona
            ]);
    }
}
