<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use App\Mail\EnviarCorreo3;
use App\Mail\EnviarCorreo5;
use App\Mail\EnviarCorreo6;
use App\Mail\EnviarCorreo16;
use App\Mail\EnviarCorreo17;
use App\Mail\EnviarCorreo18;
use App\Mail\EnviarCorreo19;
use Illuminate\Support\Facades\Mail;
use Codedge\Fpdf\Fpdf\Fpdf;
use Carbon\Carbon;
use Illuminate\Support\Facades\Http;



class CRUDCoordinacion extends Controller
{
    public function data()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Inspektor, A.Observaciones, A.Cedula, A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, A.TipoProveedor, A.NombreAnalisis, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN, P.NIT, P.NombreRC, P.ValorCompra, P.ValorAcumulado, P.RazonSocial,E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        JOIN proveedor P ON E.ID_Persona = P.ID_Persona
        WHERE A.Activado = 1 && A.Tipo = 'Proveedor' && Enviado = 0  && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC
        ");

        return datatables()->of($user)->toJson();
    }


    public function create(Request $request)
    {
        $existingPerson = DB::select('SELECT * FROM persona WHERE Cedula = ?', [$request->Cedula]);

        if ($existingPerson == true) {
            return back()->with("incorrecto", "Persona con cc. $request->Cedula ya existe! Error al Registrar!");
        }
        $existingNIT = DB::select('SELECT * FROM proveedor WHERE NIT = ?', [$request->nit]);
        if ($existingNIT == true) {
            return back()->with("incorrecto", "Persona con NIT. $request->nit ya existe! Error al Registrar!");
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif ($request->Score > 950) {
                $request->Score = 950;
            }
            date_default_timezone_set('America/Bogota');
            $fechaHoraActual = date('Y-m-d H:i:s');
            if ($request->tipo_persona == "PN") {
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                $sql = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoProveedor, FechaCorreo, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?,?,?)', [
                    $request->cedula,
                    $request->nombre,
                    $request->apellidos,
                    null,
                    null,
                    $agenciaU,
                    null,
                    null,
                    'Proveedor',
                    1,
                    $request->tipo_persona,
                    $fechaHoraActual,
                    $request->Inspektor

                ]);
                $idPersona = DB::getPdo()->lastInsertId();
                if ($request->hasFile('NombreA') != null) {
                    $file4 = $request->file('NombreA');
                    $filename4 =  $file4->getClientOriginalName();
                    $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                    if (!empty($archivo4)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo AutorizaciÃ³n - "' . $filename4 . '" ya existe!'
                        ]);
                    }
                }

                if ($request->hasFile('NombreRC') != null) {
                    $file = $request->file('NombreRC');
                    $filename =  $file->getClientOriginalName();
                    $archivo = DB::select("SELECT NombreRC FROM proveedor WHERE NombreRC = ?", [$filename]);

                    if (!empty($archivo)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo RECIBO DE CAJA - "' . $filename . '" ya existe!'
                        ]);
                    }
                }



                if ($request->hasFile('NombreS')) {
                    $file = $request->file('NombreS');
                    $dir = 'Storage/files/sintesis/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                            $request->FechaInsercion,
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion ?? null,
                        null,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombreRC')) {
                    $file = $request->file('NombreRC');
                    $dir = 'Storage/files/rc/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();


                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreRC')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?)', [
                            $filename ?? null,
                            $request->valorcompra,
                            $request->valorcompra,
                            $idPersona
                        ]);
                        if ($file->getClientOriginalName() !== 'RC-' . $request->cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            if (file_exists($dir . $filename)) {
                                unlink($dir . $filename);
                            }
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->cedula . '.pdf'
                            ]);
                        }
                    } else {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, ValorAcumulado, ValorCompra, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        $request->valorcompra,
                        $request->valorcompra,
                        $idPersona
                    ]);
                }

                if ($request->hasFile('NombreA')) {
                    $file2 = $request->file('NombreA');
                    if ($file2 != null) {
                        $dir2 = 'Storage/files/autorizacion/';
                        $filename2 =  $file2->getClientOriginalName();
                        $extension2 = $file2->getClientOriginalExtension();

                        if ($file2->getClientOriginalName() !== 'Autorizacion-' . $request->cedula . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula . '.pdf'
                            ]);
                        }
                        if ($extension2 === 'pdf') {
                            $uploadSucces2 = $request->file('NombreA')->move($dir2, $filename2);
                            $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                                $filename2 ?? null,
                                $request->consecutivoa,
                                null,
                                $idPersona
                            ]);
                        } else {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'Solo se puede subir archivos PDF.'
                            ]);
                        }
                    }
                } else {
                    $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        null,
                        $request->consecutivoa,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombrePN')) {
                    $file = $request->file('NombrePN');
                    $dir = 'Storage/files/pn/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                        $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        null,
                        $idPersona
                    ]);
                } //
            } else if ($request->tipo_persona == "PJ") {
                $usuarioActual = Auth::user();
                $agenciaU = $usuarioActual->agenciau;
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::insert('INSERT INTO persona (Cedula, Nombre, Apellidos, Score, CuentaAsociada, Agencia, Estado, Reporte, Tipo, Enviado, TipoProveedor, FechaCorreo, Inspektor) VALUES (?, ?, UPPER(?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                    null,
                    null,
                    null,
                    null,
                    null,
                    $agenciaU,
                    null,
                    null,
                    'Proveedor',
                    1,
                    $request->tipo_persona,
                    $fechaHoraActual,
                    $request->Inspektor
                ]);
                $idPersona = DB::getPdo()->lastInsertId();
                if ($request->hasFile('NombreA') != null) {
                    $file4 = $request->file('NombreA');
                    $filename4 =  $file4->getClientOriginalName();
                    $archivo4 = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename4]);

                    if (!empty($archivo4)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo AutorizaciÃ³n - "' . $filename4 . '" ya existe!'
                        ]);
                    }
                }

                if ($request->hasFile('NombreRC') != null) {
                    $file = $request->file('NombreRC');
                    $filename =  $file->getClientOriginalName();
                    $archivo = DB::select("SELECT NombreRC FROM proveedor WHERE NombreRC = ?", [$filename]);

                    if (!empty($archivo)) {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'El archivo RECIBO DE CAJA - "' . $filename . '" ya existe!'
                        ]);
                    }
                }



                if ($request->hasFile('NombreS')) {
                    $file = $request->file('NombreS');
                    $dir = 'Storage/files/sintesis/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreS')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                            $request->FechaInsercion,
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO documentosintesis (FechaInsercion, NombreS, ID_Persona) VALUES (?, ?, ?)', [
                        $request->FechaInsercion ?? null,
                        null,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombreRC')) {
                    $file = $request->file('NombreRC');
                    $dir = 'Storage/files/rc/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();


                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombreRC')->move($dir, $filename);

                        $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, NIT, RazonSocial, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?, ?, ?)', [

                            $filename ?? null,
                            $request->nit,
                            $request->razonSocial,
                            $request->valorcompra,
                            $request->valorcompra,
                            $idPersona
                        ]);
                        if ($file->getClientOriginalName() !== 'RC-' . $request->nit . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            if (file_exists($dir . $filename)) {
                                unlink($dir . $filename);
                            }
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->nit . '.pdf'
                            ]);
                        }
                    } else {
                        $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql2 = DB::insert('INSERT INTO proveedor (NombreRC, NIT, RazonSocial, ValorCompra, ValorAcumulado, ID_Persona) VALUES (?, ?, ?, ?, ? ,?)', [
                        null,
                        $request->nit,
                        $request->razonSocial,
                        $request->valorcompra,
                        $request->valorcompra,
                        $idPersona
                    ]);
                }

                if ($request->hasFile('NombreA')) {
                    $file2 = $request->file('NombreA');
                    if ($file2 != null) {
                        $dir2 = 'Storage/files/autorizacion/';
                        $filename2 =  $file2->getClientOriginalName();
                        $extension2 = $file2->getClientOriginalExtension();

                        if ($file2->getClientOriginalName() !== 'Autorizacion-' . $request->nit . '.pdf') {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula . '.pdf'
                            ]);
                        }
                        if ($extension2 === 'pdf') {
                            $uploadSucces2 = $request->file('NombreA')->move($dir2, $filename2);
                            $sql4 = DB::insert('INSERT INTO documentoa (NombreA, ConsecutivoA, NombreContrato, ID_Persona) VALUES (?, ?, ?, ?)', [
                                $filename2 ?? null,
                                $request->consecutivoa,
                                null,
                                $idPersona
                            ]);
                        } else {
                            $sql4 = DB::update("DELETE FROM documentoa WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentosintesis WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM documentopn WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM proveedor WHERE ID_Persona=$idPersona", []);
                            $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                            return back()->withErrors([
                                'message' => 'Solo se puede subir archivos PDF.'
                            ]);
                        }
                    }
                } else {
                    $sql4 = DB::insert('INSERT INTO documentoa (NombreA, NombreContrato, ConsecutivoA, ID_Persona) VALUES (?, ?, ?, ?)', [
                        null,
                        null,
                        $request->consecutivoa,
                        $idPersona
                    ]);
                }
                if ($request->hasFile('NombrePN')) {
                    $file = $request->file('NombrePN');
                    $dir = 'Storage/files/pn/';
                    $filename =  $file->getClientOriginalName();
                    $extension = $file->getClientOriginalExtension();

                    if ($extension === 'pdf') {
                        $uploadSucces = $request->file('NombrePN')->move($dir, $filename);

                        $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                            $filename ?? null,
                            $idPersona
                        ]);
                    } else {
                        $sql4 = DB::update("DELETE FROM persona WHERE ID=$idPersona", []);
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                } else {
                    $sql3 = DB::insert('INSERT INTO documentopn (NombrePN, ID_Persona) VALUES (?, ?)', [
                        null,
                        $idPersona
                    ]);
                } //
            }




            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoProveedor', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaagregada,
                null,
                $ip
            ]);
            if ($sql && $sql4) {
                if ($request->tipo_persona == 'PN') {
                    $cedula = $request->cedula;
                    $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                    $usuarioActual = Auth::user();
                    $agencia = $usuarioActual->agenciau;
                    $talento = " de Talento Humano";
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo6($cedula, $talento, $agencia));
                    }
                } else {
                    $nit = $request->nit;
                    $razon = $request->razonSocial;
                    $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                    $usuarioActual = Auth::user();
                    $agencia = $usuarioActual->agenciau;
                    $talento = " de Talento Humano";
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo5($nit, $talento, $razon, $agencia));
                    }
                }
                return back()->with("correcto2", "Persona Registrada correctamente!")->with("showLoadingAlert", true);
            } else {
                return back()->with("incorrecto", "Error al insertar el registro!");
            }
        }
    }


    public function update(Request $request, $id)
    {

        $archivo4 = DB::select("SELECT NombreRC FROM proveedor WHERE ID_Persona = ?", [$id]);
        $nombre_archivo4 = $archivo4[0]->NombreRC;
        $filename4 = $nombre_archivo4;
        if ($archivo4) {
            $nombre_archivo4 = $archivo4[0]->NombreRC;
            if ($request->hasFile('archivo4')) {
                $file4 = $request->file('archivo4');
                $filename4 =  $file4->getClientOriginalName();
            }



            $nuevo_archivo4 = $filename4;
            if ($archivo4) {
                $pdfactual4 = $nombre_archivo4;
            } else {
                $pdfactual4 = null;
            }
        }
        if (!empty($archivo4) && $archivo4 != $pdfactual4) {
            $nuevo_nombre4 = $nuevo_archivo4;
        }

        if (isset($nombre_archivo4) && isset($nuevo_nombre4) && $nombre_archivo4 !== $nuevo_nombre4) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo RECIBO DE CAJA -> ' . $nombre_archivo4 . ' actual (' . $nombre_archivo4 . ').\n'
            ]);
        }

        $archivo3 = DB::select("SELECT NombreA FROM documentoa WHERE ID_Persona = ?", [$id]);
        $nombre_archivo3 = $archivo3[0]->NombreA;
        $filename3 = $nombre_archivo3;
        if ($archivo3) {
            $nombre_archivo3 = $archivo3[0]->NombreA;
            if ($request->hasFile('archivo3')) {
                $file3 = $request->file('archivo3');
                $filename3 =  $file3->getClientOriginalName();
            }



            $nuevo_archivo3 = $filename3;
            if ($archivo3) {
                $pdfactual3 = $nombre_archivo3;
            } else {
                $pdfactual3 = null;
            }
        }
        if (!empty($archivo3) && $archivo3 != $pdfactual3) {
            $nuevo_nombre3 = $nuevo_archivo3;
        }

        if (isset($nombre_archivo3) && isset($nuevo_nombre3) && $nombre_archivo3 !== $nuevo_nombre3) {
            return back()->withErrors([
                'message' => 'El archivo subido contiene un nombre diferente al archivo AUTORIZACIÃN -> ' . $nombre_archivo3 . ' actual (' . $nombre_archivo3 . ').\n'
            ]);
        } else {
            if ($request->Score == 'S/E') {
                $request->Score = 'S/E';
            } elseif ($request->Score > 950) {
                $request->Score = 950;
            }

            if ($request->hasFile('archivo3') != null) {
                $file = $request->file('archivo3');
                $filename =  $file->getClientOriginalName();
                $archivo = DB::select("SELECT NombreA FROM documentoa WHERE NombreA = ?", [$filename]);

                if (!empty($archivo)) {
                    return back()->withErrors([
                        'message' => 'El archivo AutorizaciÃ³n - "' . $filename . '" ya existe!'
                    ]);
                }
            }

            if ($request->hasFile('archivo4') != null) {
                $file4 = $request->file('archivo4');
                $filename4 =  $file4->getClientOriginalName();
                $archivo4 = DB::select("SELECT NombreRC FROM proveedor WHERE NombreRC = ?", [$filename4]);

                if (!empty($archivo4)) {
                    return back()->withErrors([
                        'message' => 'El archivo Recibo de Caja - "' . $filename4 . '" ya existe!'
                    ]);
                }
            }

            $tipo = DB::select("SELECT TipoProveedor FROM persona WHERE ID = ?", [$id]);
            $tipoproveedor = $tipo[0]->TipoProveedor;

            if ($tipoproveedor == "PN") {

                $sql = DB::update("UPDATE persona SET Cedula=?, Nombre =?, Apellidos = ?, Agencia = ?, Inspektor =?  WHERE ID = $id", [
                    $request->cedula2,
                    $request->nombre3,
                    $request->apellidos3,
                    $request->agencia3,
                    $request->Inspektor3,
                ]);


                $proveedor = DB::select("SELECT ValorAcumulado FROM proveedor WHERE ID_Persona = ?", [$id]);
                $valorAcumuladoActual = $proveedor[0]->ValorAcumulado;

                $nuevoValorCompra = $request->valorcompra1;

                $nuevoValorAcumulado = $valorAcumuladoActual + $nuevoValorCompra;

                $dir4 = 'Storage/files/rc/';
                if ($request->hasFile('archivo4') && !empty($filename4)) {
                    $file4 = $request->file('archivo4');
                    if ($file4->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula2 . '.pdf'
                        ]);
                    }
                    if ($file4->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file4->move($dir4, $filename4);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo4')) {
                    $sql5 = DB::update("UPDATE proveedor SET ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->valorcompra1,
                        $nuevoValorAcumulado,
                        $nuevo_archivo4
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE proveedor SET ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->valorcompra1,
                        $nuevoValorAcumulado,
                        null
                    ]);
                }



                $dir = 'Storage/files/autorizacion/';
                if ($request->hasFile('archivo3') && !empty($filename)) {
                    $file = $request->file('archivo3');
                    if ($file->getClientOriginalName() !== 'Autorizacion-' . $request->cedula2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->cedula2 . '.pdf'
                        ]);
                    }
                    if ($file->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file->move($dir, $filename);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo3')) {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa44,
                        $nuevo_archivo3
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa44
                    ]);
                }
            } else {
                $sql = DB::update("UPDATE persona SET Agencia = ?, Inspektor = ?  WHERE ID = $id", [
                    $request->agencia4,
                    $request->Inspektor2,
                ]);


                $proveedor = DB::select("SELECT ValorAcumulado FROM proveedor WHERE ID_Persona = ?", [$id]);
                $valorAcumuladoActual = $proveedor[0]->ValorAcumulado;

                $nuevoValorCompra = $request->valorcompra2;

                $nuevoValorAcumulado = $valorAcumuladoActual + $nuevoValorCompra;

                $dir4 = 'Storage/files/rc/';
                if ($request->hasFile('archivo4') && !empty($filename4)) {
                    $file4 = $request->file('archivo4');
                    if ($file4->getClientOriginalName() !== 'RC-' . $request->nit2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->RC-' . $request->nit2 . '.pdf'
                        ]);
                    }

                    if ($file4->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file4->move($dir4, $filename4);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo4')) {
                    $sql2 = DB::update("UPDATE proveedor SET NIT = ?, RazonSocial = ?, ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->nit2,
                        $request->razonsocial2,
                        $request->valorcompra2,
                        $nuevoValorAcumulado,
                        $nuevo_archivo4
                    ]);
                } else {
                    $sql2 = DB::update("UPDATE proveedor SET NIT = ?, RazonSocial = ?, ValorCompra = ?, ValorAcumulado = ?, NombreRC = ? WHERE ID_Persona = $id", [
                        $request->nit2,
                        $request->razonsocial2,
                        $request->valorcompra2,
                        $nuevoValorAcumulado,
                        null
                    ]);
                }



                $dir = 'Storage/files/autorizacion/';
                if ($request->hasFile('archivo3') && !empty($filename)) {
                    $file = $request->file('archivo3');
                    if ($file->getClientOriginalName() !== 'Autorizacion-' . $request->nit2 . '.pdf') {
                        return back()->withErrors([
                            'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $request->nit2 . '.pdf'
                        ]);
                    }

                    if ($file->getClientOriginalExtension() === 'pdf') {
                        $uploadSuccess = $file->move($dir, $filename);
                    } else {
                        return back()->withErrors([
                            'message' => 'Solo se puede subir archivos PDF.'
                        ]);
                    }
                }
                if ($request->hasFile('archivo3')) {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ?, NombreA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa33,
                        $nuevo_archivo3
                    ]);
                } else {
                    $sql5 = DB::update("UPDATE documentoa SET ConsecutivoA = ? WHERE ID_Persona = $id", [
                        $request->consecutivoa33
                    ]);
                }
            }


            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $cedulaagregada = $request->Cedula;
            date_default_timezone_set('America/Bogota');
            $cedula = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
            $cedulaRegistrada = $cedula[0]->Cedula;
            $fechaHoraActual = date('Y-m-d H:i:s');
            $ip = $_SERVER['REMOTE_ADDR'];
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'ActualizoProveedor', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $cedulaRegistrada,
                null,
                $ip
            ]);
            if ($request->Consulta == true) {
                $sql4 = DB::update("UPDATE persona SET Consulta = ? WHERE ID = $id", [
                    1
                ]);
            }
            if (isset($sql4) && $sql4 == true) {
                $persona = DB::selectOne('SELECT Nombre, Apellidos FROM persona WHERE ID = ?', [$id]);
                $nombreUsuario = $persona ? ucfirst(strtolower($persona->Nombre)) . ' ' . $persona->Apellidos : '';
                $recibo = $request->recibo;
                $cedulaRegistrada = DB::select("SELECT Cedula FROM persona WHERE ID = $id");
                $cedula = $cedulaRegistrada[0]->Cedula;
                $usuarios = DB::table('users')->where('rol', 'Thumano')->pluck('email');
                foreach ($usuarios as $email) {
                    Mail::to($email)->send(new EnviarCorreo3($cedula, $nombreUsuario, $recibo));
                }
                if ($tipoproveedor == 'PN') {
                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificaciÃ³n $request->cedula2 puede ser consultado!");
                } else {
                    return back()->with("correcto", "El usuario con razÃ³n social " . ucwords($request->razonsocial2) . " con NIT # $request->nit2 puede ser consultado!");
                }
            } else if ($sql == true || $sql2 = true || $sql5 = true) {
                if ($tipoproveedor == 'PN') {

                    return back()->with("correcto", "El usuario " . ucwords($request->nombre3) . " " . strtoupper($request->apellidos3) . " con identificaciÃ³n $request->cedula2 fue actualizado correctamente!");
                } else {
                    return back()->with("correcto", "La persona con razÃ³n social " . ucwords($request->razonsocial2) . " con NIT # $request->nit2 fue actualizado correctamente!");
                }
            } else {
                return back()->with("incorrecto", "Error al modificar el registro!");
            }
        }
    }


    public function data2()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT DISTINCT A.ID, A.Cedula, A.FechaCorreo, A.Nombre, A.Apellidos, A.Score, A.CuentaAsociada, A.Agencia, A.Estado, A.Activado, A.Tipo, A.Consulta,
        A.Reporte, A.TipoProveedor, A.NombreAnalisis, A.ConsecutivoAnalisis, A.Monto, A.DeudaEsp, B.FechaInsercion, B.NombreS, C.NombrePN, P.NIT, P.NombreRC, P.ValorCompra, P.ValorAcumulado, P.RazonSocial,E.NombreA, E.ConsecutivoA
        FROM persona A
        JOIN documentosintesis B ON A.ID = B.ID_Persona
        JOIN documentopn C ON B.ID_Persona = C.ID_Persona
        JOIN documentoa E ON C.ID_Persona = E.ID_Persona
        JOIN proveedor P ON E.ID_Persona = P.ID_Persona
        WHERE A.Activado = 1 && A.Tipo = 'Proveedor' && Enviado = 0  && A.Agencia = '$agenciaU'
        ORDER BY Nombre ASC
    ");

        return datatables()->of($user)->toJson();
    }

    public function data3()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
            SELECT DISTINCT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
            FROM persona A
            JOIN pagare B ON A.ID = B.ID_Persona
            WHERE B.Aprobado = 1 && B.CoorAsignada = '$agenciaU' || B.Aprobado = 0 && B.CoorAsignada = '$agenciaU'
            ORDER BY A.ID ASC


        ");
        return datatables()->of($user)->toJson();
    }


    public function data4()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion, B.edad, B.deuda, B.AdjuntarAsegur, B.NomAsegur
        FROM persona A
        JOIN pagare B ON A.ID = B.ID_Persona
        WHERE B.Ordinario = 0
        ORDER BY A.ID ASC

    ");


    $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

    // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
    $dataEnfermedades = [];
    foreach ($enfermedades as $enfermedad) {
        $dataEnfermedades[] = [
            'id' => $enfermedad->ID_Enferm,
            'nombre' => $enfermedad->Enfermedad,
        ];
    }

    return datatables()->of($user)
        ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
            $checkboxes = '<div class="row">';

            $numEnfermedades = count($dataEnfermedades);
            $numColumnas = 3;
            $numFilas = ceil($numEnfermedades / $numColumnas);

            for ($col = 0; $col < $numColumnas; $col++) {
                $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

                for ($fila = 0; $fila < $numFilas; $fila++) {
                    $index = $fila + $col * $numFilas;

                    if ($index < $numEnfermedades) {
                        $enfermedad = $dataEnfermedades[$index];

                        $checkboxes .= '<label for="enfermedad_' . $index . '">
                                            <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
                                            <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="'. $enfermedad['nombre'] .'">
                                            ' . $enfermedad['nombre'] . '
                                        </label><br>';
                    }
                }

                $checkboxes .= '</div>';
            }

            $checkboxes .= '</div>';

            return $checkboxes;
        })
        ->rawColumns(['Enfermedades'])
        ->toJson();

}



    public function createpagare(Request $request)
    {
        $existingPerson3 = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
        if (!empty($existingPerson3)) {
            $persona3 = $existingPerson3[0];
            if ($persona3->Score === NULL) {
                return back()->with("incorrecto3", "<span style='font-size: 25px'>La persona <strong>" . e($request->NombreCompleto) . " NO</strong> cuenta con consulta de datacrÃ©dito. Espere a que sea consultado por el <strong>area de cumplimiento</strong>.</span>");
            }
        }


        $existingLinea = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);

        if ($existingLinea == false) {
            return back()->with("incorrecto2", "Linea de CrÃ©dito No. $request->Linea_Credito NO existe! Volver a escanear con correo vinculado.");
        }


        if ($request->Correo == NULL) {
            return back()->with("incorrecto2", "Â¡Correo electronico NO detectado! Error al Registrar!");
        }

        $existingPagare = DB::select('SELECT ID_Pagare, CuentaCoop FROM pagare WHERE CuentaCoop = ? AND ID_Pagare = ?', [$request->CuentaCoop, $request->ID_Pagare]);

        if (!empty($existingPagare)) {
            $firstPagare = $existingPagare[0];
            if ($firstPagare->ID_Pagare == $request->ID_Pagare && $firstPagare->CuentaCoop == $request->CuentaCoop) {
                return back()->with("incorrecto2", "El pagarÃ© con consecutivo " . htmlspecialchars($request->ID_Pagare) . " y cuenta " . $request->CuentaCoop . " YA existe! Error al Registrar!");
            }
        }
        else {

            $existingPerson3 = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
            if (!empty($existingPerson3)) {
                $persona3 = $existingPerson3[0];



                if ($request->Cedula_Persona == $persona3->Cedula) {
                    if ($persona3->Score >= 650) {


                        $existingPerson2 = DB::select('SELECT Cedula, ID FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
                        $persona2 = $existingPerson2[0];
                        $Cuota1 = $request->Fecha1Cuota;
                        $CuotaFinal = $request->FechaUltimaCuota;
                        $fechaCredito = $request->FechaCredito;

                        $codigoAnio = substr($Cuota1, 0, 1);
                        $anio = substr($Cuota1, 1, 2);
                        $mes = substr($Cuota1, 3, 2);
                        $dia = substr($Cuota1, 5, 2);


                        $codigoAnio2 = substr($CuotaFinal, 0, 1);
                        $anio2 = substr($CuotaFinal, 1, 2);
                        $mes2 = substr($CuotaFinal, 3, 2);
                        $dia2 = substr($CuotaFinal, 5, 2);


                        $codigoAnio3 = substr($fechaCredito, 0, 1);
                        $anio3 = substr($fechaCredito, 1, 2);
                        $mes3 = substr($fechaCredito, 3, 2);
                        $dia3 = substr($fechaCredito, 5, 2);


                        $anioReal = 2000 + (int)$anio;

                        $anioReal2 = 2000 + (int)$anio2;

                        $anioReal3 = 2000 + (int)$anio3;

                        $meses = [
                            '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
                            '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
                            '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
                            '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
                        ];
                        $nombreMes = $meses[$mes];

                        $nombreMes2 = $meses[$mes2];

                        $nombreMes3 = $meses[$mes3];

                        $fechaFormateada = $nombreMes . " " . (int)$dia . " del " . $anioReal;

                        $fechaFormateada2 = $nombreMes2 . " " . (int)$dia2 . " del " . $anioReal2;

                        $fechaFormateada3 = $nombreMes3 . " " . (int)$dia3 . " del " . $anioReal3;

                        $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                        $lineacredito = $credito[0]->Credito;

                        //$accessToken = $this->iniciarSesion();

                        //API S400 - PERSONA
                        $url = env('URL_SERVER_API');
                        $attempts = 0;
                        $maxAttempts = 3;
                        $retryDelay = 500; // Milisegundos

                        do {
                            try {
                                $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                                $data = $response->json();

                                break;
                            } catch (\Exception $e) {
                                $attempts++;
                                usleep($retryDelay * 1000);
                            }
                        } while ($attempts < $maxAttempts);

                        if ($attempts == $maxAttempts) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                        $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                        $ENTIDAD = $data['asociado']['ENTIDAD'];
                        $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                        $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


                        //API S400 - GARANTIA
                        $url2 = env('URL_SERVER_API');
                        $attempts2 = 0;
                        $maxAttempts2 = 3;
                        $retryDelay2 = 500; // Milisegundos

                        do {
                            try {
                                $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                                $data2 = $response2->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts2++;
                                usleep($retryDelay2 * 1000);
                            }
                        } while ($attempts2 < $maxAttempts2);

                        if ($attempts2 == $maxAttempts2) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        // if (isset($data2['garantia'])) {
                        //     $ValorGarantia = $data2['garantia']['GARANTIA'];
                        // } else {
                        //     return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagarÃ© <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                        // }


                        $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                        // $existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);
                        $ValorGarantia=null;
                        //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                        if (!empty($existeNominaDepen)) {
                            //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                            if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {

                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);

                                //API S400
                                $url = env('URL_SERVER_API');
                                $attempts = 0;
                                $maxAttempts = 3;
                                $retryDelay = 500; // Milisegundos

                                do {
                                    try {
                                        $response = Http::get($url . 'fechan/' . $request->CuentaCoop);
                                        $data = $response->json();
                                        $response2 = Http::get($url . 'deudatotal/' . $request->CuentaCoop);
                                        $data2 = $response2->json();
                                        break;
                                    } catch (\Exception $e) {
                                        $attempts++;
                                        usleep($retryDelay * 1000);
                                    }
                                } while ($attempts < $maxAttempts);

                                if ($attempts == $maxAttempts) {
                                    return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                                }

                                $estadoEdad = $data['status'];
                                $deudatotalAPI = $data2['deudatotal'];

                                $deudatotal = $deudatotalAPI + $request->Capital;
                                if($estadoEdad == 200 && $deudatotal >= 20000000){
                                    $edad = 1;
                                    $deuda = 1;
                                }else if($estadoEdad == 200 && $deudatotal >= 50000000){
                                    $edad = 1;
                                    $deuda = 2;
                                }else if ($estadoEdad == 200){
                                    $edad = 1;
                                    $deuda = null;
                                }else if ($deudatotal >= 20000000){
                                    $edad = null;
                                    $deuda = 1;
                                }else if ($deudatotal >= 50000000){
                                    $edad = null;
                                    $deuda = 2;
                                }else{
                                    $edad = null;
                                    $deuda = null;
                                }




                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {


                                    $anioCompleto = 2000 + (int)$anio3;
                                    if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                    }


                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);
                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
                                        $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                        // Comparar si son iguales
                                        //resultado
                                        $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                        // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                        // Implementar la lÃ³gica de la fÃ³rmula de Excel
                                        $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                        // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
                                        $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 30; // DIAS(E15;B14)<=30

                                        // Comprobar si todas las condiciones relevantes son verdaderas
                                        $resultado1 = $condicion1 && $condicion3 ? true : false;




                                        // Primera condiciÃ³n externa
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado2 = false;
                                        } else {
                                            // CondiciÃ³n interna
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                            $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                            $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                            if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                $resultado2 = true;
                                            } else {
                                                $resultado2 = false;
                                            }
                                        }


                                        // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
                                        $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                        // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 30 dÃ­as o menos
                                        $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 30;

                                        // Resultado basado en las condiciones
                                        $resultado3 = ($condicion3 || $condicion4) ? true : false;


                                        // Calcular el Ãºltimo dÃ­a del mes de B14
                                        $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes anterior a E15
                                        $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                        // Verificar las condiciones
                                        $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                        $condicion6 = $fechaReporte->gte($fechadelCredito);
                                        $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                        // Evaluar si todas las condiciones son verdaderas
                                        $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false;


                                        // Primer nivel de comprobaciÃ³n
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado5 = false;
                                        } else {
                                            // Segundo nivel de comprobaciÃ³n
                                            $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
                                            $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

                                            $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                            $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                            $resultado5 = $condicionA && $condicionB ? true : false;
                                        }


                                        //dd($resultado, $resultado1, $resultado2,$resultado3, $resultado4, $resultado5);




                                        $formateada = $fechaReporte->format('d/m/Y');
                                    }


                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {

                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {

                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');



                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte, Aprobado, CoorAsignada, AutorizacionGerente, InteresProporcional, FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->NoLC,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {

                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {

                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int)$anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                }
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $anioCompleto = 2000 + (int)$anio3;
                                    if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                    }
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);

                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                        $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                        // FÃ³rmula 1
                                        $resultado1 = (
                                            $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                            (
                                                $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                                $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                                $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                            )
                                        );


                                        // FÃ³rmula 2
                                        $resultado2 = (
                                            Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                            $fechaReporte->gte($fechadelCredito) &&
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30
                                        ) ?  false : true;

                                        // FÃ³rmula 3
                                        $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                            (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30) ? false : true
                                        );
                                    }


                                    if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        // Formatear los nÃºmeros para eliminar decimales no deseados
                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');
                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {

                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int)$anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                }

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {


                                    $anioCompleto = 2000 + (int)$anio3;
                                    if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                        return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                    }
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);
                                    if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;


                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



                                        $finalMesFechaCarbon2 = $fechaCarbon2->copy()->endOfMonth();
                                        $finalMesFormateadaMesSiguiente = $fechaReporte->copy()->addMonth()->endOfMonth();
                                        $finalMesFechaCreditoDosMeses = $fechadelCredito->copy()->addMonths(2)->endOfMonth();
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                        $diferenciaDias = $fechaReporte->diffInDays($fechadelCredito);


                                        $result = $fechadelCredito > $fechaReporte;


                                        $result1 = $fechaReporte->lt($fechadelCredito) &&
                                            ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                        if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                                            $result2 = false;
                                        } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                                            $result2 = true;
                                        } else {
                                            $result2 = false;
                                        }


                                        //CUARTO CONDICIONAL
                                        $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                        //QUINTO
                                        $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                        //SEXTO
                                        $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                    }


                                    if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }


                                        $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    } else {

                                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                        $anioCompleto = 2000 + (int)$anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        return back()->with("incorrecto", $message);
                                    }
                                } else {
                                    //RECHAZO


                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = $request->Cedula_Persona;
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);



                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                    $anioCompleto = 2000 + (int)$anio3;
                                    $fechadelCredito = Carbon::now('America/Bogota');
                                    Carbon::setLocale('es');
                                    $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                    $parts = explode(' ', $fechaStringCredito);
                                    $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                    $fechaStringCredito = implode(' ', $parts);



                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                        Carbon::setLocale('es');
                                        $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                    }
                                    $message = "";


                                    // FECHA REPORTE POR MES ACTUAL
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                        //INTERES PROPORCIONAL
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');


                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        //INTERES PROPORCIONAL
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }


                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 1',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 2',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 3',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 4',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                0,
                                                'Coordinacion 5',
                                                1,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    }

                                    if (empty($message)) {
                                        $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                                    }

                                    return back()->with("incorrecto", $message);
                                }
                            } else {
                                //error
                                return back()->with("incorrecto", "Â¡No se pudo registrar3!");
                            }
                            //SI NO EXISTE LA NOMINA LA ALMACENA DE FORMA AUTOMATICA
                        } else {



                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);

                            $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
                                $CODIGONOMINA,
                                $NOMBRENOMINA,
                                $NODEPENDENCIA,
                                $DEPENDENCIA,
                                $ENTIDAD
                            ]);

                            $message = "";
                            if (empty($message)) {
                                $message = "<span style='font-size: 20px'>La nÃ³mina denominada '" . $NOMBRENOMINA . "' ha sido registrada automÃ¡ticamente, ya que no se encontraron registros previos de la misma. Informar al administrador el cambio de la fecha de reporte.</span>";
                                return back()->with("correcto2", $message);
                            } else {
                                //error
                                return back()->with("incorrecto", "Â¡No se pudo registrar3!");
                            }
                        }
                    }
                    //SCORE
                    else {
                        $existingPerson2 = DB::select('SELECT Cedula, ID FROM persona WHERE Cedula = ?', [$request->Cedula_Persona]);
                        $persona2 = $existingPerson2[0];
                        $Cuota1 = $request->Fecha1Cuota;
                        $CuotaFinal = $request->FechaUltimaCuota;
                        $fechaCredito = $request->FechaCredito;

                        $codigoAnio = substr($Cuota1, 0, 1);
                        $anio = substr($Cuota1, 1, 2);
                        $mes = substr($Cuota1, 3, 2);
                        $dia = substr($Cuota1, 5, 2);


                        $codigoAnio2 = substr($CuotaFinal, 0, 1);
                        $anio2 = substr($CuotaFinal, 1, 2);
                        $mes2 = substr($CuotaFinal, 3, 2);
                        $dia2 = substr($CuotaFinal, 5, 2);


                        $codigoAnio3 = substr($fechaCredito, 0, 1);
                        $anio3 = substr($fechaCredito, 1, 2);
                        $mes3 = substr($fechaCredito, 3, 2);
                        $dia3 = substr($fechaCredito, 5, 2);


                        $anioReal = 2000 + (int)$anio;

                        $anioReal2 = 2000 + (int)$anio2;

                        $anioReal3 = 2000 + (int)$anio3;

                        $meses = [
                            '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
                            '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
                            '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
                            '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
                        ];
                        $nombreMes = $meses[$mes];

                        $nombreMes2 = $meses[$mes2];

                        $nombreMes3 = $meses[$mes3];

                        $fechaFormateada = $nombreMes . " " . (int)$dia . " del " . $anioReal;

                        $fechaFormateada2 = $nombreMes2 . " " . (int)$dia2 . " del " . $anioReal2;

                        $fechaFormateada3 = $nombreMes3 . " " . (int)$dia3 . " del " . $anioReal3;

                        $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                        $lineacredito = $credito[0]->Credito;

                        //$accessToken = $this->iniciarSesion();

                        //API S400
                        $url = env('URL_SERVER_API');
                        $attempts = 0;
                        $maxAttempts = 3;
                        $retryDelay = 500; // Milisegundos

                        do {
                            try {
                                $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                                $data = $response->json();
                                $response3 = Http::get($url . 'deudatotal/' . $request->CuentaCoop);
                                $data3 = $response3->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts++;
                                usleep($retryDelay * 1000);
                            }
                        } while ($attempts < $maxAttempts);

                        if ($attempts == $maxAttempts) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        $estadoEdad = $data3['status'];
                        $deudatotalAPI = $data3['deudatotal'];


                        $deudatotal = $deudatotalAPI + $request->Capital;


                        if($estadoEdad == 200 && $deudatotal >= 20000000){
                            $edad = 1;
                            $deuda = 1;
                        }else if($estadoEdad == 200 && $deudatotal >= 50000000){
                            $edad = 1;
                            $deuda = 2;
                        }else if ($estadoEdad == 200){
                            $edad = 1;
                            $deuda = null;
                        }else if ($deudatotal >= 20000000 && $deudatotal < 50000000){
                            $edad = null;
                            $deuda = 1;
                        }else if ($deudatotal >= 50000000){
                            $edad = null;
                            $deuda = 2;
                        }else{
                            $edad = 1;
                            $deuda = null;
                        }


                        $AdjuntarAsegur = null;
                        // $consultadeuda = DB::select("SELECT ID, deuda, edad, AdjuntarAsegur, NomAsegur FROM pagare WHERE Cedula_Persona = ? ORDER BY ID DESC", [$request->Cedula_Persona]);
                        // $consultaidpagare = $consultadeuda[0]->ID;

                        // $deudaconsulta = $consultadeuda[0]->deuda;
                        // $nombre = $consultadeuda[0]->NomAsegur;
                        // $edadconulta = $consultadeuda[0]->edad;
                        // $consultaAsegurabilidad = DB::select("SELECT * FROM fasegurabilidad WHERE ID_Pagare = ? ORDER BY ID ASC", [$consultaidpagare]);
                        //variables a llamar en asegurabilidad para vincular

                        //dd($consultaAsegurabilidad, $NomAsegur);
                        // if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                        //     if(!empty($consultadeuda)){
                        //         //variables para insercion


                        //         $AdjuntarAsegur = $consultadeuda[0]->AdjuntarAsegur;

                        //         if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                        //             $deuda = $deudaconsulta;
                        //             $AdjuntarAsegur;


                        //             $idAsegura = $consultaAsegurabilidad[0]->ID;
                        //             $LugarExp = $consultaAsegurabilidad[0]->LugarExp;
                        //             $Departamento = $consultaAsegurabilidad[0]->Departamento;
                        //             $Nacionalidad = $consultaAsegurabilidad[0]->Nacionalidad;
                        //             $Peso = $consultaAsegurabilidad[0]->Peso;
                        //             $Estatura = $consultaAsegurabilidad[0]->Estatura;
                        //             $ManoDom = $consultaAsegurabilidad[0]->ManoDom;
                        //             $Enfermedades = $consultaAsegurabilidad[0]->Enfermedades;
                        //             $Pregunta2 = $consultaAsegurabilidad[0]->Pregunta2;
                        //             $Cual = $consultaAsegurabilidad[0]->Cual;
                        //             $Pregunta3 = $consultaAsegurabilidad[0]->Pregunta3;
                        //             $Pregunta4 = $consultaAsegurabilidad[0]->Pregunta4;
                        //             $ListaEnferm = $consultaAsegurabilidad[0]->ListaEnferm;
                        //             $FechaDiagn = $consultaAsegurabilidad[0]->FechaDiagn;
                        //             $Tratamiento = $consultaAsegurabilidad[0]->Tratamiento;
                        //             $Pregunta5 = $consultaAsegurabilidad[0]->Pregunta5;
                        //             $Pregunta6 = $consultaAsegurabilidad[0]->Pregunta6;
                        //             $Pregunta7 = $consultaAsegurabilidad[0]->Pregunta7;
                        //             $Pregunta8 = $consultaAsegurabilidad[0]->Pregunta8;
                        //             $Pregunta9 = $consultaAsegurabilidad[0]->Pregunta9;
                        //             $Pregunta10 = $consultaAsegurabilidad[0]->Pregunta10;
                        //             $NomAsegur = $consultaAsegurabilidad[0]->NomAsegur;

                        //         }
                        //     }
                        // }

                        //dd($deuda, $AdjuntarAsegur, 'si');

                        $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                        $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                        $ENTIDAD = $data['asociado']['ENTIDAD'];
                        $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                        $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];

                        //API S400 - GARANTIA
                        $url2 = env('URL_SERVER_API');
                        $attempts2 = 0;
                        $maxAttempts2 = 3;
                        $retryDelay2 = 500; // Milisegundos

                        do {
                            try {
                                $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                                $data2 = $response2->json();
                                break;
                            } catch (\Exception $e) {
                                $attempts2++;
                                usleep($retryDelay2 * 1000);
                            }
                        } while ($attempts2 < $maxAttempts2);

                        if ($attempts2 == $maxAttempts2) {
                            return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                        }

                        // if (isset($data2['garantia'])) {
                        //     $ValorGarantia = $data2['garantia']['GARANTIA'];
                        // } else {
                        //     return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagarÃ© <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                        // }

                        $fechadelCredito = Carbon::now('America/Bogota');
                        Carbon::setLocale('es');
                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                        $parts = explode(' ', $fechaStringCredito);
                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                        $fechaStringCredito = implode(' ', $parts);



                        $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                        // $existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);

                        $ValorGarantia = null;
                        //SCORE
                        if ($request->Capital <= 3000000) {
                            if (!empty($existeNominaDepen)) {
                                //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                                if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {

                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;



                                        //dd($consultaAsegurabilidad, $AdjuntarAsegur);

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }


                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }

                                        }
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');

                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);
                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $intervalmin = $interval->days;
                                        $intervalmax = $intervalmin + 30;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $intervalmax;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                        $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                        $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                        $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                        $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                        $NoAgencia = $request->NoAgencia;

                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }


                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }

                                        }
                                    } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;


                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                        $NoAgencia = $request->NoAgencia;
                                        //COORDINACION 1
                                        if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 1',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }


                                        }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                            $cedula = $request->Cedula_Persona;
                                            $nombrepagare = $request->NombreCompleto;
                                            $capital = $request->Capital;
                                            $idpagare = $request->ID_Pagare;
                                            $correo = $request->Correo;
                                            $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $agencia = $existingAgencia[0]->Agencia;
                                            $idpersona = $existingAgencia[0]->ID;
                                            $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                            $score = $existingScore[0]->Score;
                                            $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                            $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');

                                            $sql = DB::insert('INSERT INTO pagare (NomAsegur,edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                                $nombre,
                                                $edad,
                                                $deuda,
                                                $AdjuntarAsegur,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                $persona2->ID
                                            ]);
                                            $idpagareultimo = DB::getPdo()->lastInsertId();
                                            if(!($deudatotal >= 50000000 && $deudaconsulta == 1) && $edadconulta == null){
                                                if(!empty($consultadeuda)){
                                                    if($deudaconsulta == 1 && $AdjuntarAsegur == 1 || $deudaconsulta == 1 && $AdjuntarAsegur == 2 || $deudaconsulta == 2 && $AdjuntarAsegur == 1 || $deudaconsulta == 2 && $AdjuntarAsegur == 2){
                                                    DB::table('fasegurabilidad')->insert([
                                                        'LugarExp'      => $LugarExp,
                                                        'Departamento'  => $Departamento,
                                                        'Nacionalidad'  => $Nacionalidad,
                                                        'Peso'          => $Peso,
                                                        'Estatura'      => $Estatura,
                                                        'ManoDom'       => $ManoDom,
                                                        'Enfermedades'  => $Enfermedades,
                                                        'Pregunta2'     => $Pregunta2,
                                                        'Cual'          => $Cual,
                                                        'Pregunta3'     => $Pregunta3,
                                                        'Pregunta4'     => $Pregunta4,
                                                        'ListaEnferm'   => $ListaEnferm,
                                                        'FechaDiagn'    => $FechaDiagn,
                                                        'Tratamiento'   => $Tratamiento,
                                                        'Pregunta5'     => $Pregunta5,
                                                        'Pregunta6'     => $Pregunta6,
                                                        'Pregunta7'     => $Pregunta7,
                                                        'Pregunta8'     => $Pregunta8,
                                                        'Pregunta9'     => $Pregunta9,
                                                        'Pregunta10'    => $Pregunta10,
                                                        'ID_Pagare'     => $idpagareultimo,
                                                    ]);
                                                    }
                                                }
                                            }

                                        }
                                    }


                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = $request->Cedula_Persona;
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobadoporScore', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);

                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE <strong>APROBADO</strong> PUESTO A QUE SOLICITÃ <strong>$3'000.000</strong> Y NO REQUIERE CONSULTA!</span>";
                                    return back()->with("correcto", $message);
                                }
                            }
                        } else {
                            //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                            if (!empty($existeNominaDepen)) {

                                //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                                if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                                    $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {

                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);
                                        $diaReporte = max(1, $existeDia[0]->DIAS);

                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
                                        $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                        // Comparar si son iguales
                                        //resultado
                                        $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                        // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                        // Implementar la lÃ³gica de la fÃ³rmula de Excel
                                        $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                        // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
                                        $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 30; // DIAS(E15;B14)<=30

                                        // Comprobar si todas las condiciones relevantes son verdaderas
                                        $resultado1 = $condicion1 && $condicion3 ? true : false;




                                        // Primera condiciÃ³n externa
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado2 = false;
                                        } else {
                                            // CondiciÃ³n interna
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                            $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                            $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                            if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                $resultado2 = true;
                                            } else {
                                                $resultado2 = false;
                                            }
                                        }


                                        // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
                                        $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                        // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 30 dÃ­as o menos
                                        $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 30;

                                        // Resultado basado en las condiciones
                                        $resultado3 = ($condicion3 || $condicion4) ? false : true;


                                        // Calcular el Ãºltimo dÃ­a del mes de B14
                                        $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes anterior a E15
                                        $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                        // Verificar las condiciones
                                        $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                        $condicion6 = $fechaReporte->gte($fechadelCredito);
                                        $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                        // Evaluar si todas las condiciones son verdaderas
                                        $resultado4 = $condicion5 && $condicion6 && $condicion7 ? false : true;


                                        // Primer nivel de comprobaciÃ³n
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado5 = false;
                                        } else {
                                            // Segundo nivel de comprobaciÃ³n
                                            $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
                                            $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

                                            $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                            $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                            $resultado5 = $condicionA && $condicionB ? false : true;
                                        }

                                        $formateada = $fechaReporte->format('d/m/Y');

                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }



                                        //dd($resultado, $resultado1, $resultado2,$resultado3,$resultado4,$resultado5);
                                        if ((($resultado == false && $resultado1 == false && $resultado2 == false) && ($resultado3 == false && $resultado4 == false && $resultado5 == true))) {

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";


                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                        return back()->with("incorrecto", $message);
                                        }else{

                                            //INTERES PROPORCIONAL
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                            $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                            $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";


                                            return back()->with("incorrecto", $message);
                                        }
                                    }
                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                        dd('hola');
                                        $anioCompleto = 2000 + (int)$anio3;
                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);

                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                        $formateada = $fechaReporte->format('d/m/Y');
                                        $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                        // FÃ³rmula 1
                                        $resultado1 = (
                                            $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                            (
                                                $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                                $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                                $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                            )
                                        );


                                        // FÃ³rmula 2
                                        $resultado2 = (
                                            Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                            $fechaReporte->gte($fechadelCredito) &&
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30
                                        ) ?  false : true;

                                        // FÃ³rmula 3
                                        $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                            (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30) ? false : true
                                        );

                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }
                                        if ($resultado1 == false && $resultado2 == false && $resultado3 == false) {

                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                        return back()->with("incorrecto", $message);
                                        }else{
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);
                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $intervalmin = $interval->days;
                                            $intervalmax = $intervalmin + 30;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $intervalmax;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                            $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                            $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                            $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                            $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                            $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                            $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";


                                            return back()->with("incorrecto", $message);

                                        }
                                    }

                                    if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {

                                        $fechadelCredito = Carbon::now('America/Bogota');
                                        Carbon::setLocale('es');
                                        $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                        $parts = explode(' ', $fechaStringCredito);
                                        $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                        $fechaStringCredito = implode(' ', $parts);
                                        $diaReporte = max(1, $existeDia[0]->DIAS);
                                        $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                        if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                            $fechaReporteActual->addMonth();
                                        }

                                        $fechaReporte = $fechaReporteActual;


                                        Carbon::setLocale('es');
                                        $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                        // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                        $codigoAnio = substr($Cuota1, 0, 1);
                                        $anio = substr($Cuota1, 1, 2);
                                        $mes = substr($Cuota1, 3, 2);
                                        $dia = substr($Cuota1, 5, 2);

                                        $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                        Carbon::setLocale('es');
                                        $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                        $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                        $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



                                        $finalMesFechaCarbon2 = $fechaCarbon2->copy()->endOfMonth();
                                        $finalMesFormateadaMesSiguiente = $fechaReporte->copy()->addMonth()->endOfMonth();
                                        $finalMesFechaCreditoDosMeses = $fechadelCredito->copy()->addMonths(2)->endOfMonth();
                                        $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                        $diferenciaDias = $fechaReporte->diffInDays($fechadelCredito);


                                        $result = $fechadelCredito > $fechaReporte;


                                        $result1 = $fechaReporte->lt($fechadelCredito) &&
                                            ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                                $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                        if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                                            $result2 = false;
                                        } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                                            $result2 = true;
                                        } else {
                                            $result2 = false;
                                        }


                                        //CUARTO CONDICIONAL
                                        $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                        //QUINTO
                                        $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                        //SEXTO
                                        $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                        $formateada = $fechaReporte->format('d/m/Y');



                                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                            $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                            Carbon::setLocale('es');
                                            $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                        }


                                        if (($result == false && $result1 == false && $result2 == false) || ($resultado3 == false && $resultado4 == false && $resultado5 == false)) {
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;
                                        $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                        return back()->with("incorrecto", $message);
                                        }else {
                                            //INTERES PROPORCIONAL
                                            $fechaHoraActual = Carbon::now('America/Bogota');
                                            $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                            $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                            $tasa = $request->Tasa;
                                            $capital = $request->Capital;

                                            $tasa = str_replace(',', '.', $tasa);
                                            $tasa = floatval($tasa);

                                            $tasa = $tasa / 100;

                                            $capital = floatval($request->Capital);

                                            $interval = $fechaHoraActual->diff($endOfMonth);
                                            $c30 = $interval->days;

                                            $cuotaMensual = $capital * $tasa;
                                            $cuotaDiaria = $cuotaMensual / 30;
                                            $interesProporcional = $cuotaDiaria * $c30;

                                            $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                            $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }

                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $agencia = $existingAgencia[0]->Agencia;
                                        $idpersona = $existingAgencia[0]->ID;
                                        $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                                        $score = $existingScore[0]->Score;
                                        $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                                        $fechaconsulta = $existingfecha[0]->FechaInsercion;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (edad, deuda, AdjuntarAsegur,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?)', [
                                            $edad,
                                            $deuda,
                                            $AdjuntarAsegur,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            $persona2->ID
                                        ]);
                                        $idpagareultimo = DB::getPdo()->lastInsertId();
                                        if(!empty($consultadeuda)){
                                            DB::table('fasegurabilidad')->insert([
                                                'LugarExp'      => $LugarExp,
                                                'Departamento'  => $Departamento,
                                                'Nacionalidad'  => $Nacionalidad,
                                                'Peso'          => $Peso,
                                                'Estatura'      => $Estatura,
                                                'ManoDom'       => $ManoDom,
                                                'Enfermedades'  => $Enfermedades,
                                                'Pregunta2'     => $Pregunta2,
                                                'Cual'          => $Cual,
                                                'Pregunta3'     => $Pregunta3,
                                                'Pregunta4'     => $Pregunta4,
                                                'ListaEnferm'   => $ListaEnferm,
                                                'FechaDiagn'    => $FechaDiagn,
                                                'Tratamiento'   => $Tratamiento,
                                                'Pregunta5'     => $Pregunta5,
                                                'Pregunta6'     => $Pregunta6,
                                                'Pregunta7'     => $Pregunta7,
                                                'Pregunta8'     => $Pregunta8,
                                                'Pregunta9'     => $Pregunta9,
                                                'Pregunta10'    => $Pregunta10,
                                                'NomAsegur'     => $NomAsegur,
                                                'ID_Pagare'     => $idpagareultimo,
                                            ]);
                                        }
                                    }
                                            $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE RECHAZADO por <strong>SCORE</strong> bajo (<strong>" . $persona3->Score . "</strong>)!</span>";


                                            return back()->with("incorrecto", $message);

                                        }
                                    }


                                    $usuarioActual = Auth::user();
                                    $nombre = $usuarioActual->name;
                                    $rol = $usuarioActual->rol;
                                    $cedulaagregada = $request->Cedula_Persona;
                                    date_default_timezone_set('America/Bogota');
                                    $ip = $_SERVER['REMOTE_ADDR'];
                                    $fechaHoraActual = date('Y-m-d H:i:s');
                                    $agencia = $usuarioActual->agenciau;
                                    $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazadoporScore', ?, ?, ?, ?)", [
                                        null,
                                        $nombre,
                                        $rol,
                                        $agencia,
                                        $fechaHoraActual,
                                        $cedulaagregada,
                                        null,
                                        $ip
                                    ]);

                                }
                            }
                        }
                    }
                } else {
                    return back()->with("incorrecto2", "Persona con cc. $request->Cedula_Persona NO se registrÃ³! Error al Registrar!");
                }
                //LISTO DE AQUI PARA ATRAS
            } else {
                if ($request->Capital <= 3000000) {
                    $Cuota1 = $request->Fecha1Cuota;
                    $CuotaFinal = $request->FechaUltimaCuota;
                    $fechaCredito = $request->FechaCredito;

                    $codigoAnio = substr($Cuota1, 0, 1);
                    $anio = substr($Cuota1, 1, 2);
                    $mes = substr($Cuota1, 3, 2);
                    $dia = substr($Cuota1, 5, 2);


                    $codigoAnio2 = substr($CuotaFinal, 0, 1);
                    $anio2 = substr($CuotaFinal, 1, 2);
                    $mes2 = substr($CuotaFinal, 3, 2);
                    $dia2 = substr($CuotaFinal, 5, 2);


                    $codigoAnio3 = substr($fechaCredito, 0, 1);
                    $anio3 = substr($fechaCredito, 1, 2);
                    $mes3 = substr($fechaCredito, 3, 2);
                    $dia3 = substr($fechaCredito, 5, 2);


                    $anioReal = 2000 + (int)$anio;

                    $anioReal2 = 2000 + (int)$anio2;

                    $anioReal3 = 2000 + (int)$anio3;

                    $meses = [
                        '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
                        '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
                        '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
                        '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
                    ];
                    $nombreMes = $meses[$mes];

                    $nombreMes2 = $meses[$mes2];

                    $nombreMes3 = $meses[$mes3];

                    $fechaFormateada = $nombreMes . " " . (int)$dia . " del " . $anioReal;

                    $fechaFormateada2 = $nombreMes2 . " " . (int)$dia2 . " del " . $anioReal2;

                    $fechaFormateada3 = $nombreMes3 . " " . (int)$dia3 . " del " . $anioReal3;

                    $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
                    $lineacredito = $credito[0]->Credito;

                    //API S400 - PERSONA
                    $url = env('URL_SERVER_API');
                    $attempts = 0;
                    $maxAttempts = 3;
                    $retryDelay = 500; // Milisegundos

                    do {
                        try {
                            $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                            $data = $response->json();
                            $response2 = Http::get($url . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                            $data2 = $response2->json();
                            break;
                        } catch (\Exception $e) {
                            $attempts++;
                            usleep($retryDelay * 1000);
                        }
                    } while ($attempts < $maxAttempts);

                    if ($attempts == $maxAttempts) {
                        return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                    }

                    $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
                    $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
                    $ENTIDAD = $data['asociado']['ENTIDAD'];
                    $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
                    $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


                    //API S400 - GARANTIA
                    $url2 = env('URL_SERVER_API');
                    $attempts2 = 0;
                    $maxAttempts2 = 3;
                    $retryDelay2 = 500; // Milisegundos

                    do {
                        try {
                            $response2 = Http::get($url2 . 'garantia/' . $request->ID_Pagare . '/' . $request->CuentaCoop);
                            $data2 = $response2->json();
                            break;
                        } catch (\Exception $e) {
                            $attempts2++;
                            usleep($retryDelay2 * 1000);
                        }
                    } while ($attempts2 < $maxAttempts2);

                    if ($attempts2 == $maxAttempts2) {
                        return back()->with("incorrecto", "Reintentar, hay fallos en la red");
                    }

                    // if (isset($data2['garantia'])) {
                    //     $ValorGarantia = $data2['garantia']['GARANTIA'];
                    // } else {
                    //     return back()->with("incorrecto3", "<span style='font-size: 25px'>No existe el pagarÃ© <strong>" . $request->ID_Pagare . "</strong> vinculado a la cuenta <strong>" . $request->CuentaCoop . "</strong> en la <strong>s400</strong>!</span>");
                    // }


                    $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                    //$existeGarantia = DB::select('SELECT TipoGarantia FROM garantia WHERE ValorGarantia = ?', [$ValorGarantia]);
                    $ValorGarantia = null;
                    //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                    if (!empty($existeNominaDepen)) {
                        //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                        if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareAprobado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);

                            $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                            // FECHA REPORTE POR MES ACTUAL
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                $anioCompleto = 2000 + (int)$anio3;
                                if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                }
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                    // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



                                        // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
                                        $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
                                        $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                        // Comparar si son iguales
                                        //resultado
                                        $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                        // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
                                        $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                        // Implementar la lÃ³gica de la fÃ³rmula de Excel
                                        $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                        // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
                                        $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 30; // DIAS(E15;B14)<=30

                                        // Comprobar si todas las condiciones relevantes son verdaderas
                                        $resultado1 = $condicion1 && $condicion3 ? true : false;




                                        // Primera condiciÃ³n externa
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado2 = false;
                                        } else {
                                            // CondiciÃ³n interna
                                            $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                            $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                            $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                            if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                                $resultado2 = true;
                                            } else {
                                                $resultado2 = false;
                                            }
                                        }


                                        // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
                                        $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                        // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 30 dÃ­as o menos
                                        $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 30;

                                        // Resultado basado en las condiciones
                                        $resultado3 = ($condicion3 || $condicion4) ? false : true;


                                        // Calcular el Ãºltimo dÃ­a del mes de B14
                                        $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                        // Calcular el Ãºltimo dÃ­a del mes anterior a E15
                                        $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                        // Verificar las condiciones
                                        $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                        $condicion6 = $fechaReporte->gte($fechadelCredito);
                                        $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                        // Evaluar si todas las condiciones son verdaderas
                                        $resultado4 = $condicion5 && $condicion6 && $condicion7 ? false : true;


                                        // Primer nivel de comprobaciÃ³n
                                        if ($fechadelCredito->gt($fechaReporte)) {
                                            $resultado5 = false;
                                        } else {
                                            // Segundo nivel de comprobaciÃ³n
                                            $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
                                            $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

                                            $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                            $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                            $resultado5 = $condicionA && $condicionB ? false : true;
                                        }

                                    $formateada = $fechaReporte->format('d/m/Y');



                                    if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
                                        //INTERES PROPORCIONAL
                                        $fechaHoraActual = Carbon::now('America/Bogota');
                                        $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                        $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                        $tasa = $request->Tasa;
                                        $capital = $request->Capital;

                                        $tasa = str_replace(',', '.', $tasa);
                                        $tasa = floatval($tasa);

                                        $tasa = $tasa / 100;

                                        $capital = floatval($request->Capital);

                                        $interval = $fechaHoraActual->diff($endOfMonth);
                                        $c30 = $interval->days;

                                        $cuotaMensual = $capital * $tasa;
                                        $cuotaDiaria = $cuotaMensual / 30;
                                        $interesProporcional = $cuotaDiaria * $c30;

                                        $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                        $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {

                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 1',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                        //COORDINACION 2
                                        else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 2',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 3
                                        else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte2,
                                                1,
                                                'Coordinacion 3',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 4
                                        else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 4',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }
                                        //COORDINACION 5
                                        else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {

                                            $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                            date_default_timezone_set('America/Bogota');
                                            $fechaHoraActual = date('Y-m-d H:i:s');
                                            $NOagencia = $request->NoAgencia;
                                            $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                            $agencia = $existeAgencia[0]->NameAgencia;

                                            $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                                $fechaReporte,
                                                1,
                                                'Coordinacion 5',
                                                0,
                                                $interesProporcional,
                                                $fechaStringCredito,
                                                $ValorGarantia,
                                                $request->NoAgencia,
                                                $agencia,
                                                $request->CuentaCoop,
                                                $request->Cedula_Persona,
                                                $request->NombreCompleto,
                                                $request->ID_Pagare,
                                                $request->Linea_Credito,
                                                $lineacredito,
                                                $request->Capital,
                                                $request->NoCuotas,
                                                $request->ValorCuota,
                                                $request->Tasa,
                                                $fechaFormateada3,
                                                $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                                $request->Direccion,
                                                $request->TelFijo,
                                                $fechaFormateada,
                                                $fechaFormateada2,
                                                $request->Celular,
                                                $request->Correo,
                                                $request->GeneradorPagare,
                                                7323
                                            ]);
                                        }

                                        $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                        return back()->with("correcto", $message);
                                    }
                                }
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $anioCompleto = 2000 + (int)$anio3;
                                if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                }

                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                    // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                    $formateada = $fechaReporte->format('d/m/Y');
                                    $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                    // FÃ³rmula 1
                                    $resultado1 = (
                                        $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                        (
                                            $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                            $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                            $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                        )
                                    );
                                    // FÃ³rmula 2
                                    $resultado2 = (
                                        Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                        $fechaReporte->gte($fechadelCredito) &&
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30
                                    ) ?  false : true;

                                    // FÃ³rmula 3
                                    $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                        (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30) ? false : true
                                    );
                                }
                            }

                            if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {

                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                // Formatear los nÃºmeros para eliminar decimales no deseados
                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');

                                $NoAgencia = $request->NoAgencia;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $ValorGarantia,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $fechaFormateada3,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323
                                    ]);
                                }

                                $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {

                                $anioCompleto = 2000 + (int)$anio3;
                                if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                    return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                                }
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);
                                if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                    $diaReporte = max(1, $existeDia[0]->DIAS);
                                    $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                    if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                        $fechaReporteActual->addMonth();
                                    }

                                    $fechaReporte = $fechaReporteActual;


                                    Carbon::setLocale('es');
                                    $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                    // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                    $codigoAnio = substr($Cuota1, 0, 1);
                                    $anio = substr($Cuota1, 1, 2);
                                    $mes = substr($Cuota1, 3, 2);
                                    $dia = substr($Cuota1, 5, 2);

                                    $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                    Carbon::setLocale('es');
                                    $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                    $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                    $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



                                    $finalMesFechaCarbon2 = $fechaCarbon2->copy()->endOfMonth();
                                    $finalMesFormateadaMesSiguiente = $fechaReporte->copy()->addMonth()->endOfMonth();
                                    $finalMesFechaCreditoDosMeses = $fechadelCredito->copy()->addMonths(2)->endOfMonth();
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    $diferenciaDias = $fechaReporte->diffInDays($fechadelCredito);


                                    $result = $fechadelCredito > $fechaReporte;


                                    $result1 = $fechaReporte->lt($fechadelCredito) &&
                                        ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                            $fechaReporte->diffInDays($fechadelCredito) <= 30);



                                    if ($fechaReporte->greaterThan($fecha1eraCuota)) {
                                        $result2 = false;
                                    } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
                                        $result2 = true;
                                    } else {
                                        $result2 = false;
                                    }

                                    //CUARTO CONDICIONAL
                                    $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                    //QUINTO
                                    $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                    //SEXTO
                                    $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                    $formateada = $fechaReporte->format('d/m/Y');
                                }





                                if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {

                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 1',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 2',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            1,
                                            'Coordinacion 3',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            1,
                                            'Coordinacion 4',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            1,
                                            'Coordinacion 5',
                                            0,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }

                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                    return back()->with("correcto", $message);
                                }
                            } else {
                                //RECHAZO

                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);


                                $anioCompleto = 2000 + (int)$anio3;
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                $message = "";

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }


                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);
                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $intervalmin = $interval->days;
                                    $intervalmax = $intervalmin + 30;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $intervalmax;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                    $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                    $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                    $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                    $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 4',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, Garantia, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $ValorGarantia,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $fechaFormateada3,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323
                                        ]);
                                    }

                                    $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                }


                                if (empty($message)) {
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                                }

                                return back()->with("incorrecto", $message);
                            }
                        }
                    }
                } else {
                    return back()->with("incorrecto2", "Persona con cc. $request->Cedula_Persona NO existe en la Base de datos de DatacrÃ©dito(Debe registrarse al asociado porque el crÃ©dito es mayor a $3'000.000)");
                }
            }
        }
    }

    // public function iniciarSesion()
    // {
    //     $url = env('URL_SERVER_API');
    //     $email = 'santicashe0920@gmail.com';
    //     $password = '31243217jhin';

    //     $response = Http::post($url . 'login', [
    //         'email' => $email,
    //         'password' => $password,
    //     ]);
    //     dd($response->json());

    //     return $response->json()['access_token'];
    // }


    // public function FechaReporte(Request $request)
    // {
    //     $url = env('URL_SERVER_API');
    //     $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
    //     $fechaCredito = $request->fechaCredito;
    //     $Cuota1 = $request->fecha1eraCuota;

    //     if ($response->successful()) {
    //         $data = $response->json();
    //         $existeNominaDepen = DB::select('SELECT NOMBRENOMINA, CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD, FECHAREPORTE, CODDEPENDENCIA FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$data['asociado']['CODIGONOMINA'], $data['asociado']['#DEPENDENCIA'], $data['asociado']['ENTIDAD']]);
    //         $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
    //         $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
    //         $ENTIDAD = $data['asociado']['ENTIDAD'];
    //         $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
    //         $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];


    //         $codigoAnio3 = substr($fechaCredito, 0, 1);
    //         $anio3 = substr($fechaCredito, 1, 2);
    //         $mes3 = substr($fechaCredito, 3, 2);
    //         $dia3 = substr($fechaCredito, 5, 2);
    //         $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
    //         // FECHA REPORTE POR MES ACTUAL

    //         if ($existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
    //             $anioCompleto = 2000 + (int)$anio3;
    //             if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
    //                 return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
    //             }
    //             $fechadelCredito = Carbon::now('America/Bogota');
    //             Carbon::setLocale('es');
    //             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
    //             $parts = explode(' ', $fechaStringCredito);
    //             $parts[0] = ucfirst(mb_strtolower($parts[0]));
    //             $fechaStringCredito = implode(' ', $parts);

    //             if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
    //                 $diaReporte = max(1, $existeDia[0]->DIAS);
    //                 $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                 $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                 Carbon::setLocale('es');
    //                 $fechaStringFechaReporteAjax = $fechaReporte->translatedFormat('F d Y');

    //                 // ExtracciÃ³n y manejo de la fecha de la primera cuota
    //                 $codigoAnio = substr($Cuota1, 0, 1);
    //                 $anio = substr($Cuota1, 1, 2);
    //                 $mes = substr($Cuota1, 3, 2);
    //                 $dia = substr($Cuota1, 5, 2);

    //                 $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                 Carbon::setLocale('es');
    //                 $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
    //                 $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                 $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);


    //                 // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                 $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                 // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                 $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                 // Comparar si son iguales
    //                 //resultado
    //                 $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



    //                 // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                 $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                 // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                 $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                 // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                 $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 30; // DIAS(E15;B14)<=30

    //                 // Comprobar si todas las condiciones relevantes son verdaderas
    //                 $resultado1 = $condicion1 && $condicion3 ? true : false;




    //                 // Primera condiciÃ³n externa
    //                 if ($fechadelCredito->gt($fechaReporte)) {
    //                     $resultado2 = false;
    //                 } else {
    //                     // CondiciÃ³n interna
    //                     $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                     $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                     $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                     if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                         $resultado2 = true;
    //                     } else {
    //                         $resultado2 = false;
    //                     }
    //                 }


    //                 // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                 $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                 // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 30 dÃ­as o menos
    //                 $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 30;

    //                 // Resultado basado en las condiciones
    //                 $resultado3 = ($condicion3 || $condicion4) ? false : true;


    //                 // Calcular el Ãºltimo dÃ­a del mes de B14
    //                 $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                 // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                 $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                 // Verificar las condiciones
    //                 $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                 $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                 $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 30;

    //                 // Evaluar si todas las condiciones son verdaderas
    //                 $resultado4 = $condicion5 && $condicion6 && $condicion7 ? false : true;


    //                 // Primer nivel de comprobaciÃ³n
    //                 if ($fechadelCredito->gt($fechaReporte)) {
    //                     $resultado5 = false;
    //                 } else {
    //                     // Segundo nivel de comprobaciÃ³n
    //                     $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                     $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                     $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                     $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 30;

    //                     $resultado5 = $condicionA && $condicionB ? false : true;
    //                 }

    //                 $formateada = $fechaReporte->format('d/m/Y');
    //             }
    //             if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                 $fechaValidar = 'verdadero';
    //             } else {
    //                 $fechaValidar = 'falso';
    //             }
    //         } else if ($existeDia[0]->ENTREMES == 1) {
    //             $anioCompleto = 2000 + (int)$anio3;
    //             if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
    //                 return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
    //             }
    //             $fechadelCredito = Carbon::now('America/Bogota');
    //             Carbon::setLocale('es');
    //             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
    //             $parts = explode(' ', $fechaStringCredito);
    //             $parts[0] = ucfirst(mb_strtolower($parts[0]));
    //             $fechaStringCredito = implode(' ', $parts);
    //             if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
    //                 $diaReporte = max(1, $existeDia[0]->DIAS);
    //                 $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                 if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                     $fechaReporteActual->addMonth();
    //                 }

    //                 $fechaReporte = $fechaReporteActual;


    //                 Carbon::setLocale('es');
    //                 $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
    //                 // ExtracciÃ³n y manejo de la fecha de la primera cuota
    //                 $codigoAnio = substr($Cuota1, 0, 1);
    //                 $anio = substr($Cuota1, 1, 2);
    //                 $mes = substr($Cuota1, 3, 2);
    //                 $dia = substr($Cuota1, 5, 2);

    //                 $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                 Carbon::setLocale('es');
    //                 $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
    //                 $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                 $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



    //                 $finalMesFechaCarbon2 = $fechaCarbon2->copy()->endOfMonth();
    //                 $finalMesFormateadaMesSiguiente = $fechaReporte->copy()->addMonth()->endOfMonth();
    //                 $finalMesFechaCreditoDosMeses = $fechadelCredito->copy()->addMonths(2)->endOfMonth();
    //                 $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                 $diferenciaDias = $fechaReporte->diffInDays($fechadelCredito);


    //                 $result = $fechadelCredito > $fechaReporte;


    //                 $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                     ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                         $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                 if ($fechaReporte->greaterThan($fecha1eraCuota)) {
    //                     $result2 = false;
    //                 } elseif ($fechaReporte->diffInMonths($fecha1eraCuota) == 2 && $fechaReporte->diffInDays($fechadelCredito) <= 30) {
    //                     $result2 = true;
    //                 } else {
    //                     $result2 = false;
    //                 }


    //                 //CUARTO CONDICIONAL
    //                 $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                 //QUINTO
    //                 $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                 //SEXTO
    //                 $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                 $formateada = $fechaReporte->format('d/m/Y');
    //             }

    //             if (($resultado == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                 $fechaValidar = 'verdadero';
    //             } else {
    //                 $fechaValidar = 'falso';
    //             }
    //         } else if ($existeDia[0]->MESANTERIOR == 1 && $existeDia[0]->ENTREMES == 0) {
    //             $anioCompleto = 2000 + (int)$anio3;
    //             if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
    //                 return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
    //             }

    //             $fechadelCredito = Carbon::now('America/Bogota');
    //             Carbon::setLocale('es');
    //             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
    //             $parts = explode(' ', $fechaStringCredito);
    //             $parts[0] = ucfirst(mb_strtolower($parts[0]));
    //             $fechaStringCredito = implode(' ', $parts);

    //             if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
    //                 $diaReporte = max(1, $existeDia[0]->DIAS);
    //                 $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                 $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                 Carbon::setLocale('es');
    //                 $fechaStringFechaReporteAjax = $fechaReporte->translatedFormat('F d Y');
    //                 $formateada = $fechaReporte->format('d/m/Y');
    //                 // ExtracciÃ³n y manejo de la fecha de la primera cuota
    //                 $codigoAnio = substr($Cuota1, 0, 1);
    //                 $anio = substr($Cuota1, 1, 2);
    //                 $mes = substr($Cuota1, 3, 2);
    //                 $dia = substr($Cuota1, 5, 2);

    //                 $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                 Carbon::setLocale('es');
    //                 $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
    //                 $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                 $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                 $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);


    //                 // FÃ³rmula 1
    //                 $resultado1 = (
    //                     $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                     (
    //                         $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                         $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                         $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                     )
    //                 );

    //                 // FÃ³rmula 2
    //                 $resultado2 = (
    //                     Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                     $fechaReporte->gte($fechadelCredito) &&
    //                     $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                 ) ?  false : true;

    //                 // FÃ³rmula 3
    //                 $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                     (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                         $fechaReporte->diffInDays($fechadelCredito) <= 30) ? false : true
    //                 );
    //             }
    //             if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {
    //                 $fechaValidar = 'verdadero';
    //             } else {
    //                 $fechaValidar = 'falso';
    //             }
    //         }



    //         if (!empty($existeNominaDepen)) {
    //             $response_data = array_map(function ($item) {
    //                 return [
    //                     'FECHAREPORTE' => $item->FECHAREPORTE,
    //                     'NOMBRENOMINA' => $item->NOMBRENOMINA,
    //                     'NOMDEPENDENCIA' => $item->NOMDEPENDENCIA,
    //                     'CODDEPENDENCIA' => $item->CODDEPENDENCIA,
    //                 ];
    //             }, $existeNominaDepen);
    //             return response()->json(['existeNominaDepen' => $response_data, 'fechaCredito' => $fechaCredito, 'fecha1eraCuota' => $fecha1eraCuota, 'fechaValidar' => $fechaValidar, 'fechaStringFechaReporteAjax' => $fechaStringFechaReporteAjax]);
    //         } else {
    //             return response()->json(['message' => 'No data found'], 404);
    //         }
    //     }



    //     return response()->json(['message' => 'Error processing request'], 500);
    // }



    public function deleteaprobado($id)
    {


        $sql = DB::select("SELECT * FROM pagare WHERE ID = $id");
        DB::table('eliminadospagare')->insert((array) $sql[0]);


        if ($sql) {
            $delete = DB::delete("DELETE FROM pagare WHERE ID = $id");
            return back()->with("correcto2", "Â¡Persona Eliminada Correctamente!");
        } else {
            return back()->with("incorrecto", "Â¡Error al eliminar registro!");
        }
    }

    public function updateaprobado($id)
    {

        $existingNoAgencia = DB::select('SELECT CorreoEnviado, NoAgencia, Aprobado, ID_Persona FROM pagare WHERE ID = ?', [$id]);
        $NoAgencia = $existingNoAgencia[0]->NoAgencia;
        $aprobado = $existingNoAgencia[0]->CorreoEnviado;
        $personaSinScore = $existingNoAgencia[0]->ID_Persona;

        if ($personaSinScore != 7323) {

            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }




                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);


                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }


                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {


                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);

                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo16($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            } else if ($aprobado == 1) {
                return back()->with("incorrecto", "Â¡El asociado ya esta aprobado!");
            } else {
                return back()->with("incorrecto", "Â¡Error al cambiar de estado!");
            }
        } else {

            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;

                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);


                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;

                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;

                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');

                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;

                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;

                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo19($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            } else if ($aprobado == 1) {
                return back()->with("incorrecto", "Â¡El asociado ya esta aprobado!");
            } else {
                return back()->with("incorrecto", "Â¡Error al cambiar de estado!");
            }
        }
    }
    public function updatearechazado($id)
    {

        $existingNoAgencia = DB::select('SELECT CorreoEnviado, NoAgencia, Aprobado, ID_Persona FROM pagare WHERE ID = ?', [$id]);
        $NoAgencia = $existingNoAgencia[0]->NoAgencia;
        $aprobado = $existingNoAgencia[0]->CorreoEnviado;
        $personaSinScore = $existingNoAgencia[0]->ID_Persona;

        if ($personaSinScore != 7323) {

            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }



                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT NoAgencia, Ordinario, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $noAgencia = $existingPerson[0]->NoAgencia;
                $existingAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$noAgencia]);
                $agencia = $existingAgencia[0]->NameAgencia;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    }
                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                    Mail::to($correo)->send(new EnviarCorreo17($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia, $score, $fechaconsulta));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            } else if ($aprobado == 1) {
                return back()->with("incorrecto", "Â¡El asociado ya esta aprobado!");
            } else {
                return back()->with("incorrecto", "Â¡Error al cambiar de estado!");
            }
        } else {
            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT Ordinario, NoAgencia, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $NOagencia = $existingPerson[0]->NoAgencia;
                $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                $agencia = $existeAgencia[0]->NameAgencia;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                $idposicionpagare = $id;


                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }




                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);


                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT Ordinario, NoAgencia, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $NOagencia = $existingPerson[0]->NoAgencia;
                $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                $agencia = $existeAgencia[0]->NameAgencia;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');
                $idposicionpagare = $id;

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT Ordinario, NoAgencia, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $NOagencia = $existingPerson[0]->NoAgencia;
                $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                $agencia = $existeAgencia[0]->NameAgencia;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');
                $idposicionpagare = $id;

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }

                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                $existingPerson = DB::select('SELECT Ordinario, NoAgencia, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $NOagencia = $existingPerson[0]->NoAgencia;
                $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                $agencia = $existeAgencia[0]->NameAgencia;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');
                $idposicionpagare = $id;

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT Ordinario, NoAgencia, Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $idposicionpagare = $existingPerson[0]->ID;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $NOagencia = $existingPerson[0]->NoAgencia;
                $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                $agencia = $existeAgencia[0]->NameAgencia;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');
                $idposicionpagare = $id;

                $ordinario = $existingPerson[0]->Ordinario;

                if ($ordinario == 1) {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                } else {
                    foreach ($usuarios as $email) {
                        Mail::to($email)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    $usuarios2 = DB::table('users')->where('agenciau', $agencia)->pluck('email');
                    foreach ($usuarios2 as $email2) {
                        Mail::to($email2)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    }

                    Mail::to('1132-AUX@coopserp.com')->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                    Mail::to($correo)->send(new EnviarCorreo18($cedula, $idpagare, $capital, $idposicionpagare, $nombrepagare, $agencia));
                }
                $sql = DB::update("UPDATE pagare SET CorreoEnviado = ? WHERE ID = $id", [
                    1
                ]);
                return back()->with("correcto", "Â¡Se enviÃ³ correctamente el correo electrÃ³nico al director de agencia, coordinador correspondiente y al asociado!");
            } else if ($aprobado == 1) {
                return back()->with("incorrecto", "Â¡El asociado ya esta aprobado!");
            } else {
                return back()->with("incorrecto", "Â¡Error al cambiar de estado!");
            }
        }
    }

    public function generarpdf(Request $request)
    {
        $fpdf = new Fpdf('P', 'cm', 'A4');
        $fpdf = new Fpdf('P', 'cm', 'A4');
        $fpdf->AddPage("P");

        Carbon::setLocale('es');
        $fecha_actual = Carbon::now('America/Bogota');
        $fecha_formateada = $fecha_actual->isoFormat('dddd, D [de] MMMM [de] YYYY , [Hora de GeneraciÃ³n] - H:mm:ss');
        $fecha_formateada = preg_replace_callback('/\b(\p{L}+)\b/u', function ($matches) {
            return ucfirst($matches[0]);
        }, $fecha_formateada);

        $linea_credito = $request->lineacredito;
        $aÃ±o = $request->year;
        $mes = $request->month;
        $fpdf->SetFont('Arial', 'B', 18);
        $fpdf->Cell(0, 0, utf8_decode('REPORTE POR AGENCIAS - PAGARÃ'), 0, 0, 'C');
        $fpdf->Ln();
        $fpdf->Cell(0, 1.2, utf8_decode($fecha_formateada), 0, 0, 'C');
        $fpdf->Ln();
        $fpdf->Cell(0, 1, utf8_decode('LINEA DE CRÃDITO: ' . $linea_credito . '. FILTRO: ' . $aÃ±o . ' - ' . $mes), 0, 0, 'C');
        $fpdf->Ln();



        $sql = DB::select("SELECT FechaAccion FROM pagare");


        $fpdf->SetFont('Helvetica', 'B', 17);
        $headers = ['Agencia', 'A', '$$ Aprobado', 'R', '$$ Rechazado'];
        foreach ($headers as $header) {
            if ($header === 'Agencia') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(6, 1, utf8_decode($header), 'T', 0, 'L');
            } else if ($header === 'A') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(2, 1, utf8_decode($header), 'T', 0, 'L');
            } elseif ($header === '$$ Aprobado') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(4.5, 1, $header, 'T', 0, 'L');
            } elseif ($header === 'R') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(2, 1, utf8_decode($header), 'T', 0, 'L');
            } elseif ($header === '$$ Rechazado') {
                $fpdf->SetFont('Helvetica', 'B', 16);
                $fpdf->Cell(4, 1, utf8_decode($header), 'T', 0, 'L');
            }
        }
        $fpdf->Ln();
        $totalApproved = 0;
        $totalRejected = 0;
        $totalCapitalApproved = 0;
        $totalCapitalRejected = 0;
        $agenciaColumnaMapping = [
            'BogotÃ¡ Elemento' => 13,
            'CaliBC' => 30,
            'Cali' => 31,
            'Palmira' => 32,
            'Buga' => 34,
            'Buenaventura' => 33,
            'TuluÃ¡' => 35,
            'Sevilla' => 36,
            'La UniÃ³n' => 37,
            'Roldanillo' => 38,
            'Cartago' => 39,
            'Zarzal' => 40,
            'Caicedonia' => 41,
            'S Quilichao' => 42,
            'Yumbo' => 43,
            'JamundÃ­' => 44,
            'Pasto' => 45,
            'PopayÃ¡n' => 46,
            'Ipiales' => 47,
            'Leticia' => 48,
            'Puerto Asis' => 49,
            'Soacha' => 68,
            'Manizales' => 70,
            'ZipaquirÃ¡' => 73,
            'FacatativÃ¡' => 75,
            'Pereira' => 74,
            'Girardot' => 76,
            'San AndrÃ©s' => 77,
            'Armenia' => 78,
            'MedellÃ­n' => 80,
            'Monteria' => 81,
            'Sincelejo' => 82,
            'Yopal' => 83,
            'Riohacha' => 84,
            'Valledupar' => 85,
            'Cartagena' => 86,
            'Barranquilla' => 87,
            'Santa Marta' => 88,
            'Duitama' => 89,
            'BogotÃ¡ Centro' => 90,
            'BogotÃ¡ TC' => 91,
            'BogotÃ¡ Norte' => 92,
            'Villavicencio' => 93,
            'Tunja' => 94,
            'IbaguÃ©' => 95,
            'Neiva' => 96,
            'Bucaramanga' => 97,
            'CÃºcuta' => 98,

        ];

        // $filtro = DB::select("SELECT * FROM `pagare` WHERE FechaAccion LIKE '%" . $request->month . "%' AND FechaAccion LIKE '%" . $request->year . "%'");


        if ($linea_credito == 0) {
            $columnaFecha = 'FechaAccion';
            foreach ($agenciaColumnaMapping as $agencyName => $agencyNo) {
                if($mes == "General"){

                        $countApproved = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 1)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->count();

                    $countRejected = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 0)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->count();

                    $totalCapitalApproved2 = DB::table('pagare')
                        ->where('Aprobado', 1)
                        ->where('NoAgencia', $agencyNo)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->sum('Capital');

                    $totalCapitalRejected2 = DB::table('pagare')
                        ->where('Aprobado', 0)
                        ->where('NoAgencia', $agencyNo)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->sum('Capital');



                    $fpdf->SetFont('Helvetica', '', 17);
                    $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                    $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                    $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                    $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                    $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                    $fpdf->Ln();
                    $totalApproved += $countApproved;
                    $totalCapitalApproved += $totalCapitalApproved2;
                    $totalRejected += $countRejected;
                    $totalCapitalRejected += $totalCapitalRejected2;



                }else{

                    $countApproved = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 1)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->count();

                    $countRejected = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 0)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->count();

                    $totalCapitalApproved2 = DB::table('pagare')
                        ->where('Aprobado', 1)
                        ->where('NoAgencia', $agencyNo)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->sum('Capital');

                    $totalCapitalRejected2 = DB::table('pagare')
                        ->where('Aprobado', 0)
                        ->where('NoAgencia', $agencyNo)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->sum('Capital');



                    $fpdf->SetFont('Helvetica', '', 17);
                    $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                    $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                    $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                    $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                    $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                    $fpdf->Ln();
                    $totalApproved += $countApproved;
                    $totalCapitalApproved += $totalCapitalApproved2;
                    $totalRejected += $countRejected;
                    $totalCapitalRejected += $totalCapitalRejected2;
                }
            }
        } else {

            $columnaFecha = 'FechaAccion';
            foreach ($agenciaColumnaMapping as $agencyName => $agencyNo) {
                if($mes == "General"){
                    $countApproved = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 1)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->count();

                    $countRejected = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 0)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->count();

                    $totalCapitalApproved2 = DB::table('pagare')
                        ->where('Aprobado', 1)
                        ->where('NoAgencia', $agencyNo)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->sum('Capital');

                    $totalCapitalRejected2 = DB::table('pagare')
                        ->where('Aprobado', 0)
                        ->where('NoAgencia', $agencyNo)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->sum('Capital');



                    $fpdf->SetFont('Helvetica', '', 17);
                    $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                    $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                    $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                    $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                    $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                    $fpdf->Ln();
                    $totalApproved += $countApproved;
                    $totalCapitalApproved += $totalCapitalApproved2;
                    $totalRejected += $countRejected;
                    $totalCapitalRejected += $totalCapitalRejected2;


                }else{
                    $countApproved = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 1)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->count();

                    $countRejected = DB::table('pagare')
                        ->where('NoAgencia', $agencyNo)
                        ->where('Aprobado', 0)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->count();

                    $totalCapitalApproved2 = DB::table('pagare')
                        ->where('Aprobado', 1)
                        ->where('NoAgencia', $agencyNo)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->sum('Capital');

                    $totalCapitalRejected2 = DB::table('pagare')
                        ->where('Aprobado', 0)
                        ->where('NoAgencia', $agencyNo)
                        ->where('NoLC', $linea_credito)
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $aÃ±o . '%'])
                        ->whereRaw("{$columnaFecha} LIKE ?", ['%' . $mes . '%'])
                        ->sum('Capital');



                    $fpdf->SetFont('Helvetica', '', 17);
                    $formattedCapitalApproved2 = number_format($totalCapitalApproved2, 0, ',', '.');
                    $formattedCapitalRejected2 = number_format($totalCapitalRejected2, 0, ',', '.');


                    $fpdf->Cell(6, 1, utf8_decode($agencyName), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countApproved), '', 0, 'L');
                    $fpdf->Cell(4.5, 1, utf8_decode($formattedCapitalApproved2), '', 0, 'L');
                    $fpdf->Cell(2, 1, utf8_decode($countRejected), '', 0, 'L');
                    $fpdf->Cell(4, 1, utf8_decode($formattedCapitalRejected2), '', 0, 'L');
                    $fpdf->Ln();
                    $totalApproved += $countApproved;
                    $totalCapitalApproved += $totalCapitalApproved2;
                    $totalRejected += $countRejected;
                    $totalCapitalRejected += $totalCapitalRejected2;
                }
            }
        }

        $formattedTotalApproved = number_format($totalApproved, 0, ',', '.');
        $formattedTotalCapitalApproved = number_format($totalCapitalApproved, 0, ',', '.');
        $formattedTotalRejected = number_format($totalRejected, 0, ',', '.');
        $formattedTotalCapitalRejected = number_format($totalCapitalRejected, 0, ',', '.');


        $fpdf->SetFont('Helvetica', 'B', 17);
        $fpdf->Cell(6, 1, utf8_decode('TOTAL'), 'T', 0, 'L');
        $fpdf->Cell(2, 1, utf8_decode($formattedTotalApproved), 'T', 0, 'L');
        $fpdf->Cell(4.5, 1, utf8_decode($formattedTotalCapitalApproved), 'T', 0, 'L');
        $fpdf->Cell(2, 1, utf8_decode($formattedTotalRejected), 'T', 0, 'L');
        $fpdf->Cell(4, 1, utf8_decode($formattedTotalCapitalRejected), 'T', 0, 'L');


        $fpdf->Output('I', 'Storage/files/pagare/REPORTE-PAGARÃ.pdf');
        $fpdf->Output('F', 'Storage/files/pagare/REPORTE-PAGARÃ.pdf');
        exit;
    }


    public function data5()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 0
                ORDER BY A.ID ASC


            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }


    public function data6()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 1
                ORDER BY A.ID ASC

            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }


    public function data7()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
                SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
                FROM persona A
                JOIN pagare B ON A.ID = B.ID_Persona
                WHERE B.Aprobado = 3
                ORDER BY A.ID ASC

            ");
        //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

        return datatables()->of($user)->toJson();
    }



    public function adjuntarAutorizacion(Request $request, $id)
    {
        // Verificar si se subiÃ³ un archivo
        if (!$request->hasFile('DocuAutorizacion')) {
            return back()->withErrors(['message' => 'No se subiÃ³ ningÃºn archivo.']);
        }

        $file = $request->file('DocuAutorizacion');
        $filename = $file->getClientOriginalName();

        // Verificar si el archivo es PDF
        if ($file->getClientOriginalExtension() !== 'pdf') {
            return back()->withErrors(['message' => 'Solo se pueden subir archivos PDF.']);
        }

        // Obtener cÃ©dula de la persona asociada al ID

        $resultCedula = DB::select('SELECT Cedula_Persona FROM pagare WHERE ID = ?', [$id]);
        $cedula = $resultCedula[0]->Cedula_Persona ?? null;
        if (is_null($cedula)) {
            return back()->withErrors(['message' => 'No se encontrÃ³ una cÃ©dula asociada con este ID.']);
        }

        // Verificar nombre del archivo
        if ($filename !== 'Autorizacion-' . $cedula . '.pdf') {
            return back()->withErrors([
                'message' => 'El nombre del archivo no cumple con el formato requerido ->Autorizacion-' . $cedula . '.pdf'
            ]);
        }

        // Contar archivos existentes y crear nuevo nombre de archivo
        $existingFilesCount = DB::table('pagare')
            ->where('Cedula_Persona', $cedula)
            ->where('DocuAutorizacion', 'like', 'Autorizacion-' . $cedula . '%')
            ->count();
        $newFilename = 'Autorizacion-' . $cedula . '-' . ($existingFilesCount + 1) . '.pdf';

        // Subir el archivo
        $dir = 'Storage/files/autorizacionpagare/';
        if (!$file->move($dir, $newFilename)) {
            return back()->withErrors(['message' => 'Error al subir el archivo.']);
        }

        // Actualizar base de datos
        $sql5 = DB::update("UPDATE pagare SET DocuAutorizacion = ?, AutorizacionGerente = ?, Aprobado = ? WHERE ID = ?", [
            $newFilename, 3, 1, $id
        ]);

        if ($sql5) {
            $existingNoAgencia = DB::select('SELECT NoAgencia, Aprobado FROM pagare WHERE ID = ?', [$id]);
            $NoAgencia = $existingNoAgencia[0]->NoAgencia;
            $aprobado = $existingNoAgencia[0]->Aprobado;

            //COORDINACION 1
            if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?, CorreoEnviado = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 1',
                    3,
                    0

                ]);
            }
            //COORDINACION 2
            else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');
                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?, CorreoEnviado = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 2',
                    3,
                    0
                ]);
            }
            //COORDINACION 3
            else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?,CorreoEnviado = ? WHERE ID = $id", [
                    1,
                    'Coordinacion 3',
                    3,
                    0
                ]);
            }
            //COORDINACION 4
            else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?,CorreoEnviado = ? WHERE ID = $id", [
                    1,
                    'Coordinacion 4',
                    3,
                    0
                ]);
            }
            //COORDINACION 5
            else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                $existingPerson = DB::select('SELECT Correo, NombreCompleto, Cedula_Persona, ID, Aprobado, Capital, ID_Pagare FROM pagare WHERE ID = ?', [$id]);
                $cedula = $existingPerson[0]->Cedula_Persona;
                $nombrepagare = $existingPerson[0]->NombreCompleto;
                $capital = $existingPerson[0]->Capital;
                $idpagare = $existingPerson[0]->ID_Pagare;
                $correo = $existingPerson[0]->Correo;
                $existingAgencia = DB::select('SELECT ID, Agencia, Score FROM persona WHERE Cedula = ?', [$cedula]);
                $agencia = $existingAgencia[0]->Agencia;
                $idpersona = $existingAgencia[0]->ID;
                $existingScore = DB::select('SELECT Score FROM persona WHERE Cedula = ?', [$cedula]);
                $score = $existingScore[0]->Score;
                $existingfecha = DB::select('SELECT FechaInsercion FROM documentosintesis WHERE ID_Persona = ?', [$idpersona]);
                $fechaconsulta = $existingfecha[0]->FechaInsercion;
                $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');


                date_default_timezone_set('America/Bogota');
                $fechaHoraActual = date('Y-m-d H:i:s');
                $sql = DB::update("UPDATE pagare SET Aprobado = ?, CoorAsignada = ?, AutorizacionGerente = ?, CorreoEnviado = ?  WHERE ID = $id", [
                    1,
                    'Coordinacion 5',
                    3,
                    0
                ]);
            }

            $usuarioActual = Auth::user();
            $nombre = $usuarioActual->name;
            $rol = $usuarioActual->rol;
            $pagareID = DB::select("SELECT ID FROM pagare WHERE ID = ?", [$id]);
            date_default_timezone_set('America/Bogota');
            $ip = $_SERVER['REMOTE_ADDR'];
            $fechaHoraActual = date('Y-m-d H:i:s');
            $agencia = $usuarioActual->agenciau;
            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'AdjuntÃ³AutorizaciÃ³nPagare', ?, ?, ?, ?)", [
                null,
                $nombre,
                $rol,
                $agencia,
                $fechaHoraActual,
                $pagareID[0]->ID,
                null,
                $ip
            ]);


            return back()->with("correcto3", "Â¡Se adjuntÃ³ correctamente la AutorizaciÃ³n!");
        } else {
            return back()->with("incorrecto", "Â¡Error al adjuntar la AutorizaciÃ³n!");
        }
    }

    public function data8()
    {
        $usuarioActual = Auth::user();
        $agenciaU = $usuarioActual->agenciau;
        $user = DB::select("
        SELECT A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.ExisteDatacredito, B.Cedula_Persona, B.NombreCompleto, B.Razon, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.FechaReporte, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.Garantia, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.InteresProporcional, B.FechaAccion, B.CorreoEnviado
        FROM persona A
        JOIN pagare B ON A.ID = B.ID_Persona
    ");
        return datatables()->of($user)->toJson();
    }


    public function createpagareordinario(Request $request)
    {

        $existingLinea = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);

        if ($existingLinea == false) {
            return back()->with("incorrecto2", "Linea de CrÃ©dito No. $request->Linea_Credito NO existe! Error al Registrar!");
        } else {
            $Cuota1 = $request->Fecha1Cuota;
            $CuotaFinal = $request->FechaUltimaCuota;

            $codigoAnio = substr($Cuota1, 0, 1);
            $anio = substr($Cuota1, 1, 2);
            $mes = substr($Cuota1, 3, 2);
            $dia = substr($Cuota1, 5, 2);


            $codigoAnio2 = substr($CuotaFinal, 0, 1);
            $anio2 = substr($CuotaFinal, 1, 2);
            $mes2 = substr($CuotaFinal, 3, 2);
            $dia2 = substr($CuotaFinal, 5, 2);


            $anioReal = 2000 + (int)$anio;

            $anioReal2 = 2000 + (int)$anio2;


            $meses = [
                '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
                '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
                '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
                '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
            ];
            $nombreMes = $meses[$mes];

            $nombreMes2 = $meses[$mes2];


            $fechaFormateada = $nombreMes . " " . (int)$dia . " del " . $anioReal;

            $fechaFormateada2 = $nombreMes2 . " " . (int)$dia2 . " del " . $anioReal2;


            $credito = DB::select('SELECT NoLCredito, Credito FROM lineas_credito WHERE NoLCredito = ?', [$request->Linea_Credito]);
            $lineacredito = $credito[0]->Credito;

            //API S400 - PERSONA
            $url = env('URL_SERVER_API');
            $attempts = 0;
            $maxAttempts = 3;
            $retryDelay = 500; // Milisegundos
            //$accessToken = $this->iniciarSesion();


            do {
                try {
                    $response = Http::get($url . 'asociado/' . $request->CuentaCoop);
                    // $response2 = Http::withHeaders([
                    //     'Authorization' => 'Bearer ' . $accessToken,
                    // ])->get($url . 'estado/' . $request->CuentaCoop . '/' . $request->Linea_Credito . '/' . $request->Capital);
                    $response2 = Http::get($url . 'estado/' . $request->CuentaCoop . '/' . $request->Linea_Credito . '/' . $request->Capital);
                    $data = $response->json();
                    $data2 = $response2->json();
                    break;
                } catch (\Exception $e) {
                    $attempts++;
                    usleep($retryDelay * 1000);
                }
            } while ($attempts < $maxAttempts);

            if ($attempts == $maxAttempts) {
                return back()->with("incorrecto", "Reintentar, hay fallos en la red");
            }
            // $TOKEN = $data2['access_token'];
            // dd($TOKEN);

            $STATUS = $data2['status'];

            $CODIGONOMINA = $data['asociado']['CODIGONOMINA'];
            $NOMBRENOMINA = $data['asociado']['NOMBRENOMINA'];
            $ENTIDAD = $data['asociado']['ENTIDAD'];
            $NODEPENDENCIA = $data['asociado']['#DEPENDENCIA'];
            $DEPENDENCIA = $data['asociado']['DEPENDENCIA'];



            $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
            //EN LA API APARECE ESTADO 200 SI FUE ENCONTRADO DE FORMA CORRECTA, SI APARECE 422 ES QUE NO EXISTE


            if ($STATUS !== '200') {
                //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
                if (!empty($existeNominaDepen)) {
                    //COMPARA SI EL REGISTRO DE LA S400 ES LO MISMO QUE HAY EN EL ARCHIVO PLANO
                    if ($CODIGONOMINA === $existeNominaDepen[0]->CODNOMINA && $NODEPENDENCIA == $existeNominaDepen[0]->CODDEPENDENCIA && $ENTIDAD == $existeNominaDepen[0]->CODENTIDAD) {
                        $usuarioActual = Auth::user();
                        $nombre = $usuarioActual->name;
                        $rol = $usuarioActual->rol;
                        $cedulaagregada = $request->Cedula_Persona;
                        date_default_timezone_set('America/Bogota');
                        $ip = $_SERVER['REMOTE_ADDR'];
                        $fechaHoraActual = date('Y-m-d H:i:s');
                        $agencia = $usuarioActual->agenciau;
                        $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareOrdinarioAprobado', ?, ?, ?, ?)", [
                            null,
                            $nombre,
                            $rol,
                            $agencia,
                            $fechaHoraActual,
                            $cedulaagregada,
                            null,
                            $ip
                        ]);

                        $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                        // FECHA REPORTE POR MES ACTUAL
                        if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                            $fechadelCredito = Carbon::now('America/Bogota');

                            // Obtener el aÃ±o, mes y dÃ­a de la fecha del crÃ©dito
                            $anio3 = $fechadelCredito->year;
                            $mes3 = $fechadelCredito->month;
                            $dia3 = $fechadelCredito->day;

                            $anioCompleto = 2000 + (int)$anio3;
                            if (!checkdate((int)$mes3, (int)$dia3, $anioCompleto)) {
                                return back()->with('incorrecto3', 'La fecha ingresada no es vÃ¡lida. Por favor, verifica e intenta de nuevo.');
                            }

                            $fechadelCredito = Carbon::now('America/Bogota');
                            // $fechadelCredito = Carbon::createFromFormat('Y/m/d', $anioCompleto . '/' . $mes3 . '/' . $dia3);
                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);
                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);

                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
                                Carbon::setLocale('es');
                                $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
                                $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

                                // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
                                $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

                                // Comparar si son iguales
                                //resultado
                                $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



                                // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                // Implementar la lÃ³gica de la fÃ³rmula de Excel
                                $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
                                // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
                                $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 30; // DIAS(E15;B14)<=30

                                // Comprobar si todas las condiciones relevantes son verdaderas
                                $resultado1 = $condicion1 && $condicion3 ? true : false;




                                // Primera condiciÃ³n externa
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado2 = false;
                                } else {
                                    // CondiciÃ³n interna
                                    $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
                                    $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

                                    $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

                                    if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
                                        $resultado2 = true;
                                    } else {
                                        $resultado2 = false;
                                    }
                                }


                                // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
                                $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

                                // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 30 dÃ­as o menos
                                $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 30;

                                // Resultado basado en las condiciones
                                $resultado3 = ($condicion3 || $condicion4) ? false : true;


                                // Calcular el Ãºltimo dÃ­a del mes de B14
                                $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

                                // Calcular el Ãºltimo dÃ­a del mes anterior a E15
                                $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

                                // Verificar las condiciones
                                $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
                                $condicion6 = $fechaReporte->gte($fechadelCredito);
                                $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                // Evaluar si todas las condiciones son verdaderas
                                $resultado4 = $condicion5 && $condicion6 && $condicion7 ? false : true;


                                // Primer nivel de comprobaciÃ³n
                                if ($fechadelCredito->gt($fechaReporte)) {
                                    $resultado5 = false;
                                } else {
                                    // Segundo nivel de comprobaciÃ³n
                                    $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
                                    $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

                                    $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
                                    $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 30;

                                    $resultado5 = $condicionA && $condicionB ? false : true;
                                }
                                $formateada = $fechaReporte->format('d/m/Y');
                            }



                            if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3  == true && $resultado4  == true && $resultado5  == true)) {



                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }

                                return back()->with("correcto", $message);
                            } else {
                                $usuarioActual = Auth::user();
                                $nombre = $usuarioActual->name;
                                $rol = $usuarioActual->rol;
                                $cedulaagregada = $request->Cedula_Persona;
                                date_default_timezone_set('America/Bogota');
                                $ip = $_SERVER['REMOTE_ADDR'];
                                $fechaHoraActual = date('Y-m-d H:i:s');
                                $agencia = $usuarioActual->agenciau;
                                $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareOrdinarioRechazado', ?, ?, ?, ?)", [
                                    null,
                                    $nombre,
                                    $rol,
                                    $agencia,
                                    $fechaHoraActual,
                                    $cedulaagregada,
                                    null,
                                    $ip
                                ]);


                                $anioCompleto = 2000 + (int)$anio3;
                                $fechadelCredito = Carbon::now('America/Bogota');
                                Carbon::setLocale('es');
                                $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                                $parts = explode(' ', $fechaStringCredito);
                                $parts[0] = ucfirst(mb_strtolower($parts[0]));
                                $fechaStringCredito = implode(' ', $parts);

                                $message = "";

                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }

                                $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);
                                // FECHA REPORTE POR MES ACTUAL
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                    //INTERES PROPORCIONAL
                                    $fechaHoraActual = Carbon::now('America/Bogota');
                                    $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                    $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                    $tasa = $request->Tasa;
                                    $capital = $request->Capital;

                                    $tasa = str_replace(',', '.', $tasa);
                                    $tasa = floatval($tasa);

                                    $tasa = $tasa / 100;

                                    $capital = floatval($request->Capital);

                                    $interval = $fechaHoraActual->diff($endOfMonth);
                                    $c30 = $interval->days;

                                    $cuotaMensual = $capital * $tasa;
                                    $cuotaDiaria = $cuotaMensual / 30;
                                    $interesProporcional = $cuotaDiaria * $c30;

                                    $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                    $NoAgencia = $request->NoAgencia;

                                    //COORDINACION 1
                                    if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 1',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 2
                                    else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');

                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 3
                                    else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 3',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 4
                                    else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 2',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    //COORDINACION 5
                                    else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                        $cedula = $request->Cedula_Persona;
                                        $nombrepagare = $request->NombreCompleto;
                                        $capital = $request->Capital;
                                        $idpagare = $request->ID_Pagare;
                                        $correo = $request->Correo;
                                        $NOagencia = $request->NoAgencia;
                                        $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                        $agencia = $existeAgencia[0]->NameAgencia;
                                        $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                        date_default_timezone_set('America/Bogota');
                                        $fechaHoraActual = date('Y-m-d H:i:s');


                                        $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                            $fechaReporte2,
                                            0,
                                            'Coordinacion 5',
                                            1,
                                            $interesProporcional,
                                            $fechaStringCredito,
                                            $request->NoAgencia,
                                            $agencia,
                                            $request->CuentaCoop,
                                            $request->Cedula_Persona,
                                            $request->NombreCompleto,
                                            $request->ID_Pagare,
                                            $request->Linea_Credito,
                                            $lineacredito,
                                            $request->Capital,
                                            $request->NoCuotas,
                                            $request->ValorCuota,
                                            $request->Tasa,
                                            $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                            $request->Direccion,
                                            $request->TelFijo,
                                            $fechaFormateada,
                                            $fechaFormateada2,
                                            $request->Celular,
                                            $request->Correo,
                                            $request->GeneradorPagare,
                                            7323,
                                            1
                                        ]);
                                    }
                                    $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                                }
                                return back()->with("incorrecto", $message);
                            }
                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1 && $existeDia[0]->ENTREMES == 0) {
                            $fechadelCredito = Carbon::now('America/Bogota');
                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);

                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

                                // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

                                $formateada = $fechaReporte->format('d/m/Y');
                                $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
                                // FÃ³rmula 1
                                $resultado1 = (
                                    $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
                                    (
                                        $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
                                        $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
                                        $formateadaCarbon->diffInDays($fechadelCredito) <= 30
                                    )
                                );


                                // FÃ³rmula 2
                                $resultado2 = (
                                    Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
                                    $fechaReporte->gte($fechadelCredito) &&
                                    $fechaReporte->diffInDays($fechadelCredito) <= 30
                                ) ?  false : true;

                                // FÃ³rmula 3
                                $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
                                    (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30) ? false : true
                                );
                            }


                            if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false)) {

                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                // Formatear los nÃºmeros para eliminar decimales no deseados
                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else {
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                $NoAgencia = $request->NoAgencia;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }
                            return back()->with("incorrecto", $message);
                        } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                            $fechadelCredito = Carbon::now('America/Bogota');
                            Carbon::setLocale('es');
                            $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');
                            $parts = explode(' ', $fechaStringCredito);
                            $parts[0] = ucfirst(mb_strtolower($parts[0]));
                            $fechaStringCredito = implode(' ', $parts);
                            if (!empty($existeDia) && is_numeric($existeDia[0]->DIAS)) {
                                $diaReporte = max(1, $existeDia[0]->DIAS);
                                $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

                                if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
                                    $fechaReporteActual->addMonth();
                                }

                                $fechaReporte = $fechaReporteActual;


                                Carbon::setLocale('es');
                                $fechaReporte2 = $fechaReporte->translatedFormat('F d Y');
                                // ExtracciÃ³n y manejo de la fecha de la primera cuota
                                $codigoAnio = substr($Cuota1, 0, 1);
                                $anio = substr($Cuota1, 1, 2);
                                $mes = substr($Cuota1, 3, 2);
                                $dia = substr($Cuota1, 5, 2);

                                $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
                                Carbon::setLocale('es');
                                $fechaString22 = $fecha1eraCuota->translatedFormat('F d Y');
                                $fechaString2 = $fecha1eraCuota->format('d/m/Y');
                                $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);



                                $finalMesFechaCarbon2 = $fechaCarbon2->copy()->endOfMonth();
                                $finalMesFormateadaMesSiguiente = $fechaReporte->copy()->addMonth()->endOfMonth();
                                $finalMesFechaCreditoDosMeses = $fechadelCredito->copy()->addMonths(2)->endOfMonth();
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                $diferenciaDias = $fechaReporte->diffInDays($fechadelCredito);


                                $result = $fechadelCredito > $fechaReporte;


                                $result1 = $fechaReporte->lt($fechadelCredito) &&
                                    ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
                                        $fechaReporte->diffInDays($fechadelCredito) <= 30);


                                $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

                                //CUARTO CONDICIONAL
                                $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

                                //QUINTO
                                $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


                                //SEXTO
                                $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

                                $formateada = $fechaReporte->format('d/m/Y');
                            }




                            if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 1',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 2',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 3',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 4',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        1,
                                        'Coordinacion 5',
                                        0,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                    $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                }

                                $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE <strong>" . e($request->NombreCompleto) . "</strong> CON CUENTA <strong>" . e($request->CuentaCoop) . "</strong> FUE APROBADO!</span>";
                                return back()->with("correcto", $message);
                            } else {
                                if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                    $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                    Carbon::setLocale('es');
                                    $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                                }

                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;


                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare, ID_Persona, Ordinario) VALUES (?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $fechaReporte2,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->ID_Pagare,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $request->Correo,
                                        $request->GeneradorPagare,
                                        7323,
                                        1
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }
                            return back()->with("incorrecto", $message);
                        } else {
                            //RECHAZO

                            $usuarioActual = Auth::user();
                            $nombre = $usuarioActual->name;
                            $rol = $usuarioActual->rol;
                            $cedulaagregada = $request->Cedula_Persona;
                            date_default_timezone_set('America/Bogota');
                            $ip = $_SERVER['REMOTE_ADDR'];
                            $fechaHoraActual = date('Y-m-d H:i:s');
                            $agencia = $usuarioActual->agenciau;
                            $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoPagareRechazado', ?, ?, ?, ?)", [
                                null,
                                $nombre,
                                $rol,
                                $agencia,
                                $fechaHoraActual,
                                $cedulaagregada,
                                null,
                                $ip
                            ]);



                            $message = "";


                            $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$CODIGONOMINA, $NODEPENDENCIA, $ENTIDAD]);

                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
                                Carbon::setLocale('es');
                                $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
                            }
                            // FECHA REPORTE POR MES ACTUAL
                            if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();

                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);
                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $intervalmin = $interval->days;
                                $intervalmax = $intervalmin + 30;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $intervalmax;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $intervalmin;

                                $cuotaMensual = number_format($cuotaMensual, 0, '.', '');
                                $cuotaDiaria = number_format($cuotaDiaria, 0, '.', '');
                                $interesProporcional = number_format($interesProporcional, 0, '.', '');
                                $interesProporcionalCorrecto = number_format($interesProporcionalCorrecto, 0, '.', '');


                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            } else if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
                                //INTERES PROPORCIONAL
                                $fechaHoraActual = Carbon::now('America/Bogota');
                                $endOfMonth = $fechaHoraActual->copy()->endOfMonth();


                                $fechaHoraActualStr = $fechaHoraActual->format('Y-m-d H:i:s');
                                $tasa = $request->Tasa;
                                $capital = $request->Capital;

                                $tasa = str_replace(',', '.', $tasa);
                                $tasa = floatval($tasa);

                                $tasa = $tasa / 100;

                                $capital = floatval($request->Capital);

                                $interval = $fechaHoraActual->diff($endOfMonth);
                                $c30 = $interval->days;

                                $cuotaMensual = $capital * $tasa;
                                $cuotaDiaria = $cuotaMensual / 30;
                                $interesProporcional = $cuotaDiaria * $c30;

                                $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

                                $NoAgencia = $request->NoAgencia;
                                $usuarioActual = Auth::user();
                                $nombreGenerador = $usuarioActual->name;

                                //COORDINACION 1
                                if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 1')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 1',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 2
                                else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 2')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');

                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 2',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 3
                                else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 3')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 3',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 4
                                else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 4')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 4',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }
                                //COORDINACION 5
                                else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
                                    $cedula = $request->Cedula_Persona;
                                    $nombrepagare = $request->NombreCompleto;
                                    $capital = $request->Capital;
                                    $idpagare = $request->ID_Pagare;
                                    $correo = $request->Correo;
                                    $NOagencia = $request->NoAgencia;
                                    $existeAgencia = DB::select('SELECT * FROM agencias WHERE NumAgencia = ?', [$NOagencia]);
                                    $agencia = $existeAgencia[0]->NameAgencia;
                                    $usuarios = DB::table('users')->where('agenciau', 'Coordinacion 5')->pluck('email');

                                    date_default_timezone_set('America/Bogota');
                                    $fechaHoraActual = date('Y-m-d H:i:s');


                                    $sql = DB::insert('INSERT INTO pagare (Garantia, Ordinario,FechaReporte,Aprobado, CoorAsignada,AutorizacionGerente,InteresProporcional,FechaAccion, NoAgencia, NombreAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, NoLC, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, Nomina, Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular,GeneradorPagare, ID_Persona) VALUES (?,?,?,?,?,?,?,?,?, ?, ?, ?,  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', [
                                        $request->Garantia,
                                        1,
                                        $fechaReporte,
                                        0,
                                        'Coordinacion 5',
                                        1,
                                        $interesProporcional,
                                        $fechaStringCredito,
                                        $request->NoAgencia,
                                        $agencia,
                                        $request->CuentaCoop,
                                        $request->Cedula_Persona,
                                        $request->NombreCompleto,
                                        $request->Linea_Credito,
                                        $lineacredito,
                                        $request->Capital,
                                        $request->NoCuotas,
                                        $request->ValorCuota,
                                        $request->Tasa,
                                        $CODIGONOMINA . '-' . $NOMBRENOMINA,
                                        $request->Direccion,
                                        $request->TelFijo,
                                        $fechaFormateada,
                                        $fechaFormateada2,
                                        $request->Celular,
                                        $nombreGenerador,
                                        7323
                                    ]);
                                }

                                $message = "<span style='font-size: 20px'>Como la fecha de crÃ©dito fue <strong>" . $fechaStringCredito . "</strong> la primera cuota debe ser <strong> " . $fechadeStringCuotaEsperada . " </strong> para el asociado <strong>" . e($request->NombreCompleto) . "</strong> con cuenta <strong>" . e($request->CuentaCoop) . "</strong>.</span>";
                            }


                            if (empty($message)) {
                                $message = "<span style='font-size: 20px'>Â¡EL PAGARÃ DE " . e($request->NombreCompleto) . " CON CUENTA " . e($request->CuentaCoop) . " FUE RECHAZADO!</span>";
                            }

                            return back()->with("incorrecto", $message);
                        }
                    }
                }
            } else{
                $message = "<span style='font-size: 20px'>Â¡El pagarÃ© de " . e($request->NombreCompleto) . " <strong>NO FUE REGISTRADO</strong> porque ya fue <strong>DESEEMBOLSADO</strong> o <strong>ANULADO</strong> en la AS400!";
                return back()->with("incorrecto4", $message);

            }
        }
    }


    // public function data9()
    // {
    //     $usuarioActual = Auth::user();
    //     $agenciaU = $usuarioActual->agenciau;
    //     $user = DB::select("
    //     SELECT A.ID, A.Score, A.Estado, B.ID, B.NoAgencia, B.CuentaCoop, B.Cedula_Persona, B.NombreCompleto, B.ID_Pagare, B.Linea_Credito, B.Capital, B.NoCuotas, B.ValorCuota, B.Tasa, B.FechaCredito, B.Nomina, B.Direccion, B.TelFijo, B.Fecha1Cuota, B.FechaUltimaCuota, B.Celular, B.Correo, B.GeneradorPagare, B.ID_Persona, B.Aprobado, B.NoLC, B.AutorizacionGerente, B.DocuAutorizacion, B.Garantia, B.InteresProporcional, B.FechaAccion
    //     FROM persona A
    //     JOIN pagare B ON A.ID = B.ID_Persona
    //     WHERE Ordinario = 1
    //     ORDER BY A.ID ASC

    // ");
    //     //NoAgencia, CuentaCoop, Cedula_Persona, NombreCompleto, ID_Pagare, Linea_Credito, Capital, NoCuotas, ValorCuota, Tasa, FechaCredito, Nomina, 	Direccion, TelFijo, Fecha1Cuota, FechaUltimaCuota, Celular, Correo, GeneradorPagare

    //     return datatables()->of($user)->toJson();
    // }



    // // public function asegurabilidad(Request $request)
    // // {

    // //         //API S400
    // //         $url = env('URL_SERVER_API');
    // //         $attempts = 0;
    // //         $maxAttempts = 3;
    // //         $retryDelay = 500; // Milisegundos


    // //     do {
    // //         try {
    // //             $response = Http::get($url . 'asegurabilidad/' . $request->CuentaCoopserp);
    // //             $data = $response->json();
    // //             break;
    // //         } catch (\Exception $e) {
    // //             $attempts++;
    // //             usleep($retryDelay * 1000);
    // //         }
    // //     } while ($attempts < $maxAttempts);

    // //     if ($attempts == $maxAttempts) {
    // //         return back()->with("incorrecto", "Reintentar, hay fallos en la red");
    // //     }
    // //     $meses = [
    // //         '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
    // //         '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
    // //         '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
    // //         '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
    // //     ];
    // //     $meses2 = [
    // //         '1' => 'Enero', '2' => 'Febrero', '3' => 'Marzo',
    // //         '4' => 'Abril', '5' => 'Mayo', '6' => 'Junio',
    // //         '7' => 'Julio', '8' => 'Agosto', '9' => 'Septiembre',
    // //         '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
    // //     ];

    // //     $tipoDoc = $data['asociado']['TIPODOC'];
    // //     $cedula = $data['asociado']['CEDULA'];
    // //     $fechaExpedicion = $data['asociado']['FECHAE'];
    // //     $fechaCarbon = Carbon::createFromFormat('Ymd', $fechaExpedicion);
    // //     $dia = $fechaCarbon->format('d');
    // //     $numeroMes2 = $fechaCarbon->format('n');
    // //     $ano = $fechaCarbon->format('Y');
    // //     $nombreMes2 = $meses2[$numeroMes2];
    // //     $fechaFormateadaExpedicion = $nombreMes2 . ' '. $numeroMes2 .' de '. $ano;


    // //     $firstApellido = $data['asociado']['APELLIDO1'];
    // //     $secondApellido = $data['asociado']['APELLIDO2'];
    // //     $nombres = $data['asociado']['NOMBRES'];
    // //     $domicilio = $data['asociado']['DIRECCION'];
    // //     $telefono = $data['asociado']['TELEFONO'];
    // //     $ciudad = $data['asociado']['CIUDAD'];
    // //     $departamento = $request->departamentos;
    // //     $correo = $data['asociado']['CORREO'];
    // //     $celular = $data['asociado']['CELULAR'];
    // //     $celular2 = $data['asociado']['CELULAR2'];
    // //     $lNacimiento = $data['asociado']['LUGAR'];
    // //     $fNacimiento = $data['asociado']['FECHAN'];
    // //     $fechaCarbon2 = Carbon::createFromFormat('Ymd', $fNacimiento);
    // //     $dia2 = $fechaCarbon2->format('d');
    // //     $numeroMes3 = $fechaCarbon2->format('n');
    // //     $ano2 = $fechaCarbon2->format('Y');
    // //     $nombreMes3 = $meses2[$numeroMes3];
    // //     $fechaFormateadaNacimiento = $nombreMes3 . ' '. $numeroMes3 .' de '. $ano2;


    // //     $sexo = $data['asociado']['SEXO'];
    // //     $eCivil = $data['asociado']['ECIVIL'];
    // //     $deporte = $data['asociado']['DEPORTE'];
    // //     $cargo = $data['asociado']['CARGO'];
    // //     $salario = $data['asociado']['SALARIO'];




    // //     if($tipoDoc == "C"){
    // //         $documento = "cc";
    // //     }elseif($tipoDoc == "E"){
    // //         $documento = "ce";
    // //     }elseif($tipoDoc == "T"){
    // //         $documento = "ti";
    // //     }elseif($tipoDoc == "R"){
    // //         $documento = "ru";
    // //     }elseif($tipoDoc == "N"){
    // //         $documento = "n";
    // //     }else{
    // //         $documento = "s";
    // //     }


    // //     if($eCivil == "D"){
    // //         $civil = "Divorciado";
    // //     }else if($eCivil == "S"){
    // //         $civil = "Soltero";
    // //     }else if($eCivil == "C"){
    // //         $civil = "Casado";
    // //     }else if($eCivil == "U"){
    // //         $civil = "UniÃ³n Libre";
    // //     }else if($eCivil == "V"){
    // //         $civil = "Viudo";
    // //     }

    // //     if($sexo == "M"){
    // //         $genero = "Masculino";
    // //     }else{
    // //         $genero = "Femenino";
    // //     }

    // //     if($deporte == 0 || $deporte == null){
    // //         $ejercicio = "Ninguno";
    // //     }else{
    // //         $ejercicio = $deporte;
    // //     }



    // //     $respuestas = $request->input('enfermedades');
    // //     $consulta = DB::select('SELECT Enfermedad FROM enfermedades');

    // //     $resultado = [];

    // //     // Verificar si $respuestas es un array
    // //     if (is_array($respuestas)) {
    // //         foreach ($consulta as $enfermedad) {
    // //             // Verificar si la enfermedad estÃ¡ en $respuestas
    // //             if (in_array($enfermedad->Enfermedad, $respuestas)) {
    // //                 $resultado[] = 1;

    // //             } else {
    // //                 $resultado[] = 0;

    // //             }
    // //         }
    // //     } else {
    // //         // Si $respuestas no es un array, llenar $resultado con ceros
    // //         $resultado = array_fill(0, count($consulta), 0);
    // //     }

    // //     if (empty(array_filter($resultado))) {
    // //         $resultado = array_fill(0, count($resultado), 0);
    // //     }

    // //     $jsonResultado = json_encode($resultado, JSON_NUMERIC_CHECK | JSON_FORCE_OBJECT);




    // //     $enfermedad1 = $request->enfermedad1;
    // //     $enfermedad2 = $request->enfermedad2;

    // //     // Crear un array con los dos valores
    // //     $enfermedadres = [$enfermedad1, $enfermedad2];
    // //     $jsonResultado2 = json_encode($enfermedadres, JSON_NUMERIC_CHECK | JSON_FORCE_OBJECT);
    // //     // Imprimir el array para verificar


    // //     $fecha1 = $request->fecha1;
    // //     $fecha2 = $request->fecha2;

    // //     // Crear un array con los dos valores
    // //     $fechares = [$fecha1, $fecha2];
    // //     $jsonResultado3 = json_encode($fechares, JSON_NUMERIC_CHECK | JSON_FORCE_OBJECT);
    // //     // Imprimir el array para verificar


    // //     $tratamiento1 = $request->tratamiento1;
    // //     $tratamiento2 = $request->tratamiento2;

    // //     // Crear un array con los dos valores
    // //     $tratamientores = [$tratamiento1, $tratamiento2];
    // //     $jsonResultado4 = json_encode($tratamientores, JSON_NUMERIC_CHECK | JSON_FORCE_OBJECT);
    // //     // Imprimir el array para verificar



    // //     $registroExistente = DB::select('SELECT * FROM fasegurabilidad
    // //     WHERE ID_Pagare = ?', [
    // //         $request->ID
    // //     ]);

    // //     // Verificar si ya existe un registro
    // //     if (empty($registroExistente)) {
    // //     // No existe, entonces se puede realizar la inserciÃ³n
    // //     $respuestasTodo = DB::insert('INSERT INTO fasegurabilidad (LugarExp,Departamento,Nacionalidad,Peso,Estatura,ManoDom,Enfermedades, Pregunta2,Cual,Pregunta3,Pregunta4,ListaEnferm, FechaDiagn, Tratamiento,Pregunta5,Pregunta6,Pregunta7,Pregunta8,Pregunta9,Pregunta10,ID_Pagare) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', [
    // //     $request->expedicion,
    // //     $request->departamentos,
    // //     $request->nacionalidad,
    // //     $request->peso,
    // //     $request->estatura,
    // //     $request->mano_dominante,
    // //     $jsonResultado,
    // //     $request->pregunta2,
    // //     $request->cual,
    // //     $request->pregunta3,
    // //     $request->pregunta4,
    // //     $jsonResultado2,
    // //     $jsonResultado3,
    // //     $jsonResultado4,
    // //     $request->pregunta5,
    // //     $request->pregunta6,
    // //     $request->pregunta7,
    // //     $request->pregunta8,
    // //     $request->pregunta9,
    // //     $request->pregunta10,
    // //     $request->ID
    // //     ]);
    // //     $consecutivo = DB::getPdo()->lastInsertId();
    // // }

    // //     $resultadoID = DB::select('SELECT ID FROM fasegurabilidad
    // //     WHERE ID_Pagare = ?', [
    // //         $request->ID
    // //     ]);
    // //     $consecutivo = $resultadoID[0]->ID;
    // //     $fpdf = new Fpdf('P', 'cm', array(21.59, 33.02));
    // //     $fpdf->SetAutoPageBreak(false,1);

    // //     $diaActual = Carbon::now('America/Bogota');

    // //     // Formatear la fecha segÃºn tus especificaciones
    // //     $fechaFormateada = $diaActual->format('F j Y - H:i');

    // //     // Traducir el nombre del mes a espaÃ±ol
    // //     $mesesEnEspanol = [
    // //         'January'   => 'Enero',
    // //         'February'  => 'Febrero',
    // //         'March'     => 'Marzo',
    // //         'April'     => 'Abril',
    // //         'May'       => 'Mayo',
    // //         'June'      => 'Junio',
    // //         'July'      => 'Lulio',
    // //         'August'    => 'Agosto',
    // //         'September' => 'Septiembre',
    // //         'October'   => 'Octubre',
    // //         'November'  => 'Noviembre',
    // //         'December'  => 'Diciembre',
    // //     ];

    // //     $fechaFormateada = strtr($fechaFormateada, $mesesEnEspanol);
    // //     $usuarioActual = Auth::user();
    // //     $nombre = $usuarioActual->name;
    // //     $agencia = $usuarioActual->agenciau;

    // //     $fpdf->AddPage("P");
    // //     $fpdf->SetY(2.4);
    // //     $fpdf->SetFont('Arial', 'B', 20);
    // //     $fpdf->Cell(0, 0, utf8_decode('#'.$consecutivo), 0, 0, 'L');
    // //     $fpdf->SetFont('Arial', 'B', 6);
    // //     $fpdf->SetX(2.4);
    // //     $fpdf->Cell(0, 0, utf8_decode('Fecha y Hora GeneraciÃ³n: '.$fechaFormateada.'                   Generado por: '.$nombre.'-'.$agencia), 0, 1, 'L');
    // //     $fpdf->SetY(2.9);
    // //     $fpdf->SetFont('Arial', 'B', 3);
    // //     $fpdf->Cell(0, 0, utf8_decode('                                                        DE COLOMBIA'), 0, 1, 'L');
    // //     $fpdf->SetY(2.8);
    // //     $fpdf->SetFont('Arial', 'B', 3);
    // //     $fpdf->Cell(0, 0, utf8_decode('                                       SUPERINTENDENCIA FINANCIERA'), 0, 1, 'L');
    // //     $fpdf->SetY(2.9);
    // //     $fpdf->SetFont('Arial', 'B', 5);
    // //     $fpdf->Cell(0, 0, utf8_decode('VIGILADO'), 0, 1, 'L');
    // //     $fpdf->Cell(0, 0, utf8_decode('                                                              GERENCIA DE PROCESOS Y CALIDAD SOLICITUD INDIVIDUAL PARA SEGURO DE VIDA GRUPO DEUDORES FM-SUSV-03 V.11 23/10/2023'), 0, 0, 'L');
    // //     $fpdf->SetY(0.3);
    // //     $fpdf->SetFont('Arial', 'B', 18);
    // //     $fpdf->Cell(0, 1.5, utf8_decode('SOLICITUD INDIVIDUAL PARA SEGURO'), 0, 0, 'L');
    // //     $fpdf->Image('img/Aseguradora.jpg',16, 0.2, -165);
    // //     $fpdf->Ln();
    // //     $fpdf->Cell(0, 0, utf8_decode('         DE VIDA GRUPO DEUDORES'), 0, 0, 'L');
    // //     $fpdf->Ln();
    // //     $fpdf->SetFillColor(192, 192, 192);
    // //     //este es el que da el color gris y el relleno
    // //     $fpdf->Rect(1, 3, 19, 0.6, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 3, 19, 0.6);
    // //     $fpdf->SetY(0.3);
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(19.5, 6, utf8_decode('DATOS DEL TOMADOR'), 0, 1, 'C');
    // //     $fpdf->Ln();
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //PRIMER CUADRO DE TIPO CC
    // //     $fpdf->Rect(1, 3.6, 9.5, 0.9);
    // //     $fpdf->Cell(3.2, -16.8, utf8_decode('TIPO DE DOCUMENTO'), 0, 1, 'C');
    // //     $fpdf->Cell(21.3, 16.8, utf8_decode('RAZON SOCIAL'), 0, 1, 'C');

    // //     //SEGUNDO CUADRO RAZON SOCIAL
    // //     $fpdf->Rect(10.5, 3.6, 9.5, 0.9);
    // //     //CUADRO DE DIRECCION
    // //     $fpdf->Rect(1, 4.5, 6, 0.9);
    // //     //CUADRO TELEFONO
    // //     $fpdf->Rect(7, 4.5, 3.5, 0.9);

    // //     //CUADRO DE CIUDAD MUNICIPIO
    // //     $fpdf->Rect(10.5, 4.5, 5.5, 0.9);
    // //     //CUADRO DEPARTAMENTO
    // //     $fpdf->Rect(16, 4.5, 4, 0.9);

    // //     //este es el que da el color gris y el relleno CUADRO INFORMACION ASEGURADO
    // //     $fpdf->Rect(1, 5.4, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 5.4, 19, 0.4);

    // //     //CUADRO DE TIPO DE DOCUMENTO
    // //     $fpdf->Rect(1, 5.8, 6, 0.9);
    // //     //CUADRO LUGAR EXPEDICION
    // //     $fpdf->Rect(7, 5.8, 7.5, 0.9);
    // //     //CUADRO FECHA DE EXPEDICION
    // //     $fpdf->Rect(14.5, 5.8, 5.5, 0.9);

    // //     //CUADRO DE PRIMER APELLIDO
    // //     $fpdf->Rect(1, 6.7, 4.8, 0.9);

    // //     //CUADRO SEGUNDO APELLIDO
    // //     $fpdf->Rect(5.8, 6.7, 4.7, 0.9);

    // //     //CUADRO DE NOMBRES
    // //     $fpdf->Rect(10.5, 6.7, 9.5, 0.9);




    // //     //CUADRO DE DIRECCION DOMICILIO
    // //     $fpdf->Rect(1, 7.6, 6, 0.9);
    // //     //CUADRO TELEFONO/ FAX
    // //     $fpdf->Rect(7, 7.6, 3.5, 0.9);

    // //     //CUADRO DE CIUDAD / MUNICIPIO
    // //     $fpdf->Rect(10.5, 7.6, 5.5, 0.9);
    // //     //CUADRO DEPARTAMENTO
    // //     $fpdf->Rect(16, 7.6, 4, 0.9);

    // //     //CUADRO DE CORREO ELECTRONICO
    // //     $fpdf->Rect(1, 8.5, 8, 0.9);
    // //     //CUADRO TELEFONO CELULAR
    // //     $fpdf->Rect(9, 8.5, 3.5, 0.9);

    // //     //CUADRO DE OTRO TELEFONO FAX
    // //     $fpdf->Rect(12.5, 8.5, 3.5, 0.9);
    // //     //CUADRO NACIONALIDAD
    // //     $fpdf->Rect(16, 8.5, 4, 0.9);

    // //     //CUADRO DE LUGAR Y FECHA DE NACIMIENTO
    // //     $fpdf->Rect(1, 9.4, 6.8, 0.9);
    // //     //CUADRO SEXO
    // //     $fpdf->Rect(7.8, 9.4, 3.5, 0.9);

    // //     //CUADRO ESTADO CIVIL
    // //     $fpdf->Rect(11.3, 9.4, 8.7, 0.9);


    // //     //CUADRO DE PESO
    // //     $fpdf->Rect(1, 10.3, 2.5, 0.9);
    // //     //CUADRO ESTATURA
    // //     $fpdf->Rect(3.5, 10.3, 3, 0.9);

    // //     //CUADRO DE BRAZO DOMINANTE
    // //     $fpdf->Rect(6.5, 10.3, 7, 0.9);
    // //     //CUADRO DEPORTES QUE PRACTICA
    // //     $fpdf->Rect(13.5, 10.3, 6.5, 0.9);

    // //     //CUADRO DE OCUPACION DETALLADA
    // //     $fpdf->Rect(1, 11.2, 7.5, 0.6);
    // //     //CUADRO VALOR ASEGURADO
    // //     $fpdf->Rect(8.5, 11.2, 5.5, 0.6);

    // //     //CUADRO INGRESOS MENSUALES
    // //     $fpdf->Rect(14, 11.2, 6, 0.6);

    // //     //este es el que da el color gris y el relleno CUADRO INFORMACION ASEGURADO
    // //     $fpdf->Rect(1, 11.8, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 11.8, 19, 0.4);

    // //     //informacion
    // //     $fpdf->Cell(10, -16, utf8_decode('NIT    No.'), 0, 1, 'C');
    // //     $fpdf->SetFont('Arial', 'I', 11);

    // //     $fpdf->Cell(14.7, 15.9, utf8_decode('805.004.034-9'), 0, 1, 'C');
    // //     $fpdf->Cell(28.6, -15.9, utf8_decode('COOPSERP'), 0, 1, 'C');





    // //     $fpdf->SetY(2.64);
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(19.5, 6, utf8_decode('INFORMACIÃN DEL ASEGURADO'), 0, 1, 'C');
    // //     $fpdf->SetY(9.05);
    // //     $fpdf->Cell(19.5, 6, utf8_decode('DECLARACIÃN DE ASEGURABILIDAD'), 0, 1, 'C');
    // //     $fpdf->SetY(9.3);
    // //     //CUADRO DECLARACION DE ASEGURABILIDAD
    // //     $fpdf->Rect(1, 12.2, 19, 12.5);
    // //     $fpdf->Cell(19.5, 6.2, utf8_decode('1. Ha padecido o es tratado actualmente de alguna enfermedad o incapacidad relacionada con lo siguiente?'), 0, 1, 'L');


    // //     // Contador para seguir la cantidad de elementos en cada columna
    // //     $anchosColumnas = array(5.2, 5.3, 3.95, 7);

    // //     // Contador para seguir la cantidad de elementos en cada columna
    // //     $contador = 0;
    // //     $contador2 = 0;

    // //     // NÃºmero de elementos que deseas en cada columna
    // //     $elementosPorColumna = 4;

    // //     $fpdf->SetY(12.8);
    // //     $fpdf->SetFont('Arial', '', 6.5);

    // //     // Bucle para iterar sobre los resultados y distribuir en columnas
    // //     $resultado = DB::select('SELECT Enfermedad FROM enfermedades');

    // //     foreach ($resultado as $fila) {
    // //         foreach ($fila as $enfermedad) {
    // //             $contador2++;
    // //             // Agregar celda al PDF con el ancho correspondiente
    // //             $fpdf->Cell($anchosColumnas[$contador % count($anchosColumnas)], 0.8, utf8_decode($enfermedad), 0, 0, 'L');

    // //             $contador++;
    // //             // Si el contador alcanza el lÃ­mite de elementos por columna, pasar a la siguiente columna y reiniciar el contador
    // //             if ($contador == $elementosPorColumna) {
    // //                 $fpdf->Ln(); // Salto de lÃ­nea para pasar a la siguiente fila
    // //                 $contador = 0; // Reiniciar el contador
    // //             }
    // //         }
    // //     }

    // //     // Contador para seguir la cantidad de elementos en cada columna
    // //     $contador = 0;

    // //     // NÃºmero de elementos que deseas en cada columna
    // //     $elementosPorColumna = 4;

    // //     // Ancho de cada columna
    // //     $anchoColumna = 4.8;
    // //     $anchoColumna2 = 5.4;
    // //     $anchoColumna3 = 9.7;
    // //     $anchoColumna4 = 10.3;
    // //     $anchoColumna5 = 14.3;
    // //     $anchoColumna6 = 14.9;
    // //     $anchoColumna7 = 18.7;
    // //     $anchoColumna8 = 19.3;
    // //     //PRIMER SI - NO
    // //     $fpdf->SetY(12.35);
    // //     $fpdf->SetX(4.7);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     $fpdf->Cell(2, 0.8, utf8_decode('  SI    NO'), 0, 0, 'L');

    // //     //SEGUNDO SI-NO
    // //     $fpdf->SetX(9.6);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     $fpdf->Cell(2, 0.8, utf8_decode('  SI    NO'), 0, 0, 'L');

    // //     //TERCER SI-NO
    // //     $fpdf->SetX(14.2);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     $fpdf->Cell(2, 0.8, utf8_decode('  SI    NO'), 0, 0, 'L');

    // //     //CUARTO SI-NO
    // //     $fpdf->SetX(18.6);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     $fpdf->Cell(2, 0.8, utf8_decode('  SI    NO'), 0, 0, 'L');


    // //     $fpdf->SetY(12.9);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     //esto genera los cuadros
    // //     foreach ($resultado as $fila) {
    // //     foreach ($fila as $enfermedad) {
    // //     // Agregar cuadro al PDF en las diferentes columnas
    // //     if ($contador % 4 == 0) {
    // //     $fpdf->Rect($anchoColumna, $fpdf->GetY(), 0.5, 0.5);
    // //     $fpdf->Rect($anchoColumna2, $fpdf->GetY(), 0.5, 0.5);
    // //     } elseif ($contador % 4 == 1) {
    // //     $fpdf->Rect($anchoColumna3, $fpdf->GetY(), 0.5, 0.5);
    // //     $fpdf->Rect($anchoColumna4, $fpdf->GetY(), 0.5, 0.5);
    // //     } elseif ($contador % 4 == 2) {
    // //     $fpdf->Rect($anchoColumna5, $fpdf->GetY(), 0.5, 0.5);
    // //     $fpdf->Rect($anchoColumna6, $fpdf->GetY(), 0.5, 0.5);
    // //     } else {
    // //     $fpdf->Rect($anchoColumna7, $fpdf->GetY(), 0.5, 0.5);
    // //     $fpdf->Rect($anchoColumna8, $fpdf->GetY(), 0.5, 0.5);
    // //     $fpdf->Ln(); // Salto de lÃ­nea para pasar a la siguiente fila
    // //     }

    // //     $contador++;
    // //     }
    // //     }
    // //     $fpdf->SetY(12.9);
    // //     $contador2 = 0;
    // //     $resultado2 = DB::select('SELECT Enfermedades FROM fasegurabilidad');

    // //     // Decodificar el JSON a un array asociativo
    // //     $enfermedadesArray = json_decode($resultado2[0]->Enfermedades, true);
    // //     $cantidadPresente = 0;
    // //     $cantidadAusente = 0;



    // //     foreach ($enfermedadesArray as $posicion => $valor) {
    // //         $fpdf->SetFillColor(0, 0, 0);
    // //         // Verificar el valor y establecer el anchoColumna correspondiente
    // //         if ($valor == 1) {
    // //             $cantidadPresente++;
    // //             switch ($contador2 % 4) {
    // //                 case 0:
    // //                     $fpdf->Rect($anchoColumna, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 1:
    // //                     $fpdf->Rect($anchoColumna3, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 2:
    // //                     $fpdf->Rect($anchoColumna5, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 3:
    // //                     $fpdf->Rect($anchoColumna7, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     $fpdf->Ln(); // Salto de lÃ­nea para pasar a la siguiente fila
    // //                     break;
    // //             }
    // //         } else {
    // //             $cantidadAusente++;
    // //             switch ($contador2 % 4) {
    // //                 case 0:
    // //                     $fpdf->Rect($anchoColumna2, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 1:
    // //                     $fpdf->Rect($anchoColumna4, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 2:
    // //                     $fpdf->Rect($anchoColumna6, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     break;
    // //                 case 3:
    // //                     $fpdf->Rect($anchoColumna8, $fpdf->GetY(), 0.5, 0.5, 'F');
    // //                     $fpdf->Ln(); // Salto de lÃ­nea para pasar a la siguiente fila
    // //                     break;
    // //             }
    // //         }

    // //         $contador2++;
    // //     }



    // //     $anchoCelda = 18.5; // Ancho de la celda
    // //     $altoCelda = 0.3;   // Alto de la celda
    // //     $altoCelda2 = 0.4;   // Alto de la celda
    // //     $altoCelda3 = 0.55;   // Alto de la celda

    // //     if($request->pregunta2==1){
    // //         $fpdf->SetY(22.8);
    // //         $respuesta2 =  $fpdf->Rect(2.93, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta3 = '';
    // //         $cual = $request->cual;
    // //     }else{

    // //         $fpdf->SetY(22.8);
    // //         $respuesta2 = '';
    // //         $respuesta3 =  $fpdf->Rect(3.93, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $cual = '';
    // //     }

    // //     if($request->pregunta3==1){
    // //         $fpdf->SetY(23.8);
    // //         $respuesta4 =  $fpdf->Rect(10.2, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta5 = '';
    // //     }else{
    // //         $fpdf->SetY(23.8);
    // //         $respuesta4 = '';
    // //         $respuesta5 =  $fpdf->Rect(11.25, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     if($request->pregunta4==1){
    // //         $fpdf->SetY(24.1);
    // //         $respuesta6 =  $fpdf->Rect(10.2, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(24.1);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(11.25, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     if($request->pregunta5==1){
    // //         $fpdf->SetY(26.26);
    // //         $respuesta6 =  $fpdf->Rect(8, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(26.26);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(9, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }


    // //     if($request->pregunta6==1){
    // //         $fpdf->SetY(26.65);
    // //         $respuesta6 =  $fpdf->Rect(13.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(26.65);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(14.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     if($request->pregunta7==1){
    // //         $fpdf->SetY(27.08);
    // //         $respuesta6 =  $fpdf->Rect(13.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(27.08);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(14.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     if($request->pregunta8==1){
    // //         $fpdf->SetY(27.53);
    // //         $respuesta6 =  $fpdf->Rect(13.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(27.53);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(14.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }


    // //     $fpdf->SetY(22.5);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('2. Ha padecido, padece o es tratado actualmente de alguna enfermedad o condiciÃ³n relacionada con su salud e integridad fÃ­sica diferente a las del numeral anterior?      SI    '.$respuesta2.'     NO    '.$respuesta3), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda2, utf8_decode('Â¿CuÃ¡l?  '.$cual), 0, 'L');


    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('3. Ha tenido o tiene alguna pÃ©rdida funcional o anatÃ³mica, ha padecido accidentes que impidan desempeÃ±ar labores propias de su ocupaciÃ³n o sabe si serÃ¡ hospitalizado o intervenido quirÃºrgicamente?                                         SI          NO     '), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('4. Ha tenido o tiene algÃºn procedimiento no quirÃºrgico pendiente?              SI          NO     '), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('En caso de haber contestado afirmativamente alguna de las preguntas anteriores, detallar: '), 0, 'L');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris

    // //     $fpdf->Rect(1, 24.7, 7, 0.4);
    // //     $fpdf->Cell(7, 0.5, utf8_decode('ENFERMEDAD'), 0, 0, 'L'); // No aÃ±adir salto de lÃ­nea (0)
    // //     $fpdf->Cell(5, 0.5, utf8_decode('FECHA DE DIAGNOSTICO'), 0, 0 , 'L'); // AÃ±adir salto de lÃ­nea (1) al final
    // //     $fpdf->Cell(1, 0.5, utf8_decode('TRATAMIENTO'), 0, 1, 'L'); // AÃ±adir salto de lÃ­nea (1) al final
    // //     $fpdf->Rect(1, 24.7, 12, 0.4);
    // //     $fpdf->Rect(1, 24.7, 19, 0.4);
    // //     $fpdf->Rect(1, 25.1, 7, 0.49);
    // //     $fpdf->Rect(1, 25.1, 12, 0.49);
    // //     $fpdf->Rect(1, 25.1, 19, 0.49);
    // //     $fpdf->Rect(1, 25.6, 7, 0.49);
    // //     $fpdf->Rect(1, 25.6, 12, 0.49);
    // //     $fpdf->Rect(1, 25.6, 19, 0.49);

    // //     //contabilizacion de enfermedades
    // //     $fpdf->SetY(22.08);
    // //     $fpdf->Cell(1, 0.5, utf8_decode('                                                                                                                                                               Enfermedades Positivas: '.$cantidadPresente.'             Enfermedades Negativas: '.$cantidadAusente), 0, 1, 'L'); // AÃ±adir salto de lÃ­nea (1) al final
    // //     //ULTIMO CUADRO
    // //     $fpdf->Rect(1, 26.1, 19, 1.8);
    // //     $fpdf->SetY(26.2);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda2, utf8_decode('5. Â¿Tiene pÃ©rdida de capacidad laboral permanente?      SI         NO    '), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda2, utf8_decode('6. Â¿Le ha sido declarado legalmente pÃ©rdida de capacidad laboral permanente en el 50% o mÃ¡s?         SI         NO    '), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda2, utf8_decode('7. Â¿Le ha sido declarado legalmente pÃ©rdida de capacidad laboral permanente en menos del 50%?      SI         NO    '), 0, 'L');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda3, utf8_decode('8. Â¿EstÃ¡ tramitando el reconocimiento legal de pÃ©rdida de capacidad laboral permanente?                    SI         NO    '), 0, 'L');
    // //     $fpdf->SetFont('Arial', 'B', 6);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('ASEGURADORA SOLIDARIA DE COLOMBIA ENTIDAD COOPERATIVA, SE RESERVA LOS DERECHOS DE SOLICITAR REQUISITOS ADICIONALES SI LO ESTIMA CONVENIENTE, ASI COMO DECLINAR O EXTRAPRIMAR CUALQUIER SOLICITUD QUE NO ESTE DE ACUERDO CON LAS NORMAS DE SELECCIÃN'), 0, 'C');

    // //     //items
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(6, -47.5, utf8_decode('DIRECCION'), 0, 0, 'L');
    // //     $fpdf->Cell(3.47, -47.5, utf8_decode('TELEFONO'), 0,0, 'L');
    // //     $fpdf->Cell(5.5, -47.5, utf8_decode('CIUDAD / MUNICIPIO'), 0,0, 'L');
    // //     $fpdf->Cell(6, -47.5, utf8_decode('DEPARTAMENTO'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(6, 48.3, utf8_decode(' Cra. 8 # 10 - 47'), 0, 0, 'L');
    // //     $fpdf->Cell(3.5, 48.3, utf8_decode('28893390'), 0, 0, 'L');
    // //     $fpdf->Cell(5.4, 48.3, utf8_decode('CALI'), 0, 0, 'L');
    // //     $fpdf->Cell(1, 48.3, utf8_decode('VALLE DEL CAUCA'), 0, 1, 'L');

    // //     //items informacion del asegurado
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(6, -46.5, utf8_decode('TIPO DE DOCUMENTO'), 0,0, 'L');
    // //     $fpdf->Cell(7.5, -46.5, utf8_decode('LUGAR DE EXPEDICIÃN'), 0,0, 'L');
    // //     $fpdf->Cell(6, -46.5, utf8_decode('FECHA DE EXPEDICIÃN'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(6, 47.3, utf8_decode($documento .' - '. $cedula), 0, 0, 'L');
    // //     $fpdf->Cell(7.5,47.3, utf8_decode($request->expedicion), 0, 0, 'L');
    // //     $fpdf->Cell(5.4,47.3, utf8_decode($fechaFormateadaExpedicion), 0, 1, 'L');

    // //     //SEGUNDA LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(4.8, -46.3, utf8_decode('PRIMER APELLIDO'), 0,0, 'L');
    // //     $fpdf->Cell(4.7, -46.3, utf8_decode('SEGUNDO APELLIDO'), 0,0, 'L');
    // //     $fpdf->Cell(6, -46.3, utf8_decode('NOMBRE(S)'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(4.8, 47.1, utf8_decode($firstApellido), 0, 0, 'L');
    // //     $fpdf->Cell(4.7,47.1, utf8_decode($secondApellido), 0, 0, 'L');
    // //     $fpdf->Cell(5.4,47.1, utf8_decode($nombres), 0, 1, 'L');

    // //     //TERCERA LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(6, -46.1, utf8_decode('DIRECCIÃN DOMICILIO'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -46.1, utf8_decode('TELEFONO / FAX'), 0,0, 'L');
    // //     $fpdf->Cell(5.5, -46.1, utf8_decode('CIUDAD / MUNICIPIO'), 0,0, 'L');
    // //     $fpdf->Cell(6, -46.1, utf8_decode('DEPARTAMENTO'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 8);
    // //     $fpdf->Cell(6, 46.9, utf8_decode($domicilio), 0, 0, 'L');
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(3.5,46.9, utf8_decode($telefono), 0, 0, 'L');
    // //     $fpdf->Cell(5.45,46.9, utf8_decode($ciudad), 0, 0, 'L');
    // //     $fpdf->Cell(5.6,46.9, utf8_decode($request->departamentos), 0, 1, 'L');

    // //     //CUARTA LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(8, -45.9, utf8_decode('CORREO ELECTRÃNICO'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -45.9, utf8_decode('TELÃFONO CELULAR'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -45.9, utf8_decode('OTRO TELÃFONO / FAX'), 0,0, 'L');
    // //     $fpdf->Cell(6, -45.9, utf8_decode('NACIONALIDAD'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(8, 46.7, utf8_decode($correo), 0, 0, 'L');
    // //     $fpdf->Cell(3.5,46.7, utf8_decode($celular), 0, 0, 'L');
    // //     $fpdf->Cell(3.45,46.7, utf8_decode($celular2), 0, 0, 'L');
    // //     $fpdf->Cell(5.6,46.7, utf8_decode($request->nacionalidad), 0, 1, 'L');

    // //     //QUINTA LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(6.8, -45.7, utf8_decode('LUGAR Y FECHA DE NACIMIENTO'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -45.7, utf8_decode('SEXO'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -45.7, utf8_decode('ESTADO CIVIL'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(6.8, 46.5, utf8_decode($lNacimiento. ' - '.$fechaFormateadaNacimiento), 0, 0, 'L');
    // //     $fpdf->Cell(3.5,46.5, utf8_decode($genero), 0, 0, 'L');
    // //     $fpdf->Cell(3.4,46.5, utf8_decode($civil), 0, 1, 'L');

    // //     //SEXTO LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(2.5, -45.5, utf8_decode('PESO'), 0,0, 'L');
    // //     $fpdf->Cell(10, -45.5, utf8_decode('ESTATURA'), 0,0, 'L');
    // //     $fpdf->Cell(3, -45.5, utf8_decode('DEPORTES QUE PRACTICA'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 11);
    // //     $fpdf->Cell(1.9, 46.3, utf8_decode($request->peso), 0, 0, 'L');
    // //     $fpdf->Cell(2.8, 46.3, utf8_decode('kg '.$request->estatura), 0, 0, 'L');
    // //     $fpdf->Cell(0.8,46.3, utf8_decode('mts'), 0, 0, 'L');
    // //     $fpdf->SetFont('Arial', '', 11);
    // //     $fpdf->Cell(7,46.1, utf8_decode('Diestro '. $fpdf->Rect(10.8, 10.75, 0.3, 0.3).'       Ambidiestro '.$fpdf->Rect(7.9, 10.75, 0.3, 0.3).'       Zurdo '. $fpdf->Rect(12.7, 10.75, 0.3, 0.3)), 0, 0, 'L');
    // //     if($request->mano_dominante == 'Zurdo'){
    // //         $fpdf->SetFillColor(0, 0, 0);
    // //         $fpdf->Rect(12.7, 10.75, 0.3, 0.3, 'F');
    // //     }else if($request->mano_dominante == 'Diestro'){
    // //         $fpdf->SetFillColor(0, 0, 0);
    // //         $fpdf->Rect(10.8, 10.75, 0.3, 0.3, 'F');
    // //     }else{
    // //         $fpdf->SetFillColor(0, 0, 0);
    // //         $fpdf->Rect(7.9, 10.75, 0.3, 0.3, 'F');


    // //     }

    // //     $fpdf->SetFont('Arial', 'I', 11);

    // //     $fpdf->Cell(0.8,46.3, utf8_decode($ejercicio), 0, 1, 'L');

    // //     //SEPTIMA LINEA ASEGURADO
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->Cell(7.5, -45.5, utf8_decode('OCUPACIÃN DETALLADA'), 0,0, 'L');
    // //     $fpdf->Cell(5.5, -45.5, utf8_decode('VALOR ASEGURADO'), 0,0, 'L');
    // //     $fpdf->Cell(3.5, -45.5, utf8_decode('INGRESOS MENSUALES'), 0,1, 'L');

    // //     //INFORMACION S400
    // //     $fpdf->SetFont('Arial', 'I', 8);
    // //     $fpdf->Cell(1, 46, utf8_decode(''), 0, 0, 'L');
    // //     $fpdf->Cell(9.5, 46, utf8_decode($cargo), 0, 0, 'L');
    // //     $valoraseguradoNumerico = floatval($request->Capital);
    // //     $fpdf->Cell(6,46, utf8_decode('$' . number_format($valoraseguradoNumerico, 0, ',', '.')));
    // //     $salarioNumerico = floatval($salario);
    // //     $fpdf->Cell(3.4,46, utf8_decode('$' . number_format($salarioNumerico, 0, ',', '.')));



    // //     $arrayResultado2 = json_decode($jsonResultado2, true);
    // //     $arrayResultado3 = json_decode($jsonResultado3, true);
    // //     $arrayResultado4 = json_decode($jsonResultado4, true);
    // //     $cellWidth = 5;
    // //     $fpdf->SetY(25.2);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     // Iterar sobre los arrays y agregar las celdas a la tabla
    // //     for ($i = 0; $i < count($arrayResultado2); $i++) {
    // //         // Agregar celda para el primer conjunto de datos
    // //         $fpdf->Cell(7, 0.5, utf8_decode($arrayResultado2[$i]), 0);

    // //         // Agregar celda para el segundo conjunto de datos
    // //         $fpdf->Cell($cellWidth, 0.5, utf8_decode($arrayResultado3[$i]), 0);

    // //         // Agregar celda para el tercer conjunto de datos
    // //         $fpdf->Cell($cellWidth, 0.5, utf8_decode($arrayResultado4[$i]), 0);
    // //         $fpdf->Ln();
    // //     }
    // //     $fpdf->SetY(54.7);
    // //     $fpdf->SetX(18);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->Cell(3.5, -45.5, utf8_decode('1/2'), 0,1, 'C');



    // //     $fpdf->AddPage('P', 'Legal');
    // //     $anchoCelda = 18.5; // Ancho de la celda
    // //     $altoCelda = 0.2;   // Alto de la celda
    // //     $altoCelda4 = 0.3;   // Alto de la celda
    // //     $altoCelda5 = 0.5;   // Alto de la celda




    // //     //este es el que da el color gris y el relleno
    // //     $fpdf->SetFillColor(192, 192, 192);
    // //     $fpdf->SetY(30);
    // //     $fpdf->Rect(1, 1, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 1, 19, 0.4);
    // //     $fpdf->SetY(0.3);
    // //     $fpdf->SetFont('Arial', 'B', 7);

    // //     $fpdf->Cell(19.5, 1.8, utf8_decode('AUTORIZACIÃN PARA CENTRALES DE RIESGO'), 0, 1, 'C');

    // //     //ULTIMO CUADRO
    // //     $fpdf->Rect(1, 1, 19, 1);
    // //     $fpdf->SetY(1.45);
    // //     $fpdf->SetFont('Arial', '', 6);
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Autorizo de manera expresa y voluntaria a ASEGURADORA SOLIDARIA DE COLOMBIA ENTIDAD COOPERATIVA, o a quien represente sus derechos a consultar, almacenar, administrar, transferir, procesar y reportar mi informaciÃ³n a las Centrales de InformaciÃ³n o bases de datos debidamente constituidas respecto al comportamiento crediticio financiero y comercial.'), 0, 'J');

    // //     $fpdf->Rect(1, 2, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 2, 19, 0.4);
    // //     $fpdf->SetY(0.3);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     //TITULO
    // //     $fpdf->Cell(19.5, 3.8, utf8_decode('AUTORIZACIÃN PARA EL TRATAMIENTO DE DATOS PERSONALES'), 0, 1, 'C');

    // //     //RECUADRO BLANCO
    // //     $fpdf->Rect(1, 2, 19, 8.7);
    // //     $fpdf->SetY(2.45);
    // //     $fpdf->SetFont('Arial', '', 6);
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Declaro que ASEGURADORA SOLIDARIA DE COLOMBIA ENTIDAD COOPERATIVA me ha informado: 1) Que la polÃ­tica de tratamiento de datos y el Manual de Tratamiento de Datos Personales se encuentren en la pÃ¡gina web: https://www.aseguradorasolidaria.com.co; 2) Que son facultativas las respuestas a las preguntas sobre datos de niÃ±as, niÃ±os, adolescentes y aquellas que versen sobre datos sensibles y en consecuencia no he sido obligado a responderlas; 3)Que como titular de la informaciÃ³n, me asisten los derechos previstos en las leyes 1266 de 2008 y 1581 de 2012. En especial, me asiste el derecho a conocer, actualizar, rectificar, revocar y suspender las informaciones que se hayan recogido sobre mÃ­, derecho que se puede ejercer a travÃ©s de la lÃ­nea de protecciÃ³n de datos establecida en la pÃ¡gina web y el correo electrÃ³nico tratamientodatos@solidaria.com.co.'), 0, 'J');
    // //         $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //         $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Autorizo de manera previa, expresa e informada a ASEGURADORA SOLIDARIA DE COLOMBIA ENTIDAD COOPERATIVA y/o cualquier sociedad controlada, directamente o indirectamente, que tengan participaciÃ³n accionaria o sean asociados, domiciliadas en Colombia y/o en el exterior, terceros contratados por esta o a quien la represente, en adelante LA ASEGURADORA, que actuarÃ¡ como Responsable del tratamiento y en tal virtud podrÃ¡ recolectar, solicitar, consultar, verificar, almacenar, compartir, enviar, reportar, modificar, transferir, transmitir, actualizar, usar, grabar y conservar mis datos personales, Incluyendo datos financieros, crediticios, sensibles y de menores en calidad de su representante legal, para las siguientes finalidades:'), 0, 'J');
    // //         $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //         $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('i)El trÃ¡mite de mi solicitud de vinculaciÃ³n como consumidor financiero, deudor, contraparte contractual y/o proveedor ii) El proceso de negociaciÃ³n de contratos con LA ASEGURADORA, incluyendo la determinaciÃ³n de primas, la selecciÃ³n de riesgos y toda la fase precontractual iii) La ejecuciÃ³n y el cumplimiento de los contratos que celebre. iv) El control y la prevenciÃ³n del fraude. v) La liquidaciÃ³n y pago de siniestros. vi)Todo lo que involucrÃ© la gestiÃ³n integral del seguro contratado, incluida la gestiÃ³n y cobro de cartera. vii) Controlar el cumplimiento de requisitos para acceder al Sistema General de Seguridad Social Integral viii) La elaboraciÃ³n de estudios tÃ©cnico-actuariales, estadÃ­sticas, encuestas, anÃ¡lisis de tendencias del mercado y, en general, estudios de tÃ©cnica aseguradora. ix) EnvÃ­o de informaciÃ³n relativa a la educaciÃ³n financiera, encuestas de satisfacciÃ³n de clientes y ofertas comerciales de seguros, asÃ­ como de otros servicios inherentes a la actividad aseguradora. x) RealizaciÃ³n de encuestas sobre satisfacciÃ³n en los servicios prestados por LA ASEGURADORA Y/O EL INTERMEDIARIO DE SEGUROS, xi) Intercambio o remisiÃ³n de informaciÃ³n en virtud de tratados y acuerdos internacionales e intergubernamentales suscritos por Colombia, xii) La prevenciÃ³n y control del lavado de activos y la financiaciÃ³n del terrorismo. xiii) Recolectar mis datos personales sensibles como: datos biomÃ©tricos, las huellas dactilares, la Historia ClÃ­nica y datos sobre mi estado de salud, aÃºn despuÃ©s de mi fallecimiento, entendiÃ©ndose la posibilidad de obtener copia de mi historia clÃ­nica, siempre y cuando se cumpla con lo previsto en el artÃ­culo 6 de la ley 1581 de 2012. xiv) Recolectar los datos personales de mis hijos menores de edad en mi calidad de su representante legal, siempre y cuando se cumpla con el interÃ©s prevalente del menor conforme al artÃ­culo 12 del decreto 1377 de 2013.xv) Transferir mis datos personales a terceros paÃ­ses siempre que se requiera cumplir las finalidades descritas o se encuentre estipulada por el artÃ­culo 26 de la ley 1581 de 2012.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('El tratamiento podrÃ¡ ser realizado directamente por LA ASEGURADORA o por lo encargados del tratamiento que ella considere necesarios.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Que los datos podrÃ¡n ser compartidos, transmitidos, entregados, transferidos o divulgados para las finalidades mencionadas, a: i) Las personas jurÃ­dicas que tienen la calidad de filiales, subsidiarias o vinculadas, o de matriz de LA ASEGURADORA. ii) Los operadores necesarios para el cumplimiento de derechos y obligaciones derivados de los contratos celebrados con LA ASEGURADORA Y/O EL INTERMEDIARIO DE SEGUROS, tales como: ajustadores, call centers, investigadores, compaÃ±Ã­as de asistencia, abogados externos, entre otros. iii) LOS INTERMEDIARIOS DE SEGUROS que intervengan en el proceso de celebraciÃ³n, ejecuciÃ³n y terminaciÃ³n del contrato de seguro. iv) Las personas con las cuales LA ASEGURADORA Y/O EL INTERMEDIARIO DE SEGUROS adelante gestiones para efectos de celebrar contratos de Coaseguro o Reaseguro. v)FASECOLDA, INVERFAS S.A. y el INIF, personas jurÃ­dicas que administran bases de datos para efectos de prevenciÃ³n y control de fraudes, la selecciÃ³n de riesgos, y control de requisitos para acceder al Sistema General de Seguridad Social Integral, asÃ­ como la elaboraciÃ³n de estudios estadÃ­sticos actuariales RESPONSABLES Y ENCARGADOS DEL TRATAMIENTO DE LA INFORMACIÃN: Que el Responsable del tratamiento de la informaciÃ³n es LA ASEGURADORA. En todo caso, los encargados del Tratamiento de los datos que se compartan, transfieran, transmitan, entreguen o divulguen, en desarrollo de lo previsto en el literal v) del pÃ¡rrafo anterior, serÃ¡n entre otros:'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('a) FASECOLDA cuya direcciÃ³n es Carrera 7 No. 26 - 20 Pisos 11 y 12, email: fasecolda@fasecolda.com Tel. 3443080 de la ciudad de BogotÃ¡ D.C. b) INVERFAS S.A. cuya direcciÃ³n es Carrera 7 No. 26 - 20 Piso 11, email: inverfas@fasecolda.com Tel. 3443080 de la ciudad de BogotÃ¡ D.C. c) INIF - Instituto Nacional de InvestigaciÃ³n y PrevenciÃ³n del Fraude al Seguro cuya direcciÃ³n es Carrera 13 No. 37-43, piso 8, email: directoroperativo@inif.com.co Tel. 2320105 de la ciudad de BogotÃ¡ D.C.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Con la firma en el presente documento, de manera expresa AUTORIZO el Tratamiento de los datos personales, incluidos los sensibles y de menores en calidad de su representante legal, y autorizo, de ser necesario, la transferencia nacional e internacional de los mismos, por las personas, para las finalidades y en los tÃ©rminos que me fueron informados en este documento.'), 0, 'J');
    // //     $fpdf->Rect(1, 10.7, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 10.7, 19, 0.4);
    // //     $fpdf->SetY(9);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     //TITULO
    // //     $fpdf->Cell(19.5, 3.8, utf8_decode('CANALES AUTORIZADOS'), 0, 1, 'C');
    // //     //RECUADRO BLANCO
    // //     $fpdf->Rect(1, 10.7, 19, 1.6);
    // //     $fpdf->SetY(11.2);
    // //     $fpdf->SetFont('Arial', '', 6);
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Declaro que ASEGURADORA SOLIDARIA DE COLOMBIA ENTIDAD COOPERATIVA me ha informado: 1) Que la polÃ­tica de tratamiento de datos y el Manual de Tratamiento de Datos Personales se encuentren en la pÃ¡gina web: https://www.aseguradorasolidaria.com.co; 2) Que son facultativas las respuestas a las preguntas sobre datos de niÃ±as, niÃ±os, adolescentes y aquellas que versen sobre datos sensibles y en consecuencia no he sido obligado a responderlas; 3)Que como titular de la informaciÃ³n, me asisten los derechos previstos en las leyes 1266 de 2008 y 1581 de 2012. En especial, me asiste el derecho a conocer, actualizar, rectificar, revocar y suspender las informaciones que se hayan recogido sobre mÃ­, derecho que se puede ejercer a travÃ©s de la lÃ­nea de protecciÃ³n de datos establecida en la pÃ¡gina web y el correo electrÃ³nico tratamientodatos@solidaria.com.co.'), 0, 'J');

    // //     $fpdf->Rect(1, 12.3, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 12.3, 19, 0.4);
    // //     $fpdf->SetY(9);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     //TITULO
    // //     $fpdf->Cell(19.5, 7, utf8_decode('CLÃUSULA DE ASESORÃA'), 0, 1, 'C');
    // //     //RECUADRO BLANCO
    // //     $fpdf->Rect(1, 12.7, 19, 7.3);
    // //     $fpdf->SetY(12.8);
    // //     $fpdf->SetFont('Arial', '', 6);
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('En cumplimiento de la Ley 1581 de 2012, las partes manifiestan expresamente el cumplimiento de la normativa colombiana de protecciÃ³n de datos personales garantizando a la Aseguradora que, en el momento de la obtenciÃ³n de los datos, el tomador cumpliÃ³ con las obligaciones de informaciÃ³n y obtenciÃ³n del consentimiento de los artÃ­culos 6 y 9 de la Ley 1581 de 2012 y sus decretos reglamentarios, asÃ­ como que la Aseguradora cumple con las obligaciones de seguridad dispuestas en la normativa vigente. Para el cumplimiento de la Ley 1581 de 2012 y sus decretos reglamentarios el tomador, cumplirÃ¡ las siguientes obligaciones:'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('1. Garantizar al asegurado, en todo tiempo, el pleno y efectivo ejercicio del derecho de habeas data.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('2. Solicitar y conservar, en las condiciones previstas en la presente ley, copia de la respectiva autorizaciÃ³n otorgada por el Asegurado, dicha finalidad deberÃ¡ incluir la actividad aseguradora, entendiÃ©ndose como el proceso de suscripciÃ³n, recaudo e indemnizaciÃ³n. La autorizaciÃ³n referida tambiÃ©n deberÃ¡ incluir la facultad de consultar al Asegurado en centrales de informaciÃ³n, asÃ­ como la autorizaciÃ³n requerida por la Ley 2300 de 2023 en los tÃ©rminos indicados por LA ASEGURADORA en el tÃ­tulo de Canales Autorizados del presente documento.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('3. Garantizar que la informaciÃ³n que se suministre a la Aseguradora sea veraz, completa, exacta, actualizada, comprobable y comprensible.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('4. Actualizar la informaciÃ³n, comunicando de forma oportuna a la Aseguradora, todas las novedades respecto de los datos que previamente le haya suministrado y adoptar las demÃ¡s medidas necesarias para que la informaciÃ³n suministrada a este se mantenga actualizada.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('5. Rectificar la informaciÃ³n cuando sea incorrecta y comunicar lo pertinente a la Aseguradora.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('6. Suministrar a la Aseguradora, segÃºn el caso, Ãºnicamente datos cuyo Tratamiento estÃ© previamente autorizado de conformidad con lo previsto en la presente ley.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('7. Exigir a la Aseguradora en todo momento, el respeto a las condiciones de seguridad y privacidad de la informaciÃ³n del Asegurado.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda5, utf8_decode('Para el cumplimiento de la Ley 1581 de 2012 y sus decretos reglamentarios la Aseguradora, cumplirÃ¡ las siguientes obligaciones.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('1. Solo tratarÃ¡ los datos personales a los que tenga acceso de conformidad con las instrucciones que le imparta el Tomador de conformidad con sus PolÃ­ticas de tratamiento de datos personales.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('2. La finalidad con la que tratarÃ¡ los datos serÃ¡ la seÃ±alada por el Tomador y en todo caso serÃ¡ la compatible con la actividad aseguradora, entendiÃ©ndose como el proceso de suscripciÃ³n, recaudo e indemnizaciÃ³n.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('3. La Aseguradora, asÃ­ como todo el personal a su disposiciÃ³n tratarÃ¡n con CONFIDENCIALIDAD la informaciÃ³n personal conocida durante la ejecuciÃ³n del contrato de seguro.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('4. Instruir e impartir a todo su personal dependiente que desempeÃ±en funciones relacionadas con el uso de los datos personales, instrucciones precisas sobre los procedimientos y las medidas de Ã­ndole tÃ©cnica, administrativa y organizacional, asÃ­ como las obligaciones como encargados del tratamiento, realizando la adecuada sensibilizaciÃ³n en el personal sobre seguridad de la informaciÃ³n y el derecho de protecciÃ³n de datos personales de los Asegurados.'), 0, 'J');

    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('ParÃ¡grafo: Este acuerdo es aplicable para los Contratos de Seguro, donde el tomador es diferente al asegurado. Aseguradora Solidaria de Colombia E.C. adquiere la calidad de encargado de la informaciÃ³n y/o los datos del grupo asegurado, suministrados por el tomador de la pÃ³liza, quien es el responsable de la informaciÃ³n.'), 0, 'J');

    // //     $fpdf->Rect(1, 20, 19, 0.4, 'F');
    // //     $fpdf->SetDrawColor(0, 0, 0);
    // //     //borde del contorno gris
    // //     $fpdf->Rect(1, 20, 19, 0.4);
    // //     $fpdf->SetY(9);
    // //     $fpdf->SetFont('Arial', 'B', 7);
    // //     //TITULO
    // //     $fpdf->Cell(19.5, 22.5, utf8_decode('FIRMA Y HUELLA'), 0, 1, 'C');
    // //     //RECUADRO BLANCO
    // //     $fpdf->Rect(1, 20, 19, 7.3);
    // //     $fpdf->SetY(20.3);
    // //     $fpdf->SetFont('Arial', '', 6);
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Para efectos de la presente solicitud, declaro expresamente lo siguiente:'), 0, 'J');

    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('1. Poseo pÃ³liza de seguro vigente con extraprima:    SI        NO    '), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('2. He sido rechazado por alguna CompaÃ±Ã­a aseguradora en el momento de presentar una solicitud de seguro:    SI        NO    '), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('3. Tanto mi profesiÃ³n u oficio declarados en la presente solicitud, son lÃ­citas y las ejerzo de los marcos legales y no practico deportes o aficiones que afecten mi integridad.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('4. Los dineros utilizados para pagar la prima de seguros no provienen de ninguna actividad ilÃ­cita de las contempladas en el CÃ³digo Penal Colombiano.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda4, utf8_decode('5. Las declaraciones contenidas en este documento son exactas, completas y verÃ­dicas en la forma que aparecen descritas, por lo tanto, la falsedad, omisiÃ³n, error o reticencia en ellas tendrÃ¡n las consecuencias estipuladas en los ArtÃ­culos 1058 y 1158 del cÃ³digo de Comercio, AsÃ­ mismo declaro que el presente documento es diligenciado de manera personal o es diligenciado bajo mi consentimiento.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Como constancia de haber leÃ­do, entendido y aceptado lo anterior, declaro que la informaciÃ³n que he suministrado es exacta en Todas sus partes y firmo el presente documento a'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');

    // //     $fechaActual = Carbon::now();

    // //     // Obtener el dÃ­a, el mes y el aÃ±o desde la fecha actual
    // //     $dia = $fechaActual->day;
    // //     $numeroMes = $fechaActual->locale('fr')->format('m');
    // //     $aÃ±o = $fechaActual->year;
    // //     $nombreMes = $meses[$numeroMes];





    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('los '.$dia.' dÃ­as del mes de '.$nombreMes.' del aÃ±o '.$aÃ±o.' en la ciudad de Cali.'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('___________________________________'), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Firma del Solicitante'), 0, 'J');

    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode($nombres.' '. $firstApellido.' '. $secondApellido), 0, 'J');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Nombre del Solicitante'), 0, 'J');


    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 0.2, utf8_decode(''), 0, 1, 'C');
    // //     $fpdf->Cell(0.25, 1.8, utf8_decode(''), 0, 0, 'C');

    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('No. CÃ©dula: '.$cedula), 0, 'J');
    // //     $fpdf->Rect(8, 24, 2.5, 3);
    // //     $fpdf->SetY(26.2);
    // //     $fpdf->SetX(7.75);
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->MultiCell(3,0.4, utf8_decode('HUELLA ÃNDICE DERECHO'), 0, 'C');

    // //     $fpdf->SetY(24);
    // //     $fpdf->SetX(11);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Firma Funcionario (SuscripciÃ³n): ____________________________'), 0, 'J');

    // //     $fpdf->SetY(24.5);
    // //     $fpdf->SetX(11);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('__ Aprobado'), 0, 'J');
    // //     $fpdf->SetY(24.9);
    // //     $fpdf->SetX(11);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('__ Aplazado'), 0, 'J');
    // //     $fpdf->SetY(25.3);
    // //     $fpdf->SetX(11);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('__ Rechazado'), 0, 'J');
    // //     $fpdf->SetY(25.7);
    // //     $fpdf->SetX(11);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('__ Extraprima por Salud'), 0, 'J');


    // //     $fpdf->SetY(24.5);
    // //     $fpdf->SetX(15);
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Fecha:'), 0, 'J');
    // //     $fpdf->SetY(24.8);
    // //     $fpdf->SetX(15.5);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('DÃ­a '.$dia.'/ Mes '.$numeroMes.'/ AÃ±o '.$aÃ±o), 0, 'J');

    // //     $fpdf->SetY(25.4);
    // //     $fpdf->SetX(15);
    // //     $fpdf->SetFont('Arial', 'B', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('Observaciones:'), 0, 'J');

    // //     $fpdf->SetY(25.9);
    // //     $fpdf->SetX(15);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('_____________________________'), 0, 'J');
    // //     $fpdf->SetY(26.3);
    // //     $fpdf->SetX(15);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('_____________________________'), 0, 'J');
    // //     $fpdf->SetY(26.7);
    // //     $fpdf->SetX(15);
    // //     $fpdf->MultiCell($anchoCelda, $altoCelda, utf8_decode('_____________________________'), 0, 'J');
    // //     $fpdf->SetFillColor(0, 0, 0);
    // //     if($request->pregunta9==1){
    // //         $fpdf->SetY(20.73);
    // //         $respuesta6 =  $fpdf->Rect(6.55, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(20.73);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(7.35, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     if($request->pregunta10==1){
    // //         $fpdf->SetY(21.02);
    // //         $respuesta6 =  $fpdf->Rect(12.21, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //         $respuesta7 = '';
    // //     }else{
    // //         $fpdf->SetY(21.02);
    // //         $respuesta6 = '';
    // //         $respuesta7 =  $fpdf->Rect(13.02, $fpdf->GetY(), 0.25, 0.25, 'F');
    // //     }

    // //     $fpdf->SetY(57.2);
    // //     $fpdf->SetX(18);
    // //     $fpdf->SetFont('Arial', '', 8);
    // //     $fpdf->Cell(3.5, -45.5, utf8_decode('2/2'), 0,1, 'C');

    // //     DB::update("UPDATE pagare SET AdjuntarAsegur = ? WHERE ID = $request->ID", [
    // //         1
    // //     ]);
    // //     $consecutivo = 0;
    // //     while (true) {
    // //         $consecutivo++;

    // //         $nombre = 'Formato-Asegurabilidad-'.$cedula.'-' . $consecutivo. '.pdf';
    // //         $nombreArchivo = 'Storage/files/asegurabilidad_generados/'.$nombre;

    // //         if (!file_exists($nombreArchivo)) {
    // //             break;
    // //         }
    // //     }

    // //     $fpdf->Output('I', 'Formato-Asegurabilidad-'.$cedula.'-' . $consecutivo. '.pdf');
    // //     $fpdf->Output('F', $nombreArchivo);



    // //     exit;
    // // }

    // public function adjuntarAsegurabilidad(Request $request, $id)
    // {

    //     // Verificar si se subiÃ³ un archivo
    //     if (!$request->hasFile('DocuAsegurabilidad')) {
    //         return back()->withErrors(['message' => 'No se subiÃ³ ningÃºn archivo.']);
    //     }

    //     $file = $request->file('DocuAsegurabilidad');
    //     $filename = $file->getClientOriginalName();

    //     // Verificar si el archivo es PDF
    //     if ($file->getClientOriginalExtension() !== 'pdf') {
    //         return back()->withErrors(['message' => 'Solo se pueden subir archivos PDF.']);
    //     }

    //     // Obtener cÃ©dula de la persona asociada al ID
    //     $resultCedula = DB::select('SELECT Cedula_Persona FROM pagare WHERE ID = ?', [$id]);

    //     $cedula = $resultCedula[0]->Cedula_Persona ?? null;
    //     if (is_null($cedula)) {
    //         return back()->withErrors(['message' => 'No se encontrÃ³ una cÃ©dula asociada con este ID.']);
    //     }
    //     // Contar archivos existentes y crear nuevo nombre de archivo
    //     $existingFilesCount = DB::table('pagare')
    //         ->where('Cedula_Persona', $cedula)
    //         ->where('NomAsegur', 'like', 'Formato-Asegurabilidad-' . $cedula . '%')
    //         ->count();
    //        $asd = 'Formato-Asegurabilidad-' . $cedula;
    //        $newFilename = 'Formato-Asegurabilidad-' . $cedula . '-' . ($existingFilesCount + 1) . '.pdf';

    //        $cedula = DB::select("SELECT Cedula_Persona, deuda, edad FROM pagare WHERE ID =$id");
    //        $cc = $cedula[0]->Cedula_Persona;
    //        $deudaestado = $cedula[0]->deuda;
    //        $edadestado = $cedula[0]->edad;


    //        if($deudaestado == 1){
    //         $deuda = DB::select("SELECT * FROM pagare WHERE deuda = 1 && Cedula_Persona =$cc");
    //         foreach ($deuda as $registro) {
    //             $sql6 = DB::table('pagare')
    //             ->where('ID', $registro->ID)
    //             ->update([
    //                 'AdjuntarAsegur' => 2,
    //                 'NomAsegur' => $newFilename
    //             ]);
    //         }
    //        }else{
    //         $deuda = DB::select("SELECT * FROM pagare WHERE deuda = 2 && Cedula_Persona =$cc");


    //         foreach ($deuda as $registro) {
    //             $sql6 = DB::table('pagare')
    //             ->where('ID', $registro->ID)
    //             ->update([
    //                 'AdjuntarAsegur' => 2,
    //                 'NomAsegur' => $newFilename
    //             ]);
    //         }
    //        }

    //        if($edadestado == 1){
    //             $sql6 = DB::update("UPDATE pagare SET NomAsegur = ? WHERE ID = ?", [
    //                 $newFilename, $id
    //             ]);
    //        }

    //     // Subir el archivo
    //     $dir = 'Storage/files/asegurabilidad/';
    //     if (!$file->move($dir, $newFilename)) {
    //         return back()->withErrors(['message' => 'Error al subir el archivo.']);
    //     }




    //     //$consultapagare = DB::select("SELECT * FROM pagare WHERE ")

    //     // Actualizar base de datos


    //     $sql6 = DB::update("UPDATE pagare SET AdjuntarAsegur = ? WHERE ID = ?", [
    //         2, $id
    //     ]);


    //         $usuarioActual = Auth::user();
    //         $nombre = $usuarioActual->name;
    //         $rol = $usuarioActual->rol;
    //         $pagareID = DB::select("SELECT ID FROM pagare WHERE ID = ?", [$id]);
    //         date_default_timezone_set('America/Bogota');
    //         $ip = $_SERVER['REMOTE_ADDR'];
    //         $fechaHoraActual = date('Y-m-d H:i:s');
    //         $agencia = $usuarioActual->agenciau;
    //         $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'AdjuntÃ³AsegurabilidadPagare', ?, ?, ?, ?)", [
    //             null,
    //             $nombre,
    //             $rol,
    //             $agencia,
    //             $fechaHoraActual,
    //             $pagareID[0]->ID,
    //             null,
    //             $ip
    //         ]);


    //         return back()->with("correcto3", "Â¡Se adjuntÃ³ correctamente el Fomato de Asegurabilidad!");

    // }




    // public function data10(){

    //     $usuarioActual = Auth::user();
    //     $agenciaU = $usuarioActual->agenciau;
    //     $agenciaU = "Cali";
    //     $user = DB::select("
    //     SELECT *
    //     FROM persona A
    //     JOIN pagareprueba B ON A.ID = B.ID_Persona
    //     WHERE B.Ordinario = 0
    //     /* AND B.NombreAgencia = '$agenciaU' */
    //     ORDER BY A.ID ASC

    // ");


    // $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

    // // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
    // $dataEnfermedades = [];
    // foreach ($enfermedades as $enfermedad) {
    //     $dataEnfermedades[] = [
    //         'id' => $enfermedad->ID_Enferm,
    //         'nombre' => $enfermedad->Enfermedad,
    //     ];
    // }

    // return datatables()->of($user)
    //     ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
    //         $checkboxes = '<div class="row">';

    //         $numEnfermedades = count($dataEnfermedades);
    //         $numColumnas = 3;
    //         $numFilas = ceil($numEnfermedades / $numColumnas);

    //         for ($col = 0; $col < $numColumnas; $col++) {
    //             $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

    //             for ($fila = 0; $fila < $numFilas; $fila++) {
    //                 $index = $fila + $col * $numFilas;

    //                 if ($index < $numEnfermedades) {
    //                     $enfermedad = $dataEnfermedades[$index];

    //                     $checkboxes .= '<label for="enfermedad_' . $index . '">
    //                                         <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
    //                                         <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="'. $enfermedad['nombre'] .'">
    //                                         ' . $enfermedad['nombre'] . '
    //                                     </label><br>';
    //                 }
    //             }

    //             $checkboxes .= '</div>';
    //         }

    //         $checkboxes .= '</div>';

    //         return $checkboxes;
    //     })
    //     ->rawColumns(['Enfermedades'])
    //     ->toJson();

    // }

    // public function datosPagare() {

    //     $usuarioActual = Auth::user();
    //     $agenciaU = $usuarioActual->agenciau;
    //     $agenciaU = "Cali";
    //     $noagencia = DB::select("SELECT NumAgencia FROM agencias WHERE NameAgencia = ?",[$agenciaU]);
    //     $noagencia = $noagencia[0]->NumAgencia;
    //     $noagencia = "30";

    //     //api intentos
    //     $attempts = 0;
    //     $maxAttempts = 3; //INTENTOS MAXIMOS
    //     $retryDelay = 300; // Milisegundos
    //     $datapagare = null;
    //     do {
    //         try {
    //             $response = Http::get('http://app.coopserp.com/conexion_s400/api/infopagare/'.$noagencia);
    //              //$response = Http::get('http://app.coopserp.com/conexion_s400/api/infopagare/');
    //             $datapagare = $response->json()['pagares'];
    //             break;
    //         } catch (\Exception $e) {

    //             $attempts++;
    //             usleep($retryDelay * 1000);
    //         }
    //         } while ($attempts < $maxAttempts);


    //     if($datapagare === null) {
    //         $user = DB::select("
    //         SELECT *
    //         FROM persona A
    //         JOIN pagareprueba B ON A.ID = B.ID_Persona
    //         WHERE B.Ordinario = 0 && B.NombreAgencia = '$agenciaU'
    //         ORDER BY A.ID ASC");


    //         $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

    //         // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
    //         $dataEnfermedades = [];
    //         foreach ($enfermedades as $enfermedad) {
    //             $dataEnfermedades[] = [
    //                 'id' => $enfermedad->ID_Enferm,
    //                 'nombre' => $enfermedad->Enfermedad,
    //             ];
    //         }

    //         return datatables()->of($user)
    //             ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
    //                 $checkboxes = '<div class="row">';

    //                 $numEnfermedades = count($dataEnfermedades);
    //                 $numColumnas = 3;
    //                 $numFilas = ceil($numEnfermedades / $numColumnas);

    //                 for ($col = 0; $col < $numColumnas; $col++) {
    //                     $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

    //                     for ($fila = 0; $fila < $numFilas; $fila++) {
    //                         $index = $fila + $col * $numFilas;

    //                         if ($index < $numEnfermedades) {
    //                             $enfermedad = $dataEnfermedades[$index];

    //                             $checkboxes .= '<label for="enfermedad_' . $index . '">
    //                                                 <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
    //                                                 <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="'. $enfermedad['nombre'] .'">
    //                                                 ' . $enfermedad['nombre'] . '
    //                                             </label><br>';
    //                         }
    //                     }

    //                     $checkboxes .= '</div>';
    //                 }

    //                 $checkboxes .= '</div>';

    //                 return $checkboxes;
    //             })
    //             ->rawColumns(['Enfermedades'])
    //             ->toJson();
    //     }


    //     // Iterar sobre cada registro en $data y almacenar en la base de datos
    //     foreach ($datapagare as $registro) {
    //         //variables a usar:
    //         $agencia = $registro['AGENCIA'];
    //         $cuenta = $registro['CUENTA'];
    //         $cedula = $registro['CEDULA'];
    //         $nombres = $registro['NOMBRES'];
    //         $idpagare = $registro['IDPAGARE'];
    //         $linea = $registro['LINEA'] . ' - ' . $registro['LINEANOM'];
    //         $capital = $registro['CAPITAL'];
    //         $ncuotas = $registro['NCUOTAS'];
    //         $vcuotas = $registro['VCUOTAS'];
    //         $tasaAPI = $registro['TASA'];
    //         $estado = $registro['ESTADO'];
    //         $nomina = $registro['NOMINA'];
    //         $entidad = $registro['ENTIDAD'];
    //         $dependencia = $registro['DEPENDENCIA'];
    //         $direccion = $registro['DIRECCION'];
    //         $fijo = $registro['FIJO'];
    //         $pcuota = $registro['PCUOTA'];
    //         $ucuota = $registro['UCUOTA'];
    //         $usuario = $registro['USUARIO'];
    //         $garantia = $registro['GARANTIA'];
    //         $interes = $registro['INTERES'];
    //         $correo = $registro['CORREO'];
    //         $celular = $registro['CELULAR'];
    //         $nomNomina = $registro['NOMNOMINA'];

    //         $foundMatchingPagare = false;


    //         $existingPagare = DB::select('SELECT ExisteDatacredito, ID_Pagare, CuentaCoop FROM pagareprueba WHERE CuentaCoop = ? AND ID_Pagare = ?', [$registro['CUENTA'], $registro['IDPAGARE']]);

    //         if (!empty($existingPagare)) {

    //             $existePersona = DB::select('SELECT Cedula, Score FROM persona WHERE Cedula = ?', [$cedula]);
    //             foreach ($existingPagare as $pagare) {
    //                 if($pagare->ExisteDatacredito == 1 && !empty($existePersona)){
    //                     DB::delete("DELETE FROM pagareprueba WHERE CuentaCoop = ? AND ID_Pagare = ?",[$registro['CUENTA'], $registro['IDPAGARE']]);
    //                     $foundMatchingPagare = true;
    //                 }


    //                 if($pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != null && $pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != "NULL" && $pagare->ExisteDatacredito == 2 && $existePersona[0]->Score != "null"){
    //                     DB::delete("DELETE FROM pagareprueba WHERE CuentaCoop = ? AND ID_Pagare = ?",[$registro['CUENTA'], $registro['IDPAGARE']]);
    //                     $foundMatchingPagare = true;
    //                 }

    //                 if ($pagare->ID_Pagare == $idpagare && $pagare->CuentaCoop == $cuenta) {

    //                     // Si encuentra un pagare con los mismos ID_Pagare y CuentaCoop, marca la bandera como verdadera.
    //                     $foundMatchingPagare = true;
    //                 }
    //             }

    //         }
    //         else{

    //         if (!$foundMatchingPagare) {

    //             $existingPerson = DB::select('SELECT Cedula, ID, Score FROM persona WHERE Cedula = ?', [$registro['CEDULA']]);

    //             //EXTRAIGO LA INFORMACION DE LA API
    //             $cuota1 = $registro['PCUOTA'];
    //             $cuotaFinal = $registro['UCUOTA'];

    //             //PARA QUE LAS FECHAS SE CONVIERTAN EN TEXTO
    //             $codigoAnio = substr($cuota1, 0, 1);
    //             $anio = substr($cuota1, 1, 2);
    //             $mes = substr($cuota1, 3, 2);
    //             $dia = substr($cuota1, 5, 2);

    //             $codigoAnio2 = substr($cuotaFinal, 0, 1);
    //             $anio2 = substr($cuotaFinal, 1, 2);
    //             $mes2 = substr($cuotaFinal, 3, 2);
    //             $dia2 = substr($cuotaFinal, 5, 2);

    //             $anioReal = 2000 + (int)$anio;

    //             $anioReal2 = 2000 + (int)$anio2;

    //             $meses = [
    //                 '01' => 'Enero', '02' => 'Febrero', '03' => 'Marzo',
    //                 '04' => 'Abril', '05' => 'Mayo', '06' => 'Junio',
    //                 '07' => 'Julio', '08' => 'Agosto', '09' => 'Septiembre',
    //                 '10' => 'Octubre', '11' => 'Noviembre', '12' => 'Diciembre'
    //             ];

    //             $nombreMes = $meses[$mes];

    //             $nombreMes2 = $meses[$mes2];

    //             //FECHAS CON FORMATO TEXTO
    //             $fechaFormateada = $nombreMes . " " . (int)$dia . " del " . $anioReal;

    //             $fechaFormateada2 = $nombreMes2 . " " . (int)$dia2 . " del " . $anioReal2;

    //             //VALIDO SI LA NOMINA EXISTE EN LA BASE DE DATOS LOCAL PARA ASIGNAR FECHA DE REPORTE POSTERIOR
    //             $NOMINA = $registro['NOMINA'];
    //             $DEPENDENCIA = $registro['DEPENDENCIA'];
    //             $ENTIDAD = $registro['ENTIDAD'];

    //             // API S400 PARA VALIDAR FECHANACIMIENTO Y DEUDATOTAL
    //             $url = env('URL_SERVER_API');
    //             $attempts = 0;
    //             $maxAttempts = 3; // INTENTOS MÃXIMOS
    //             $retryDelay = 500; // Milisegundos

    //             $estadoEdad = null;
    //             $deudatotalAPI = null;

    //             do {
    //                 try {
    //                     $response = Http::get($url . 'fechan/' . $registro['CUENTA']);
    //                     $data = $response->json();

    //                     $response2 = Http::get($url . 'deudatotal/' . $registro['CUENTA']);
    //                     $data2 = $response2->json();

    //                     $estadoEdad = $data['status'];
    //                     $deudatotalAPI = $data2['deudatotal'];

    //                     // Si llegamos aquÃ­, la solicitud fue exitosa, podemos salir del bucle.
    //                     break;
    //                 } catch (\Exception $e) {
    //                     $attempts++;
    //                     usleep($retryDelay * 1000);
    //                 }
    //             } while ($attempts < $maxAttempts);

    //                 //ES EL TOTAL DE LO DE ARRIBA MAS EL CAPITAL QUE APENAS SE SOLICITA
    //                 $deudatotal = $deudatotalAPI + $registro['CAPITAL'];
    //                 if($estadoEdad == 200 && $deudatotal >= 20000000){
    //                     $edad = 1;
    //                     $deuda = 1;
    //                 }else if($estadoEdad == 200 && $deudatotal >= 50000000){
    //                     $edad = 1;
    //                     $deuda = 2;
    //                 }else if ($estadoEdad == 200){
    //                     $edad = 1;
    //                     $deuda = null;
    //                 }else if ($deudatotal >= 20000000){
    //                     $edad = null;
    //                     $deuda = 1;
    //                 }else if ($deudatotal >= 50000000){
    //                     $edad = null;
    //                     $deuda = 2;
    //                 }else{
    //                     $edad = null;
    //                     $deuda = null;
    //                 }

    //             //VALIDO SI EXISTE EN LA BD DE DATACREDITO
    //             if (!empty($existingPerson)) {

    //                 $persona = $existingPerson[0];
    //                 if (($persona->Score !== null) && ($persona->Score !== "NULL") && ($persona->Score !== "null")) {

    //                         //VALIDO SI EL SCORE ES MAYOR O IGUAL DE 650
    //                         if ($persona->Score >= 650) {

    //                             //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
    //                             $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);

    //                             //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
    //                             if (!empty($existeNominaDepen)) {

    //                                 $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);
    //                                 //FECHA MES ACTUAL
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA DE REPORTE DE LA NOMINA
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);

    //                                     //se asigna la fecha de reporte de manera automatica
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


    //                                     //fecha primera cuota
    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


    //                                     //interes proporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                                     // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                                     $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                                     // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                                     $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                                     // Comparar si son iguales
    //                                     //resultado
    //                                     $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;

    //                                     // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                                     // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                                     $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                                     // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                                     $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

    //                                     // Comprobar si todas las condiciones relevantes son verdaderas
    //                                     $resultado1 = $condicion1 && $condicion3 ? true : false;

    //                                     // Primera condiciÃ³n externa
    //                                     if ($fechadelCredito->gt($fechaReporte)) {
    //                                         $resultado2 = false;
    //                                     } else {
    //                                         // CondiciÃ³n interna
    //                                         $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                                         $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                                         $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                                         if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                                             $resultado2 = true;
    //                                         } else {
    //                                             $resultado2 = false;
    //                                         }
    //                                     }


    //                                     // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                                     $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                                     // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 31 dÃ­as o menos
    //                                     $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

    //                                     // Resultado basado en las condiciones
    //                                     $resultado3 = ($condicion3 || $condicion4) ? true : false ;


    //                                     // Calcular el Ãºltimo dÃ­a del mes de B14
    //                                     $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                                     // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                                     $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                                     // Verificar las condiciones
    //                                     $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                                     $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                                     $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                     // Evaluar si todas las condiciones son verdaderas
    //                                     $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false ;


    //                                     // Primer nivel de comprobaciÃ³n
    //                                     if ($fechadelCredito->gt($fechaReporte)) {
    //                                         $resultado5 = false;
    //                                     } else {
    //                                         // Segundo nivel de comprobaciÃ³n
    //                                         $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                                         $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                                         $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                                         $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                         $resultado5 = $condicionA && $condicionB ? true : false ;
    //                                     }

    //                                     $NoAgencia = $registro['AGENCIA'];
    //                                     //dd($fechaReporteString, $fechaStringCredito, $fecha1eraCuota);

    //                                     if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                                     //NUMERO DE AGENCIA

    //                                         $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     //llave que cierra la condicion de fecha actual
    //                                     }else{
    //                                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
    //                                             $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                                             Carbon::setLocale('es');
    //                                             $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                         }
    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";


    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }

    //                                     }
    //                                 //llave que cierra lo del mesanterior ==0
    //                                 }
    //                                 //FECHA MES SIGUIENTE
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA REPORTE DE LA S400 PLANO
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                                     //fecha primera cuota
    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                                     Carbon::setLocale('es');
    //                                     $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                                     $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);
    //                                     $formateada = $fechaReporte->format('d/m/Y');
    //                                     $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);

    //                                     //interes proporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                                     // FÃ³rmula 1
    //                                     $resultado1 = (
    //                                         $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                                         (
    //                                             $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                                             $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                                             $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                                         )
    //                                     );


    //                                     // FÃ³rmula 2
    //                                     $resultado2 = (
    //                                         Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                                         $fechaReporte->gte($fechadelCredito) &&
    //                                         $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                                     ) ?  true : false ;

    //                                     // FÃ³rmula 3
    //                                     $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                                         (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                                             $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
    //                                     );

    //                                     $NoAgencia = $registro['AGENCIA'];
    //                                     if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {

    //                                         $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
    //                                         //NUMERO DE AGENCIA
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }else{
    //                                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                             $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                             Carbon::setLocale('es');
    //                                             $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                         }

    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }

    //                                         //llave que cierra las condiciones de mesanterior == 1
    //                                     }
    //                                 //llave que cierra mesanterior == 1
    //                                 }
    //                                 //FECHA ENTREMES
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS

    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA REPORTE
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                                     if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                                         $fechaReporteActual->addMonth();
    //                                     }
    //                                     $fechaReporte = $fechaReporteActual;

    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                                     //fechaprimera cuota
    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                                     Carbon::setLocale('es');
    //                                     $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                                     $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                                     //interesproporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


    //                                     $NoAgencia = $registro['AGENCIA'];

    //                                     $result = $fechadelCredito > $fechaReporte;


    //                                     $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                                         ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                                             $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                                     $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

    //                                     //CUARTO CONDICIONAL
    //                                     $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                                     //QUINTO
    //                                     $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                                     //SEXTO
    //                                     $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                                     if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {

    //                                         $razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'edad' => $edad,
    //                                                     'deuda' => $deuda,
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 1,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 0,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }else{
    //                                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                             $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                             Carbon::setLocale('es');
    //                                             $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                         }
    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";

    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }

    //                                     }
    //                                 //llave que cierra entremes
    //                                 }

    //                             //llave que cierra si existe la nomina en s400_plano
    //                             }else{
    //                                 $usuarioActual = Auth::user();
    //                                 $nombre = $usuarioActual->name;
    //                                 $rol = $usuarioActual->rol;
    //                                 $cedulaagregada = $request->Cedula_Persona;
    //                                 date_default_timezone_set('America/Bogota');
    //                                 $ip = $_SERVER['REMOTE_ADDR'];
    //                                 $fechaHoraActual = date('Y-m-d H:i:s');
    //                                 $agencia = $usuarioActual->agenciau;
    //                                 $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'CreoNuevaNomina', ?, ?, ?, ?)", [
    //                                     null,
    //                                     $nombre,
    //                                     $rol,
    //                                     $agencia,
    //                                     $fechaHoraActual,
    //                                     $cedulaagregada,
    //                                     null,
    //                                     $ip
    //                                 ]);

    //                                 $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
    //                                     $NOMINA,
    //                                     $NOMBRENOMINA,
    //                                     $NODEPENDENCIA,
    //                                     $DEPENDENCIA,
    //                                     $ENTIDAD
    //                                 ]);
    //                                 $foundMatchingPagare = true;
    //                             }
    //                         //llave que cierra el score si es >=650
    //                         }else if($persona->Score < 650){
    //                             ;
    //                             //VALIDO QUE SEA IGUAL A LO QUE ESTA EN LA BD DE DATACREDITO EN LA TABLA S400_PLANO
    //                             $existeNominaDepen = DB::select('SELECT CODNOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);

    //                             //SI LA NOMINA Y DEPENDENCIA EXISTE EN EL ARCHIVO PLANO
    //                             if (!empty($existeNominaDepen)) {

    //                                 $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);

    //                                 //FECHA MES ACTUAL
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {

    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA DE REPORTE DE LA NOMINA
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);

    //                                     //se asigna la fecha de reporte de manera automatica
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                                     //fechar primera cuota
    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


    //                                     //interes proporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                                     // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                                     $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                                     // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                                     $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                                     // Comparar si son iguales
    //                                     //resultado
    //                                     $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



    //                                     // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                                     // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                                     $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                                     // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                                     $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

    //                                     // Comprobar si todas las condiciones relevantes son verdaderas
    //                                     $resultado1 = $condicion1 && $condicion3 ? true : false;




    //                                     // Primera condiciÃ³n externa
    //                                     if ($fechadelCredito->gt($fechaReporte)) {
    //                                         $resultado2 = false;
    //                                     } else {
    //                                         // CondiciÃ³n interna
    //                                         $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                                         $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                                         $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                                         if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                                             $resultado2 = true;
    //                                         } else {
    //                                             $resultado2 = false;
    //                                         }
    //                                     }


    //                                     // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                                     $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                                     // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 31 dÃ­as o menos
    //                                     $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

    //                                     // Resultado basado en las condiciones
    //                                     $resultado3 = ($condicion3 || $condicion4) ? true : false ;


    //                                     // Calcular el Ãºltimo dÃ­a del mes de B14
    //                                     $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                                     // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                                     $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                                     // Verificar las condiciones
    //                                     $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                                     $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                                     $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                     // Evaluar si todas las condiciones son verdaderas
    //                                     $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false ;


    //                                     // Primer nivel de comprobaciÃ³n
    //                                     if ($fechadelCredito->gt($fechaReporte)) {
    //                                         $resultado5 = false;
    //                                     } else {
    //                                         // Segundo nivel de comprobaciÃ³n
    //                                         $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                                         $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                                         $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                                         $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                         $resultado5 = $condicionA && $condicionB ? true : false ;
    //                                     }

    //                                     if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
    //                                         $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                                         Carbon::setLocale('es');
    //                                         $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                     }
    //                                     //dd($resultado,$resultado1, $resultado2, $resultado3, $resultado4, $resultado5);
    //                                     //NUMERO DE AGENCIA
    //                                     $NoAgencia = $registro['AGENCIA'];
    //                                     if ((($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true))){
    //                                         //dd($nombres);
    //                                         $razon = "Rechazado por score bajo.";
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }else{
    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }
    //                                 //llave que cierra lo del mesanterior ==0
    //                                 }
    //                                 //FECHA MES SIGUIENTE
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {

    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA REPORTE DE LA S400 PLANO
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                                     $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                                     $formateada = $fechaReporte->format('d/m/Y');
    //                                     $formateadaCarbon = Carbon::createFromFormat('d/m/Y', $formateada);
    //                                     Carbon::setLocale('es');
    //                                     $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                                     $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                                     //interes proporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                                     //NUMERO DE AGENCIA
    //                                     $NoAgencia = $registro['AGENCIA'];

    //                                     // FÃ³rmula 1
    //                                     $resultado1 = (
    //                                         $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                                         (
    //                                             $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                                             $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                                             $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                                         )
    //                                     );


    //                                     // FÃ³rmula 2
    //                                     $resultado2 = (
    //                                         Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                                         $fechaReporte->gte($fechadelCredito) &&
    //                                         $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                                     ) ?  true : false ;

    //                                     // FÃ³rmula 3
    //                                     $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                                         (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                                             $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
    //                                     );
    //                                     if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                         $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                         Carbon::setLocale('es');
    //                                         $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                     }
    //                                     // dd($resultado1, $resultado2, $resultado3);
    //                                     if ($resultado1 == true && $resultado2 == true && $resultado3 == true) {

    //                                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                                 $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                                 Carbon::setLocale('es');
    //                                                 $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');


    //                                             $razon = "Rechazado por score bajo.";
    //                                             if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                                 if (empty($existingPagare)) {
    //                                                     //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                     $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                     $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                         'FechaReporte' => $fechaReporteString,
    //                                                         'Aprobado' => 0,
    //                                                         'Razon' => $razon,
    //                                                         'CoorAsignada' => 'Coordinacion 1',
    //                                                         'AutorizacionGerente' => 1,
    //                                                         'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                         'FechaAccion'=> $fechaStringCredito,
    //                                                         'Garantia' => $garantia,
    //                                                         'NoAgencia' => $agencia,
    //                                                         'NombreAgencia' => $nombreAgencia,
    //                                                         'CuentaCoop' => $cuenta,
    //                                                         'Cedula_Persona' => $cedula,
    //                                                         'NombreCompleto' => $nombres,
    //                                                         'ID_Pagare' => $idpagare,
    //                                                         'NoLC' => $registro['LINEA'],
    //                                                         'Linea_Credito' => $registro['LINEANOM'],
    //                                                         'Capital' => $capital,
    //                                                         'NoCuotas' => $ncuotas,
    //                                                         'ValorCuota' => $vcuotas,
    //                                                         'Tasa' => $tasaAPI,
    //                                                         'FechaCredito' => $fechaStringCredito,
    //                                                         'Nomina' => $nomina .' - '.$nomNomina,
    //                                                         'Direccion' => $direccion,
    //                                                         'TelFijo' => $fijo,
    //                                                         'Fecha1Cuota' => $fechaFormateada,
    //                                                         'FechaUltimaCuota' => $fechaFormateada2,
    //                                                         'Celular' => $celular,
    //                                                         'Correo' => $correo,
    //                                                         'GeneradorPagare' => $usuario,
    //                                                         'ID_Persona'=> $persona->ID
    //                                                     ]);
    //                                                 }
    //                                             }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                                 if (empty($existingPagare)) {
    //                                                     //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                     $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                     $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                         'FechaReporte' => $fechaReporteString,
    //                                                         'Aprobado' => 0,
    //                                                         'Razon' => $razon,
    //                                                         'CoorAsignada' => 'Coordinacion 2',
    //                                                         'AutorizacionGerente' => 1,
    //                                                         'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                         'FechaAccion'=> $fechaStringCredito,
    //                                                         'Garantia' => $garantia,
    //                                                         'NoAgencia' => $agencia,
    //                                                         'NombreAgencia' => $nombreAgencia,
    //                                                         'CuentaCoop' => $cuenta,
    //                                                         'Cedula_Persona' => $cedula,
    //                                                         'NombreCompleto' => $nombres,
    //                                                         'ID_Pagare' => $idpagare,
    //                                                         'NoLC' => $registro['LINEA'],
    //                                                         'Linea_Credito' => $registro['LINEANOM'],
    //                                                         'Capital' => $capital,
    //                                                         'NoCuotas' => $ncuotas,
    //                                                         'ValorCuota' => $vcuotas,
    //                                                         'Tasa' => $tasaAPI,
    //                                                         'FechaCredito' => $fechaStringCredito,
    //                                                         'Nomina' => $nomina .' - '.$nomNomina,
    //                                                         'Direccion' => $direccion,
    //                                                         'TelFijo' => $fijo,
    //                                                         'Fecha1Cuota' => $fechaFormateada,
    //                                                         'FechaUltimaCuota' => $fechaFormateada2,
    //                                                         'Celular' => $celular,
    //                                                         'Correo' => $correo,
    //                                                         'GeneradorPagare' => $usuario,
    //                                                         'ID_Persona'=> $persona->ID
    //                                                     ]);
    //                                                 }
    //                                             }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                                 if (empty($existingPagare)) {
    //                                                     //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                     $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                     $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                         'FechaReporte' => $fechaReporteString,
    //                                                         'Aprobado' => 0,
    //                                                         'Razon' => $razon,
    //                                                         'CoorAsignada' => 'Coordinacion 3',
    //                                                         'AutorizacionGerente' => 1,
    //                                                         'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                         'FechaAccion'=> $fechaStringCredito,
    //                                                         'Garantia' => $garantia,
    //                                                         'NoAgencia' => $agencia,
    //                                                         'NombreAgencia' => $nombreAgencia,
    //                                                         'CuentaCoop' => $cuenta,
    //                                                         'Cedula_Persona' => $cedula,
    //                                                         'NombreCompleto' => $nombres,
    //                                                         'ID_Pagare' => $idpagare,
    //                                                         'NoLC' => $registro['LINEA'],
    //                                                         'Linea_Credito' => $registro['LINEANOM'],
    //                                                         'Capital' => $capital,
    //                                                         'NoCuotas' => $ncuotas,
    //                                                         'ValorCuota' => $vcuotas,
    //                                                         'Tasa' => $tasaAPI,
    //                                                         'FechaCredito' => $fechaStringCredito,
    //                                                         'Nomina' => $nomina .' - '.$nomNomina,
    //                                                         'Direccion' => $direccion,
    //                                                         'TelFijo' => $fijo,
    //                                                         'Fecha1Cuota' => $fechaFormateada,
    //                                                         'FechaUltimaCuota' => $fechaFormateada2,
    //                                                         'Celular' => $celular,
    //                                                         'Correo' => $correo,
    //                                                         'GeneradorPagare' => $usuario,
    //                                                         'ID_Persona'=> $persona->ID
    //                                                     ]);
    //                                                 }
    //                                             }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                                 if (empty($existingPagare)) {
    //                                                     //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                     $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                     $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                         'FechaReporte' => $fechaReporteString,
    //                                                         'Aprobado' => 0,
    //                                                         'Razon' => $razon,
    //                                                         'CoorAsignada' => 'Coordinacion 4',
    //                                                         'AutorizacionGerente' => 1,
    //                                                         'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                         'FechaAccion'=> $fechaStringCredito,
    //                                                         'Garantia' => $garantia,
    //                                                         'NoAgencia' => $agencia,
    //                                                         'NombreAgencia' => $nombreAgencia,
    //                                                         'CuentaCoop' => $cuenta,
    //                                                         'Cedula_Persona' => $cedula,
    //                                                         'NombreCompleto' => $nombres,
    //                                                         'ID_Pagare' => $idpagare,
    //                                                         'NoLC' => $registro['LINEA'],
    //                                                         'Linea_Credito' => $registro['LINEANOM'],
    //                                                         'Capital' => $capital,
    //                                                         'NoCuotas' => $ncuotas,
    //                                                         'ValorCuota' => $vcuotas,
    //                                                         'Tasa' => $tasaAPI,
    //                                                         'FechaCredito' => $fechaStringCredito,
    //                                                         'Nomina' => $nomina .' - '.$nomNomina,
    //                                                         'Direccion' => $direccion,
    //                                                         'TelFijo' => $fijo,
    //                                                         'Fecha1Cuota' => $fechaFormateada,
    //                                                         'FechaUltimaCuota' => $fechaFormateada2,
    //                                                         'Celular' => $celular,
    //                                                         'Correo' => $correo,
    //                                                         'GeneradorPagare' => $usuario,
    //                                                         'ID_Persona'=> $persona->ID
    //                                                     ]);
    //                                                 }
    //                                             }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                                 if (empty($existingPagare)) {
    //                                                     //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                     $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                     $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                         'FechaReporte' => $fechaReporteString,
    //                                                         'Aprobado' => 0,
    //                                                         'Razon' => $razon,
    //                                                         'CoorAsignada' => 'Coordinacion 5',
    //                                                         'AutorizacionGerente' => 1,
    //                                                         'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                         'FechaAccion'=> $fechaStringCredito,
    //                                                         'Garantia' => $garantia,
    //                                                         'NoAgencia' => $agencia,
    //                                                         'NombreAgencia' => $nombreAgencia,
    //                                                         'CuentaCoop' => $cuenta,
    //                                                         'Cedula_Persona' => $cedula,
    //                                                         'NombreCompleto' => $nombres,
    //                                                         'ID_Pagare' => $idpagare,
    //                                                         'NoLC' => $registro['LINEA'],
    //                                                         'Linea_Credito' => $registro['LINEANOM'],
    //                                                         'Capital' => $capital,
    //                                                         'NoCuotas' => $ncuotas,
    //                                                         'ValorCuota' => $vcuotas,
    //                                                         'Tasa' => $tasaAPI,
    //                                                         'FechaCredito' => $fechaStringCredito,
    //                                                         'Nomina' => $nomina .' - '.$nomNomina,
    //                                                         'Direccion' => $direccion,
    //                                                         'TelFijo' => $fijo,
    //                                                         'Fecha1Cuota' => $fechaFormateada,
    //                                                         'FechaUltimaCuota' => $fechaFormateada2,
    //                                                         'Celular' => $celular,
    //                                                         'Correo' => $correo,
    //                                                         'GeneradorPagare' => $usuario,
    //                                                         'ID_Persona'=> $persona->ID
    //                                                     ]);
    //                                                 }
    //                                             }
    //                                         }
    //                                     }else{
    //                                         $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                         Carbon::setLocale('es');
    //                                         $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');


    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }

    //                                 //llave que cierra mesanterior == 1
    //                                 }
    //                                 //FECHA ENTREMES
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {

    //                                     //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                                     $fechadelCredito = Carbon::now('America/Bogota');
    //                                     $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                                     Carbon::setLocale('es');
    //                                     $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                                     //DIA REPORTE
    //                                     $diaReporte = max(1, $existeDia[0]->DIAS);
    //                                     $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                                     if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                                         $fechaReporteActual->addMonth();
    //                                     }
    //                                     $fechaReporte = $fechaReporteActual;

    //                                     Carbon::setLocale('es');
    //                                     $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                                     //fechaprimera cuota
    //                                     $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                                     Carbon::setLocale('es');
    //                                     $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                                     $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                                     //interes proporcional
    //                                     $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                                     $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                                     $tasa = $registro['TASA'];
    //                                     $capital = $registro['CAPITAL'];

    //                                     $tasa = str_replace(',', '.', $tasa);
    //                                     $tasa = floatval($tasa);

    //                                     $tasa = $tasa / 100;

    //                                     $capital = floatval($capital);

    //                                     $interval = $fechadelCredito->diff($endOfMonth);
    //                                     $c30 = $interval->days;

    //                                     $cuotaMensual = $capital * $tasa;
    //                                     $cuotaDiaria = $cuotaMensual / 30;
    //                                     $interesProporcional = $cuotaDiaria * $c30;

    //                                     $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


    //                                     $NoAgencia = $registro['AGENCIA'];

    //                                     $result = $fechadelCredito > $fechaReporte;


    //                                     $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                                         ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                                             $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                                     $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

    //                                     //CUARTO CONDICIONAL
    //                                     $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                                     //QUINTO
    //                                     $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                                     //SEXTO
    //                                     $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                                     if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                         $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(1)->endOfMonth();
    //                                         Carbon::setLocale('es');
    //                                         $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                     }


    //                                     if (($result == true && $result1 == true && $result2 == true) || ($resultado3 == true && $resultado4 == true && $resultado5 == true)) {
    //                                         $razon = "Rechazado por score bajo.";

    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     //llave que cierra las condiciones
    //                                     }else{
    //                                         $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                         if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 1',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                     DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 2',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 3',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 4',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                             if (empty($existingPagare)) {
    //                                                 //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                                 $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                                 $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                                 DB::table('pagareprueba')->insert([
    //                                                     'FechaReporte' => $fechaReporteString,
    //                                                     'Aprobado' => 0,
    //                                                     'Razon' => $razon,
    //                                                     'CoorAsignada' => 'Coordinacion 5',
    //                                                     'AutorizacionGerente' => 1,
    //                                                     'InteresProporcional' => $interesProporcionalCorrecto,
    //                                                     'FechaAccion'=> $fechaStringCredito,
    //                                                     'Garantia' => $garantia,
    //                                                     'NoAgencia' => $agencia,
    //                                                     'NombreAgencia' => $nombreAgencia,
    //                                                     'CuentaCoop' => $cuenta,
    //                                                     'Cedula_Persona' => $cedula,
    //                                                     'NombreCompleto' => $nombres,
    //                                                     'ID_Pagare' => $idpagare,
    //                                                     'NoLC' => $registro['LINEA'],
    //                                                     'Linea_Credito' => $registro['LINEANOM'],
    //                                                     'Capital' => $capital,
    //                                                     'NoCuotas' => $ncuotas,
    //                                                     'ValorCuota' => $vcuotas,
    //                                                     'Tasa' => $tasaAPI,
    //                                                     'FechaCredito' => $fechaStringCredito,
    //                                                     'Nomina' => $nomina .' - '.$nomNomina,
    //                                                     'Direccion' => $direccion,
    //                                                     'TelFijo' => $fijo,
    //                                                     'Fecha1Cuota' => $fechaFormateada,
    //                                                     'FechaUltimaCuota' => $fechaFormateada2,
    //                                                     'Celular' => $celular,
    //                                                     'Correo' => $correo,
    //                                                     'GeneradorPagare' => $usuario,
    //                                                     'ID_Persona'=> $persona->ID
    //                                                 ]);
    //                                             }
    //                                         }
    //                                     }
    //                                 //llave que cierra entremes
    //                                 }

    //                             //llave que cierra si existe la nomina en s400_plano
    //                             }else{
    //                                 $insertNomiDepe = DB::insert("INSERT INTO s400_plano (CODNOMINA, NOMBRENOMINA, CODDEPENDENCIA, NOMDEPENDENCIA, CODENTIDAD) VALUES (?, ?, ?, ?, ?)", [
    //                                     $CODIGONOMINA,
    //                                     $NOMBRENOMINA,
    //                                     $NODEPENDENCIA,
    //                                     $DEPENDENCIA,
    //                                     $ENTIDAD
    //                                 ]);
    //                             }
    //                         }
    //                 }else{//SI EL SCORE ES NULL
    //                         $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);
    //                         //FECHA MES ACTUAL
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA DE REPORTE DE LA NOMINA
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);

    //                             //se asigna la fecha de reporte de manera automatica
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



    //                             // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                             $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                             $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                             // Comparar si son iguales
    //                             //resultado
    //                             $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



    //                             // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                             // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                             $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                             // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                             $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

    //                             // Comprobar si todas las condiciones relevantes son verdaderas
    //                             $resultado1 = $condicion1 && $condicion3 ? true : false;




    //                             // Primera condiciÃ³n externa
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado2 = false;
    //                             } else {
    //                                 // CondiciÃ³n interna
    //                                 $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                                 $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                                 $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                                 if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                                     $resultado2 = true;
    //                                 } else {
    //                                     $resultado2 = false;
    //                                 }
    //                             }


    //                             // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                             $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                             // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 31 dÃ­as o menos
    //                             $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

    //                             // Resultado basado en las condiciones
    //                             $resultado3 = ($condicion3 || $condicion4) ? true : false ;


    //                             // Calcular el Ãºltimo dÃ­a del mes de B14
    //                             $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                             $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                             // Verificar las condiciones
    //                             $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                             $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                             $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                             // Evaluar si todas las condiciones son verdaderas
    //                             $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false ;


    //                             // Primer nivel de comprobaciÃ³n
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado5 = false;
    //                             } else {
    //                                 // Segundo nivel de comprobaciÃ³n
    //                                 $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                                 $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                                 $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                                 $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                 $resultado5 = $condicionA && $condicionB ? true : false ;
    //                             }

    //                                 $NoAgencia = $registro['AGENCIA'];

    //                             if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                             //NUMERO DE AGENCIA
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             //llave que cierra la condicion de fecha actual
    //                             }else{
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra lo del mesanterior ==0
    //                         }
    //                         //FECHA MES SIGUIENTE
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE DE LA S400 PLANO
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                             // FÃ³rmula 1
    //                             $resultado1 = (
    //                                 $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                                 (
    //                                     $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                                     $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                                     $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                                 )
    //                             );


    //                             // FÃ³rmula 2
    //                             $resultado2 = (
    //                                 Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                                 $fechaReporte->gte($fechadelCredito) &&
    //                                 $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                             ) ?  true : false ;

    //                             // FÃ³rmula 3
    //                             $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                                 (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
    //                             );


    //                             $NoAgencia = $registro['AGENCIA'];
    //                             if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 //NUMERO DE AGENCIA
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }

    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                                 //llave que cierra las condiciones de mesanterior == 1
    //                             }
    //                         //llave que cierra mesanterior == 1
    //                         }
    //                         //FECHA ENTREMES
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                                 $fechaReporteActual->addMonth();
    //                             }
    //                             $fechaReporte = $fechaReporteActual;

    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fechaprimera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                             Carbon::setLocale('es');
    //                             $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                             $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                             //interesproporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


    //                             $NoAgencia = $registro['AGENCIA'];

    //                             $result = $fechadelCredito > $fechaReporte;


    //                             $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                                 ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                             $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

    //                             //CUARTO CONDICIONAL
    //                             $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                             //QUINTO
    //                             $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                             //SEXTO
    //                             $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                             if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta entonces es aprobado.';
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 2,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra entremes
    //                         }

    //                 }
    //             //cierre de llave para validar si existe en el datacredito
    //             }else{

    //                 $existeDia = DB::select('SELECT DIAS, MESANTERIOR, ENTREMES FROM s400_plano WHERE CODNOMINA = ? AND CODDEPENDENCIA = ? AND CODENTIDAD = ?', [$NOMINA, $DEPENDENCIA, $ENTIDAD]);
    //                 //FECHA MES ACTUAL

    //                 if(3000000 <= $capital){

    //                         //FECHA MES ACTUAL
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA DE REPORTE DE LA NOMINA
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);

    //                             //se asigna la fecha de reporte de manera automatica
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



    //                             // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                             $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                             $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                             // Comparar si son iguales
    //                             //resultado
    //                             $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



    //                             // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                             // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                             $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                             // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                             $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

    //                             // Comprobar si todas las condiciones relevantes son verdaderas
    //                             $resultado1 = $condicion1 && $condicion3 ? true : false;




    //                             // Primera condiciÃ³n externa
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado2 = false;
    //                             } else {
    //                                 // CondiciÃ³n interna
    //                                 $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                                 $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                                 $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                                 if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                                     $resultado2 = true;
    //                                 } else {
    //                                     $resultado2 = false;
    //                                 }
    //                             }


    //                             // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                             $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                             // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 31 dÃ­as o menos
    //                             $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

    //                             // Resultado basado en las condiciones
    //                             $resultado3 = ($condicion3 || $condicion4) ? true : false ;


    //                             // Calcular el Ãºltimo dÃ­a del mes de B14
    //                             $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                             $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                             // Verificar las condiciones
    //                             $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                             $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                             $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                             // Evaluar si todas las condiciones son verdaderas
    //                             $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false ;


    //                             // Primer nivel de comprobaciÃ³n
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado5 = false;
    //                             } else {
    //                                 // Segundo nivel de comprobaciÃ³n
    //                                 $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                                 $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                                 $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                                 $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                 $resultado5 = $condicionA && $condicionB ? true : false ;
    //                             }

    //                                 $NoAgencia = $registro['AGENCIA'];

    //                             if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                             //NUMERO DE AGENCIA
    //                                 $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta entonces es aprobado.';
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             //llave que cierra la condicion de fecha actual
    //                             }else{
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra lo del mesanterior ==0
    //                         }
    //                         //FECHA MES SIGUIENTE
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE DE LA S400 PLANO
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                             // FÃ³rmula 1
    //                             $resultado1 = (
    //                                 $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                                 (
    //                                     $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                                     $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                                     $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                                 )
    //                             );


    //                             // FÃ³rmula 2
    //                             $resultado2 = (
    //                                 Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                                 $fechaReporte->gte($fechadelCredito) &&
    //                                 $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                             ) ?  true : false ;

    //                             // FÃ³rmula 3
    //                             $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                                 (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
    //                             );


    //                             $NoAgencia = $registro['AGENCIA'];
    //                             if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
    //                                 $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta entonces es aprobado.';
    //                                 //NUMERO DE AGENCIA
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }

    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                                 //llave que cierra las condiciones de mesanterior == 1
    //                             }
    //                         //llave que cierra mesanterior == 1
    //                         }
    //                         //FECHA ENTREMES
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                                 $fechaReporteActual->addMonth();
    //                             }
    //                             $fechaReporte = $fechaReporteActual;

    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fechaprimera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                             Carbon::setLocale('es');
    //                             $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                             $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                             //interesproporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


    //                             $NoAgencia = $registro['AGENCIA'];

    //                             $result = $fechadelCredito > $fechaReporte;


    //                             $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                                 ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                             $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

    //                             //CUARTO CONDICIONAL
    //                             $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                             //QUINTO
    //                             $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                             //SEXTO
    //                             $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                             if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                                 $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta entonces es aprobado.';
    //                                 //$razon = 'Aprobado por score(>=650) alto y por cumplir las fechas.';

    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";

    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra entremes
    //                         }



    //                 //cierre de condicion <= 3000000
    //                 }else{

    //                         //FECHA MES ACTUAL
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0 && $existeDia[0]->ENTREMES == 0) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA DE REPORTE DE LA NOMINA
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);

    //                             //se asigna la fecha de reporte de manera automatica
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');


    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);


    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;



    //                             // Calcular el Ãºltimo dÃ­a del mes siguiente a la fecha del crÃ©dito
    //                             $ultimoDiaMesSiguienteCredito = $fechadelCredito->copy()->addMonth()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes de la primera cuota
    //                             $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();

    //                             // Comparar si son iguales
    //                             //resultado
    //                             $resultado = $ultimoDiaMesSiguienteCredito->eq($ultimoDiaMesPrimeraCuota) ? true : false;



    //                             // Ajustar $fechaReporte basado en si la fecha del crÃ©dito es mayor que $fechaReporteActual
    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;

    //                             // Implementar la lÃ³gica de la fÃ³rmula de Excel
    //                             $condicion1 = $fechadelCredito->lt($fechaReporte); // B14 < E15
    //                             // La condiciÃ³n 2 es redundante y siempre verdadera, por lo que la omitimos
    //                             $condicion3 = $fechaReporte->diffInDays($fechadelCredito) <= 31; // DIAS(E15;B14)<=31

    //                             // Comprobar si todas las condiciones relevantes son verdaderas
    //                             $resultado1 = $condicion1 && $condicion3 ? true : false;




    //                             // Primera condiciÃ³n externa
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado2 = false;
    //                             } else {
    //                                 // CondiciÃ³n interna
    //                                 $ultimoDiaMesPrimeraCuota = $fecha1eraCuota->copy()->endOfMonth();
    //                                 $ultimoDiaMesSiguienteReporte = $fechaReporte->copy()->addMonth()->endOfMonth();

    //                                 $diasDiferencia = $fechaReporte->diffInDays($fechadelCredito, false);

    //                                 if ($ultimoDiaMesPrimeraCuota->eq($ultimoDiaMesSiguienteReporte) && $diasDiferencia <= 31) {
    //                                     $resultado2 = true;
    //                                 } else {
    //                                     $resultado2 = false;
    //                                 }
    //                             }


    //                             // CondiciÃ³n 1: Comprobar si el Ãºltimo dÃ­a del mes de la fecha en C14 es igual al Ãºltimo dÃ­a del mes siguiente a E15
    //                             $condicion3 = $fecha1eraCuota->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth());

    //                             // CondiciÃ³n 2: La diferencia en dÃ­as entre E15 y B14 es de 31 dÃ­as o menos
    //                             $condicion4 = $fechaReporte->diffInDays($fechadelCredito, false) <= 31;

    //                             // Resultado basado en las condiciones
    //                             $resultado3 = ($condicion3 || $condicion4) ? true : false ;


    //                             // Calcular el Ãºltimo dÃ­a del mes de B14
    //                             $ultimoDiaMesB14 = $fechadelCredito->copy()->endOfMonth();

    //                             // Calcular el Ãºltimo dÃ­a del mes anterior a E15
    //                             $ultimoDiaMesAnteriorE15 = $fechaReporte->copy()->subMonth()->endOfMonth();

    //                             // Verificar las condiciones
    //                             $condicion5 = $ultimoDiaMesB14->eq($ultimoDiaMesAnteriorE15);
    //                             $condicion6 = $fechaReporte->gte($fechadelCredito);
    //                             $condicion7 = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                             // Evaluar si todas las condiciones son verdaderas
    //                             $resultado4 = $condicion5 && $condicion6 && $condicion7 ? true : false ;


    //                             // Primer nivel de comprobaciÃ³n
    //                             if ($fechadelCredito->gt($fechaReporte)) {
    //                                 $resultado5 = false;
    //                             } else {
    //                                 // Segundo nivel de comprobaciÃ³n
    //                                 $ultimoDiaMesC14 = $fecha1eraCuota->endOfMonth(); // Ãltimo dÃ­a del mes para C14
    //                                 $ultimoDiaMesSiguienteB14 = $fechadelCredito->copy()->addMonth()->endOfMonth(); // Ãltimo dÃ­a del mes siguiente a B14

    //                                 $condicionA = $ultimoDiaMesC14->eq($ultimoDiaMesSiguienteB14);
    //                                 $condicionB = $fechaReporte->diffInDays($fechadelCredito) <= 31;

    //                                 $resultado5 = $condicionA && $condicionB ? true : false ;
    //                             }

    //                                 $NoAgencia = $registro['AGENCIA'];

    //                             if (($resultado == true && $resultado1 == true && $resultado2 == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                             //NUMERO DE AGENCIA
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             //llave que cierra la condicion de fecha actual
    //                             }else{
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 0) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth()->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra lo del mesanterior ==0
    //                         }
    //                         //FECHA MES SIGUIENTE
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE DE LA S400 PLANO
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             $fechaReporte = $fechadelCredito->gt($fechaReporteActual) ? $fechaReporteActual->addMonth() : $fechaReporteActual;
    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fecha primera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);

    //                             //interes proporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;

    //                             // FÃ³rmula 1
    //                             $resultado1 = (
    //                                 $fechaCarbon2->copy()->endOfMonth()->eq($formateadaCarbon->copy()->addMonths(2)->endOfMonth()) &&
    //                                 (
    //                                     $fechadelCredito->copy()->addMonths(3)->endOfMonth() instanceof Carbon &&
    //                                     $fechadelCredito->copy()->addMonths(2)->endOfMonth() instanceof Carbon &&
    //                                     $formateadaCarbon->diffInDays($fechadelCredito) <= 30
    //                                 )
    //                             );


    //                             // FÃ³rmula 2
    //                             $resultado2 = (
    //                                 Carbon::now('America/Bogota')->endOfMonth(2)->eq($fecha1eraCuota->endOfMonth()) &&
    //                                 $fechaReporte->gte($fechadelCredito) &&
    //                                 $fechaReporte->diffInDays($fechadelCredito) <= 30
    //                             ) ?  true : false ;

    //                             // FÃ³rmula 3
    //                             $resultado3 = ($fechadelCredito->gt($fecha1eraCuota)) ? false : (
    //                                 (Carbon::now('America/Bogota')->endOfMonth(0)->eq($fechaReporte->endOfMonth()) ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30) ? true : false
    //                             );


    //                             $NoAgencia = $registro['AGENCIA'];
    //                             if (($resultado1 == true && $resultado2 == true && $resultado3 == true) || ($resultado1 == false && $resultado2 == true && $resultado3 == true) || ($resultado1 == true && $resultado2 == false && $resultado3 == true) || ($resultado1 == true && $resultado2 == true && $resultado3 == false) || ($resultado1 == false && $resultado2 == true && $resultado3 == false)) {
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 //NUMERO DE AGENCIA
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->MESANTERIOR == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }

    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                                 //llave que cierra las condiciones de mesanterior == 1
    //                             }
    //                         //llave que cierra mesanterior == 1
    //                         }
    //                         //FECHA ENTREMES
    //                         if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                             //FECHA DEL SISTEMA PARA ASIGNARLO A LOS NUEVOS REGISTROS
    //                             $fechadelCredito = Carbon::now('America/Bogota');
    //                             $fechadelCreditoUtc = $fechadelCredito->setTimezone('UTC');
    //                             Carbon::setLocale('es');
    //                             $fechaStringCredito = $fechadelCredito->translatedFormat('F d Y');

    //                             //DIA REPORTE
    //                             $diaReporte = max(1, $existeDia[0]->DIAS);
    //                             $fechaReporteActual = Carbon::createFromFormat('Y/m/d', $fechadelCredito->format('Y') . '/' . $fechadelCredito->format('m') . '/' . $diaReporte);

    //                             if ($fechadelCredito->format('m') != $fechaReporteActual->format('m')) {
    //                                 $fechaReporteActual->addMonth();
    //                             }
    //                             $fechaReporte = $fechaReporteActual;

    //                             Carbon::setLocale('es');
    //                             $fechaReporteString = $fechaReporte->translatedFormat('F d Y');

    //                             //fechaprimera cuota
    //                             $fecha1eraCuota = Carbon::createFromFormat('y/m/d', $anio . '/' . $mes . '/' . $dia);
    //                             Carbon::setLocale('es');
    //                             $fechaString2 = $fecha1eraCuota->format('d/m/Y');
    //                             $fechaCarbon2 = Carbon::createFromFormat('d/m/Y', $fechaString2);

    //                             //interesproporcional
    //                             $endOfMonth = $fechadelCredito->copy()->endOfMonth();
    //                             $fechaHoraActualStr = $fechadelCredito->format('Y-m-d H:i:s');
    //                             $tasa = $registro['TASA'];
    //                             $capital = $registro['CAPITAL'];

    //                             $tasa = str_replace(',', '.', $tasa);
    //                             $tasa = floatval($tasa);

    //                             $tasa = $tasa / 100;

    //                             $capital = floatval($capital);

    //                             $interval = $fechadelCredito->diff($endOfMonth);
    //                             $c30 = $interval->days;

    //                             $cuotaMensual = $capital * $tasa;
    //                             $cuotaDiaria = $cuotaMensual / 30;
    //                             $interesProporcional = $cuotaDiaria * $c30;

    //                             $interesProporcionalCorrecto = ($capital * $tasa) / 30 * $c30;


    //                             $NoAgencia = $registro['AGENCIA'];

    //                             $result = $fechadelCredito > $fechaReporte;


    //                             $result1 = $fechaReporte->lt($fechadelCredito) &&
    //                                 ($fechaReporte->diffInMonths($fechaReporte, false) === 1 ||
    //                                     $fechaReporte->diffInDays($fechadelCredito) <= 30);


    //                             $result2 =  $fechaReporte->gt($fechadelCredito) || ($fechaReporte->diffInDays($fechadelCredito) <= 30 && $fecha1eraCuota->diffInMonths($fechadelCredito) == 2);

    //                             //CUARTO CONDICIONAL
    //                             $resultado3 = $fechadelCredito->copy()->addMonth()->endOfMonth()->eq($fechaCarbon2->copy()->endOfMonth());

    //                             //QUINTO
    //                             $resultado4 = $fechadelCredito->lt($fechaReporte) && $fechaReporte->copy()->addMonth()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30;


    //                             //SEXTO
    //                             $resultado5 = $fechadelCredito->gt($fechaReporte) ? false : ($fechaCarbon2->copy()->endOfMonth()->eq($fechaReporte->copy()->addMonth()->endOfMonth()) && $fechaReporte->diffInDays($fechadelCredito) <= 30);

    //                             if (($result == true && $result1 == true && $result2  == true) || ($resultado3 == true && $resultado4 == true &&  $resultado5  == true)) {
    //                                 $razon = 'Aprobado por cumplir las fechas pero faltaria el score.';
    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $razon = 'Aprobado por cumplir las fechas y ademas el credito no requiere consulta entonces es aprobado.';
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'edad' => $edad,
    //                                             'deuda' => $deuda,
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 1,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 0,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }
    //                             }else{
    //                                 if (($existeDia[0]->DIAS >= 1 || $existeDia[0]->DIAS <= 31) && $existeDia[0]->ENTREMES == 1) {
    //                                     $finalMesFechaCreditoUnMes = $fechadelCredito->copy()->addMonth(2)->endOfMonth();
    //                                     Carbon::setLocale('es');
    //                                     $fechadeStringCuotaEsperada = $finalMesFechaCreditoUnMes->translatedFormat('F d Y');
    //                                 }
    //                                 $razon = "Como la fecha de crÃ©dito fue " . $fechaStringCredito . " la primera cuota debe ser " . $fechadeStringCuotaEsperada .".";

    //                                 if ($NoAgencia == 34 || $NoAgencia == 35 || $NoAgencia == 36 || $NoAgencia == 37 || $NoAgencia == 38 || $NoAgencia == 40 || $NoAgencia == 41 || $NoAgencia == 87 || $NoAgencia == 93 || $NoAgencia == 96) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA

    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 1',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 33 || $NoAgencia == 39 || $NoAgencia == 46 || $NoAgencia == 70 || $NoAgencia == 77 || $NoAgencia == 78 || $NoAgencia == 80 || $NoAgencia == 88 || $NoAgencia == 92 || $NoAgencia == 98) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                             DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 2',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 32 || $NoAgencia == 42 || $NoAgencia == 47 || $NoAgencia == 81 || $NoAgencia == 82 || $NoAgencia == 83 || $NoAgencia == 85 || $NoAgencia == 90 || $NoAgencia == 94) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 3',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 44 || $NoAgencia == 45 || $NoAgencia == 48 || $NoAgencia == 49 || $NoAgencia == 74 || $NoAgencia == 75 || $NoAgencia == 84 || $NoAgencia == 89 || $NoAgencia == 91 || $NoAgencia == 95 || $NoAgencia == 97) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 4',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }else if ($NoAgencia == 13 || $NoAgencia == 30 || $NoAgencia == 31 || $NoAgencia == 43 || $NoAgencia == 68 || $NoAgencia == 73 || $NoAgencia == 76 || $NoAgencia == 86) {
    //                                     if (empty($existingPagare)) {
    //                                         //PARA TRAER EL NOMBRE DE LA AGENCIA POR EL NUMERO DE LA AGENCIA
    //                                         $existeAgencia = DB::select('SELECT NameAgencia FROM agencias WHERE NumAgencia = ?', [$NoAgencia]);
    //                                         $nombreAgencia = isset($existeAgencia[0]) ? $existeAgencia[0]->NameAgencia : null;
    //                                         DB::table('pagareprueba')->insert([
    //                                             'FechaReporte' => $fechaReporteString,
    //                                             'ExisteDatacredito' => 1,
    //                                             'Aprobado' => 0,
    //                                             'Razon' => $razon,
    //                                             'CoorAsignada' => 'Coordinacion 5',
    //                                             'AutorizacionGerente' => 1,
    //                                             'InteresProporcional' => $interesProporcionalCorrecto,
    //                                             'FechaAccion'=> $fechaStringCredito,
    //                                             'Garantia' => $garantia,
    //                                             'NoAgencia' => $agencia,
    //                                             'NombreAgencia' => $nombreAgencia,
    //                                             'CuentaCoop' => $cuenta,
    //                                             'Cedula_Persona' => $cedula,
    //                                             'NombreCompleto' => $nombres,
    //                                             'ID_Pagare' => $idpagare,
    //                                             'NoLC' => $registro['LINEA'],
    //                                             'Linea_Credito' => $registro['LINEANOM'],
    //                                             'Capital' => $capital,
    //                                             'NoCuotas' => $ncuotas,
    //                                             'ValorCuota' => $vcuotas,
    //                                             'Tasa' => $tasaAPI,
    //                                             'FechaCredito' => $fechaStringCredito,
    //                                             'Nomina' => $nomina .' - '.$nomNomina,
    //                                             'Direccion' => $direccion,
    //                                             'TelFijo' => $fijo,
    //                                             'Fecha1Cuota' => $fechaFormateada,
    //                                             'FechaUltimaCuota' => $fechaFormateada2,
    //                                             'Celular' => $celular,
    //                                             'Correo' => $correo,
    //                                             'GeneradorPagare' => $usuario,
    //                                             'ID_Persona'=> 7323
    //                                         ]);
    //                                     }
    //                                 }

    //                             }
    //                         //llave que cierra entremes
    //                         }
    //                 }
    //             }
    //             //cierre validacion pagare
    //         }
    //     }
    //     //CIERRE FOREACH
    //     }


    //     $user = DB::select("
    //     SELECT *
    //     FROM persona A
    //     JOIN pagareprueba B ON A.ID = B.ID_Persona
    //     WHERE B.Ordinario = 0 && B.NombreAgencia = '$agenciaU'
    //     ORDER BY A.ID ASC");


    //     $enfermedades = DB::table('enfermedades')->get(); // Consulta para obtener todas las enfermedades

    //     // Procesar las enfermedades para obtener un arreglo que se pueda agregar al DataTable
    //     $dataEnfermedades = [];
    //     foreach ($enfermedades as $enfermedad) {
    //         $dataEnfermedades[] = [
    //             'id' => $enfermedad->ID_Enferm,
    //             'nombre' => $enfermedad->Enfermedad,
    //         ];
    //     }

    //     return datatables()->of($user)
    //         ->addColumn('Enfermedades', function ($row) use ($dataEnfermedades) {
    //             $checkboxes = '<div class="row">';

    //             $numEnfermedades = count($dataEnfermedades);
    //             $numColumnas = 3;
    //             $numFilas = ceil($numEnfermedades / $numColumnas);

    //             for ($col = 0; $col < $numColumnas; $col++) {
    //                 $checkboxes .= '<div class="col-md-4 text-start mb-2" id="asd">';

    //                 for ($fila = 0; $fila < $numFilas; $fila++) {
    //                     $index = $fila + $col * $numFilas;

    //                     if ($index < $numEnfermedades) {
    //                         $enfermedad = $dataEnfermedades[$index];

    //                         $checkboxes .= '<label for="enfermedad_' . $index . '">
    //                                             <span class="fw-semibold">' . $enfermedad['id'] . '.</span>
    //                                             <input style="transform: scale(1.3);" type="checkbox" class="ms-1 mb-2" id="enfermedad_' . $index . '" name="enfermedades[]" value="'. $enfermedad['nombre'] .'">
    //                                             ' . $enfermedad['nombre'] . '
    //                                         </label><br>';
    //                     }
    //                 }

    //                 $checkboxes .= '</div>';
    //             }

    //             $checkboxes .= '</div>';

    //             return $checkboxes;
    //         })
    //         ->rawColumns(['Enfermedades'])
    //         ->toJson();
    // }

    public function aprobarCredito($id){


        $usuarioActual = Auth::user();
        $nombre = $usuarioActual->name;
        $rol = $usuarioActual->rol;
        $cedulaagregada = $id;
        date_default_timezone_set('America/Bogota');
        $ip = $_SERVER['REMOTE_ADDR'];
        $fechaHoraActual = date('Y-m-d H:i:s');
        $agencia = $usuarioActual->agenciau;
        $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'PAGARE APROBADO MANUALMENTE', ?, ?, ?, ?)", [
            null,
            $nombre,
            $rol,
            $agencia,
            $fechaHoraActual,
            $cedulaagregada,
            null,
            $ip
        ]);

        $consulta = DB::select("SELECT NombreCompleto FROM pagare WHERE ID = $id");
        $nombre = $consulta[0]->NombreCompleto;




        $sql = DB::update("UPDATE pagare SET Aprobado = ?, AutorizacionGerente = ? WHERE ID = $id", [
            1,
            0
        ]);

        return back()->with("correcto", "El CrÃ©dito de la persona ".$nombre." fue aprobado correctamente.");
    }


    public function rechazarCredito($id){


        $usuarioActual = Auth::user();
        $nombre = $usuarioActual->name;
        $rol = $usuarioActual->rol;
        $cedulaagregada = $id;
        date_default_timezone_set('America/Bogota');
        $ip = $_SERVER['REMOTE_ADDR'];
        $fechaHoraActual = date('Y-m-d H:i:s');
        $agencia = $usuarioActual->agenciau;
        $login = DB::insert("INSERT INTO auditoria (Hora_login, Usuario_nombre, Usuario_Rol, AgenciaU, AcciÃ³n_realizada, Hora_Accion, Cedula_Registrada, cerro_sesion, IP) VALUES (?, ?, ?, ?, 'PAGARE APROBADO MANUALMENTE', ?, ?, ?, ?)", [
            null,
            $nombre,
            $rol,
            $agencia,
            $fechaHoraActual,
            $cedulaagregada,
            null,
            $ip
        ]);

        $consulta = DB::select("SELECT NombreCompleto FROM pagare WHERE ID = $id");
        $nombre = $consulta[0]->NombreCompleto;




        $sql = DB::update("UPDATE pagare SET Aprobado = ?, AutorizacionGerente = ? WHERE ID = $id", [
            0,
            1
        ]);

        return back()->with("correcto", "El CrÃ©dito de la persona ".$nombre." fue rechazado correctamente.");
    }


    public function imprimir3($id)
        {
            $sql=DB::select("SELECT persona.*, documentosintesis.FechaInsercion, proveedor.* FROM persona
            INNER JOIN documentosintesis ON persona.ID = documentosintesis.ID_persona
            INNER JOIN proveedor ON persona.ID = proveedor.ID_persona
            WHERE persona.ID = $id");

            $fpdf = new Fpdf('P','mm', 'A4');
            $fpdf = new Fpdf('P','mm', 'A4');
            $fpdf->AddPage("landscape");
            $x = 3;
            $y = 3;
            $w = $fpdf->GetPageWidth() - 150;
            $h = $fpdf->GetPageHeight() - 134;
            $fpdf->Rect($x, $y, $w, $h, 'D');

            foreach ($sql as $resultado) {
                $fecha_actual = Carbon::now('America/Bogota');
                $fecha_string = $fecha_actual->format('d/m/Y');
                $fecha_insercion = Carbon::parse($resultado->FechaInsercion);
                $diferencia = $fecha_actual->diff($fecha_insercion);
            if ($diferencia->days <= 180) {
                $dias_restantes = 180 - $diferencia->days;
                $diferencia_str = "Vence " . ($dias_restantes == 1 ? "1 dÃ­a" : "$dias_restantes dÃ­as");
            } else {
                $diferencia_str = "Vencido";
            }

            $tipoprov = DB::select("SELECT TipoProveedor FROM persona WHERE ID = ?", [$id]);
            $tipoproveedor = $tipoprov[0]->TipoProveedor;


            if($tipoproveedor == "PN"){
            //Cedula
            $fpdf->SetFont('Helvetica', 'B',30);
            $fpdf->Cell(85, 5, utf8_decode('DATACRÃDITO:'));
            $fpdf->SetFont('Helvetica', 'B',38);
            $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
            $fpdf->Cell(20, 12,"");
            $fpdf->Ln();



            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(26,5,utf8_decode('CÃ©dula: '));
            $fpdf->SetFont('Helvetica', '',28);
            $fpdf->Cell(64.8,5,$resultado->Cedula);



            //Nombre
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(30,15,'Nombre: ');
            $fpdf->SetFont('Helvetica', '',20);
            $fpdf->Cell(60.5,15,mb_convert_case($resultado->Nombre, MB_CASE_TITLE, "UTF-8"));

            //Apellidos
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(35,5,'Apellidos: ');
            $fpdf->SetFont('Arial', '',20);
            $fpdf->Cell(70.5,5, strtoupper(utf8_decode($resultado->Apellidos)));

            //fecha
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(59,13.1,''.utf8_decode($diferencia_str));
            $fpdf->SetFont('Helvetica', '',20);


            //Cuenta Asociada
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(37,13,'Fecha Imp: ');
            $fpdf->SetFont('Helvetica', '',20);
            $fpdf->Cell(1,13, $fecha_string);

            //Score
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',31);
            $fpdf->Cell(35.7,8,'Score: ');
            $fpdf->SetFont('Helvetica', 'B',48);



            if ($resultado->Score >= 650) {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            } else {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            }

        }else{
            //Cedula
            $fpdf->SetFont('Helvetica', 'B',30);
            $fpdf->Cell(85, 5, utf8_decode('DATACRÃDITO:'));
            $fpdf->SetFont('Helvetica', 'B',38);
            $fpdf->Cell(20, 5, $resultado->CuentaAsociada);
            $fpdf->Cell(20, 12,"");
            $fpdf->Ln();



            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(15,5,utf8_decode('NIT: '));
            $fpdf->SetFont('Helvetica', '',28);
            $fpdf->Cell(64.8,5,$resultado->NIT);



            //Nombre
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(47,15,utf8_decode('RazÃ³n Social: '));
            $fpdf->SetFont('Helvetica', '',20);
            $fpdf->Cell(60.5,15,mb_convert_case($resultado->RazonSocial, MB_CASE_TITLE, "UTF-8"));

            //Apellidos
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(19,5,'Tipo: ');
            $fpdf->SetFont('Arial', '',20);
            $fpdf->Cell(70.5,5, utf8_decode("Persona JurÃ­dica."));

            //fecha
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(59,13.1,''.utf8_decode($diferencia_str));
            $fpdf->SetFont('Helvetica', '',20);


            //Cuenta Asociada
            $fpdf->SetFont('Helvetica', 'B',20);
            $fpdf->Cell(37,13,'Fecha Imp: ');
            $fpdf->SetFont('Helvetica', '',20);
            $fpdf->Cell(1,13, $fecha_string);

            //Score
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',31);
            $fpdf->Cell(35.7,8,'Score: ');
            $fpdf->SetFont('Helvetica', 'B',48);



            if ($resultado->Score >= 650) {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            } else {
                if (!empty($resultado->Reporte)) {
                    $fpdf->Cell(76, 8, $resultado->Score . "-" . $resultado->Reporte);
                } else {
                    $fpdf->Cell(76, 8, $resultado->Score);
                }
                $fpdf->Ln();
            }
        }




            QrCode::format('png')->generate('http://app.coopserp.com/menu-datacredito/descargarp-'.$id ,public_path('Storage/files/tickets/qr/QR-'.$id.'.png'));


            $fpdf->Image("Storage/files/tickets/qr/QR-".$id.".png", 15, 107, 90, 90);
            $fpdf->Ln();
            $fpdf->SetFont('Helvetica', 'B',48);
            $fpdf->Cell(72,40,'Agencia: ');
            $fpdf->SetFont('Helvetica', '',48);
            $fpdf->Cell(83,40, utf8_decode($resultado->Agencia));

            if($tipoproveedor == "PN"){
            $fpdf->Output('I', 'Storage/files/tickets/Ticket-'.$resultado->Cedula.'.pdf');
            $fpdf->Output('F', 'Storage/files/tickets/Ticket-'.$resultado->Cedula.'.pdf');
            }else{
            $fpdf->Output('I', 'Storage/files/tickets/Ticket-'.$resultado->NIT.'.pdf');
            $fpdf->Output('F', 'Storage/files/tickets/Ticket-'.$resultado->NIT.'.pdf');
            }
            exit;

            }
        }


}

